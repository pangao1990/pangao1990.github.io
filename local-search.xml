<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>myChat——第三方ChatGPT客户端又双叒叕更新啦</title>
    <link href="/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6/"/>
    <url>/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6/</url>
    
    <content type="html"><![CDATA[<h3 id="一句话介绍"><a href="#一句话介绍" class="headerlink" title="一句话介绍"></a>一句话介绍</h3><p>myChat 是一款第三方 ChatGPT 客户端，基于 OpenAI 接口调用，支持 Windows 和 macOS 系统。</p><h3 id="运行前提条件"><a href="#运行前提条件" class="headerlink" title="运行前提条件"></a>运行前提条件</h3><ul><li><strong>魔法上网</strong>。</li><li><strong>需要 sk 码</strong>。本软件不提供也不保存 sk 码，用户需要自行 <a href="https://blog.pangao.vip/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B/">注册账号</a> ，获取 sk 码。</li></ul><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><h4 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h4><p>在 <a href="https://github.com/pangao1990/myChat/releases">https://github.com/pangao1990/myChat/releases</a> 中下载对应系统的最新软件安装包。</p><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-1.png" alt="image"></p><h4 id="Windows-安装步骤"><a href="#Windows-安装步骤" class="headerlink" title="Windows 安装步骤"></a>Windows 安装步骤</h4><ul><li>双击安装包，选择【下一步】</li></ul><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-2.png" alt="image"></p><ul><li>选择【安装】</li></ul><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-3.png" alt="image"></p><ul><li>选择【完成】，即完成软件安装</li></ul><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-4.png" alt="image"></p><h4 id="macOS-安装步骤"><a href="#macOS-安装步骤" class="headerlink" title="macOS 安装步骤"></a>macOS 安装步骤</h4><ul><li>双击安装包，将 myChat.app 拖入右边的 Applications 文件夹，即完成软件安装</li></ul><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-5.png" alt="image"></p><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><ul><li>双击桌面快捷方式，打开 myChat 软件。</li></ul><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-6.png" alt="image"></p><ul><li>首次使用，需要输入 <strong>sk 码</strong>。</li></ul><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-7.png" alt="image"></p><ul><li>【重要】打开魔法上网，设置全局代理。</li></ul><p>此时，便可使用 myChat 客户端与 ChatGPT 对话了。</p><h3 id="高级功能"><a href="#高级功能" class="headerlink" title="高级功能"></a>高级功能</h3><h4 id="新增聊天主题"><a href="#新增聊天主题" class="headerlink" title="新增聊天主题"></a>新增聊天主题</h4><p>点击左上角的 <strong>+号</strong>，即可添加新的聊天主题。</p><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-8.png" alt="image"></p><ul><li>聊天标题：仅为方便使用者标记分类，不会传递给 ChatGPT</li><li>聊天主题：该主题信息会在每一次聊天过程中发送给 AI，请尽量详细描述</li><li>GPT 模型：支持 <strong>gpt-4</strong> 、 <strong>gpt-4-32k</strong> 、 <strong>gpt-3.5-turbo</strong> 、 <strong>text-davinci-003</strong> 等模型。当然了，gpt-4 模型需要 sk 码已经申请获批权限。建议一般情况下使用 gpt-3.5-turbo 模型，性价比最高。</li><li>记忆消息个数：发送给 ChatGPT 的历史消息个数。选择【0】则表示每次都是独立会话，不会发送历史对话记录给 ChatGPT。选择【全部】则表示会将全部历史对话发送给 ChatGPT 作为参考。</li><li>模型参数：也就是 ChatGPT 的 temperature 参数。数值越小，回复越精准。数值越大，回复越多元化。</li></ul><h4 id="主题广场"><a href="#主题广场" class="headerlink" title="主题广场"></a>主题广场</h4><p>本软件预设了很多可用的主题，免费给用户使用。例如：论文润色、模拟面试、担任导游、下五子棋、脱口秀演员、作曲家、心理医生、编写代码、虚拟女友等等。</p><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-9.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-10.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-11.png" alt="image"></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>如若出现魔法上网已开启，但仍然出现连接超时的情况，请手动设置代理 IP 和端口。</p><p>报错信息如下：</p><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-12.png" alt="image"></p><p>左下角【更多设置】选择【设置代理】：</p><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-13.png" alt="image"></p><p>在魔法上网的软件中找到代理 IP 和端口信息，依次填入，确认保存。</p><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-14.png" alt="image"></p><h3 id="软件部分截图"><a href="#软件部分截图" class="headerlink" title="软件部分截图"></a>软件部分截图</h3><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-15.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/myChat%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%88%E5%8F%8C%E5%8F%92%E5%8F%95%E6%9B%B4%E6%96%B0%E5%95%A6-16.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>OpenAI</category>
      
      <category>ChatGPT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>OpenAI</tag>
      
      <tag>ChatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ChatGPT和文心一言分别推荐的CNV分析工具</title>
    <link href="/ChatGPT%E5%92%8C%E6%96%87%E5%BF%83%E4%B8%80%E8%A8%80%E5%88%86%E5%88%AB%E6%8E%A8%E8%8D%90%E7%9A%84CNV%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    <url>/ChatGPT%E5%92%8C%E6%96%87%E5%BF%83%E4%B8%80%E8%A8%80%E5%88%86%E5%88%AB%E6%8E%A8%E8%8D%90%E7%9A%84CNV%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h2 id="分别向-ChatGPT-和文心一言提问"><a href="#分别向-ChatGPT-和文心一言提问" class="headerlink" title="分别向 ChatGPT 和文心一言提问"></a>分别向 ChatGPT 和文心一言提问</h2><p>先贴出 ChatGPT 和文心一言的问答，后面再说我的一些分析。</p><h2 id="ChatGPT"><a href="#ChatGPT" class="headerlink" title="ChatGPT"></a>ChatGPT</h2><h5 id="帮我推荐一款-CNV-分析工具。"><a href="#帮我推荐一款-CNV-分析工具。" class="headerlink" title="帮我推荐一款 CNV 分析工具。"></a>帮我推荐一款 CNV 分析工具。</h5><p>CNVmax 在线工具是一款用于 CNV（拷贝数变异）分析的在线工具，其核心功能包括：</p><ol><li><p>CNV 检测：使用 WES 或 WGS 数据，对样本中的 CNV 进行检测和注释。</p></li><li><p>CNV 可视化：将 CNV 检测结果进行可视化，帮助用户更好地理解和分析数据。</p></li><li><p>CNV 数据库查询：通过 CNVmax 工具，用户可以查询多个公共 CNV 数据库，以获得更多的 CNV 相关信息。</p></li><li><p>CNV 比较：该工具允许用户比较不同样本的 CNV 中的共同和特异的区域，这有助于寻找共同的 CNV 模式。</p></li><li><p>CNV 注释：该工具提供完整的 CNV 注释，包括基因和通路的相关信息，帮助用户理解和解释数据。</p></li></ol><p>需要注意的是，CNVmax 在线工具需要用户上传基因测序数据，因此用户需要谨慎处理和保护自己的数据。同时，请确保使用此工具的合理性和合法性，以遵守相关法律法规。</p><h5 id="请给出-CNVmax-的具体介绍、相关的-github、官网链接。"><a href="#请给出-CNVmax-的具体介绍、相关的-github、官网链接。" class="headerlink" title="请给出 CNVmax 的具体介绍、相关的 github、官网链接。"></a>请给出 CNVmax 的具体介绍、相关的 github、官网链接。</h5><p>CNVmax 是一种高通过量基因组数据分析软件，主要用于检测染色体拷贝数变异（CNVs）和结构变异（SVs）。</p><p>关于 CNVmax 的 GitHub 资源和 API，目前网络上貌似没有可以公开访问的信息。</p><p>至于 CNVmax 的 WEB 链接，这里提供几个可能有用的链接：</p><ol><li><p>CNVmax 官方网站：<a href="http://cnvmax.com/">http://cnvmax.com/</a></p></li><li><p>CNVmax 论坛：<a href="http://cnvmax.com/forum/">http://cnvmax.com/forum/</a></p></li><li><p>以 CNVmax 为基础的在线 CNV 分析工具：<a href="https://kinglorrie.shinyapps.io/CNVmax/">https://kinglorrie.shinyapps.io/CNVmax/</a>, <a href="https://github.com/kinglorrie/CNVmax-R-Shiny">https://github.com/kinglorrie/CNVmax-R-Shiny</a></p></li></ol><p>希望对您有所帮助。</p><h2 id="文心一言"><a href="#文心一言" class="headerlink" title="文心一言"></a>文心一言</h2><h5 id="帮我推荐一款在线处理-CNV-的工具"><a href="#帮我推荐一款在线处理-CNV-的工具" class="headerlink" title="帮我推荐一款在线处理 CNV 的工具"></a>帮我推荐一款在线处理 CNV 的工具</h5><p>当然，以下是一些在线处理 CNV 的工具：</p><ol><li><p>ChatGPT-CNV：这是一个基于 ChatGPT 的 CNV 处理工具，可以自动化地生成报告和代码，帮助您快速诊断和修复 CNV 问题。</p></li><li><p>Qiskit-CNV：这是一个基于 QCompute Coder 的 CNV 处理工具，它可以帮助您生成符合质量要求的 CNV 代码，提高代码质量和可读性。</p></li><li><p>PyTorch-CNV：这是一个基于 PyTorch 的 CNV 处理工具，它可以帮助您生成高质量的 CNV 代码，提高代码质量和可读性。</p></li><li><p>AutoCoder-CNV：这是一个基于 AutoCoder Suite 的 CNV 处理工具，它可以帮助您生成符合质量要求的 CNV 代码，提高代码质量和可读性。</p></li></ol><p>这些工具都提供了不同的功能和用途，您可以根据自己的需求和实际情况选择适合自己的工具。请注意，使用任何工具进行 CNV 处理都需要遵循相应的规范和指南，确保生成的代码质量和可读性。</p><h5 id="CNV-是什么"><a href="#CNV-是什么" class="headerlink" title="CNV 是什么"></a>CNV 是什么</h5><p>CNV 指的是基因拷贝数变异（Copy Number Variation，CNV）。异常的 DNA 拷贝数变化 是 很多人类疾病，如癌症、遗传性疾病等的一种重要分子机制。常被用于遗传性疾病或肿瘤的全基因组 CNV 检测，可直观地显现出遗传性疾病及肿瘤基因组 DNA 的缺失或扩增。对肿瘤而言缺失片段可能含有抑癌基因，而扩增片段则可能存留致癌基因。</p><h5 id="有关于-ChatGPT-CNV-的参考文献吗"><a href="#有关于-ChatGPT-CNV-的参考文献吗" class="headerlink" title="有关于 ChatGPT-CNV 的参考文献吗"></a>有关于 ChatGPT-CNV 的参考文献吗</h5><p>当然，以下是一些与 ChatGPT-CNV 相关的文献：</p><ol><li><p>ChatGPT-CNV is a Transformer model trained on the “Chinese” language dataset that demonstrated significant performance in the task of text generation and language understanding.</p></li><li><p>CNVs are a common form of genetic variation, affecting gene expression levels and susceptibility to disease.</p></li><li><p>The ChatGPT-CNV model demonstrated state-of-the-art performance in generating text and obtaining 理解结果，展示了在文本生成和语义理解任务上的领先性。</p></li><li><p>The generated text was of high quality and matched the annotated words to the original text to a high degree of accuracy.</p></li></ol><p>希望以上信息能对您有所帮助，如果您还有其他问题，欢迎告诉我。</p><h2 id="我的一些思考"><a href="#我的一些思考" class="headerlink" title="我的一些思考"></a>我的一些思考</h2><p>如果不是这个专业的人，可能真的会被这俩人工智能唬住。</p><p>其实，ChatGPT 推荐的这款 CNVmax 软件压根就不存在。提供的官网、论坛、代码仓库也都是虚构的，无法访问。不过，ChatGPT 煞有介事的介绍这款软件的功能，倒是给了我启发。根据他的介绍，我可以自己开发一款这样的软件。当然，更多细节，可以再和 ChatGPT 商讨。</p><p>文心一言给推荐的 CNV 分析软件也同样是虚构的。甚至回答的有点奇怪，以至于我都怀疑文心一言究竟知不知道什么是 CNV。（不过后来她给出的 CNV 名词解释还是比较正确的）这里我选择细问 ChatGPT-CNV 这款软件的参考文献，给出的回答就更离谱了，完全是胡乱拼凑出来的“文献”。</p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>OpenAI</category>
      
      <category>ChatGPT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>OpenAI</tag>
      
      <tag>ChatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>myChat-第三方ChatGPT原生客户端，支持win和mac系统</title>
    <link href="/myChat-%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%8E%9F%E7%94%9F%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E6%94%AF%E6%8C%81win%E5%92%8Cmac%E7%B3%BB%E7%BB%9F/"/>
    <url>/myChat-%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%8E%9F%E7%94%9F%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E6%94%AF%E6%8C%81win%E5%92%8Cmac%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>可能你没体验过 ChatGPT，但肯定听说过。苦于高高的围墙，无法便捷的使用 ChatGPT。那你就不能错过 <strong>myChat</strong> ，一款第三方 ChatGPT 原生客户端。基于 OpenAI 提供的 ChatGPT 同款模型 GPT-3.5，可达到与 ChatGPT 类似的效果，即开即用，不用魔法上网。</p><h3 id="搭后语"><a href="#搭后语" class="headerlink" title="搭后语"></a>搭后语</h3><p>哎，以上是我原本想好的台词。可不曾想 openAI 公司一层层的加码，先是<strong>禁用</strong>了我们国家访问 API，然后又将<strong>18 美元</strong>的免费额度降低到<strong>5 美元</strong>。</p><p>所以吧，我又临时改变了软件用法，支持自定义 API 地址，同时支持输入代理 IP 和端口，以应对 openAI 的封闭。</p><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><h5 id="下载对应程序包"><a href="#下载对应程序包" class="headerlink" title="下载对应程序包"></a>下载对应程序包</h5><p>分别有 win 版，mac 的 M 芯片版，mac 的 Intel 版，在我的 github (<a href="https://github.com/pangao1990/myChat">https://github.com/pangao1990/myChat</a>) 里可以下载对应版本。</p><p><img src="https://pangao1990.gitee.io/pic/myChat-%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%8E%9F%E7%94%9F%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E6%94%AF%E6%8C%81win%E5%92%8Cmac%E7%B3%BB%E7%BB%9F-1.png" alt="image"></p><h5 id="输入-openAI-的-sh-码"><a href="#输入-openAI-的-sh-码" class="headerlink" title="输入 openAI 的 sh 码"></a>输入 openAI 的 sh 码</h5><p>原本想把我的 sh 码预装在程序中的，不过想想。万一我的 sh 码的额度用完了，那岂不是程序也用不了了。所以，这里就还是填写大家自己申请的 sh 码吧。</p><p>可以看我另外一篇博客， <a href="https://pangao1990.gitee.io/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B/">超详细注册 OpenAI 接口账号的教程</a> 获取 <strong>OpenAI API sh 码</strong> 。</p><p>如果嫌麻烦，也可以有偿试用我的 sh 码。谈钱不伤感情。</p><p><img src="https://pangao1990.gitee.io/pic/myChat-%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%8E%9F%E7%94%9F%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E6%94%AF%E6%8C%81win%E5%92%8Cmac%E7%B3%BB%E7%BB%9F-2.png" alt="image"></p><h5 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h5><p>没错，原本是不需要魔法上网的，可惜在 3 月 2 号那天，openAI 把 API 也封锁了，现在国内是访问不了的。所以，想用这款软件，必须要使用魔法。如果是代理上网，这里需要填入代理 IP 和端口。</p><p><img src="https://pangao1990.gitee.io/pic/myChat-%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%8E%9F%E7%94%9F%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E6%94%AF%E6%8C%81win%E5%92%8Cmac%E7%B3%BB%E7%BB%9F-3.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/myChat-%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%8E%9F%E7%94%9F%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E6%94%AF%E6%8C%81win%E5%92%8Cmac%E7%B3%BB%E7%BB%9F-4.png" alt="image"></p><h5 id="新增聊天主题"><a href="#新增聊天主题" class="headerlink" title="新增聊天主题"></a>新增聊天主题</h5><p>这里可以分类设置聊天主题，ChatGPT 会根据不同的聊天主题，来给出不同的回答。</p><p><img src="https://pangao1990.gitee.io/pic/myChat-%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%8E%9F%E7%94%9F%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E6%94%AF%E6%8C%81win%E5%92%8Cmac%E7%B3%BB%E7%BB%9F-5.png" alt="image"></p><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p>要不百度一下，我都不知道 ChatGPT 又在煞有介事的胡说八道。似乎并没有一位叫潘高的著名歌手。这应该是 ChatGPT 自己编的吧。</p><p><img src="https://pangao1990.gitee.io/pic/myChat-%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%8E%9F%E7%94%9F%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E6%94%AF%E6%8C%81win%E5%92%8Cmac%E7%B3%BB%E7%BB%9F-6.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/myChat-%E7%AC%AC%E4%B8%89%E6%96%B9ChatGPT%E5%8E%9F%E7%94%9F%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E6%94%AF%E6%8C%81win%E5%92%8Cmac%E7%B3%BB%E7%BB%9F-7.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>OpenAI</category>
      
      <category>ChatGPT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>OpenAI</tag>
      
      <tag>ChatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于GPT-3.5的真ChatGPT接口来了</title>
    <link href="/%E5%9F%BA%E4%BA%8EGPT-3.5%E7%9A%84%E7%9C%9FChatGPT%E6%8E%A5%E5%8F%A3%E6%9D%A5%E4%BA%86/"/>
    <url>/%E5%9F%BA%E4%BA%8EGPT-3.5%E7%9A%84%E7%9C%9FChatGPT%E6%8E%A5%E5%8F%A3%E6%9D%A5%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨晚 2 点半，OpenAI 给注册用户群发了一封邮件，大致内容就是已经开放 <strong>chatGPT</strong> 相同的模型 <strong>gpt-3.5-turbo</strong> ，注册用户可以随意调用 API。当然了，价格便宜 10 倍。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%9F%BA%E4%BA%8EGPT-3.5%E7%9A%84%E7%9C%9FChatGPT%E6%8E%A5%E5%8F%A3%E6%9D%A5%E4%BA%86-1.png" alt="image"></p><p>体验过官网版本的 ChatGPT(基于 GPT-3.5)和民间自行搭建的聊天应用(基于 GPT-3)后，你就能感受到，GPT-3 和 GPT-3.5 的差距还是挺大的。</p><p>不多说，我们按照官方文档来体验一下 chatGPT 的同款模型 <strong>gpt-3.5-turbo</strong> 究竟有多强大。</p><h2 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h2><p>看过我上一篇博客 <a href="https://pangao1990.gitee.io/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT/">3 分钟教你用 Python 搭建 ChatGPT</a> 的朋友应该都知道，OpenAI 给提供的 API 非常易用，一行代码就可以解决所有问题。当然 GPT-3.5 也是一样，只需要做一点点微调。</p><h3 id="更新-openai-模块"><a href="#更新-openai-模块" class="headerlink" title="更新 openai 模块"></a>更新 openai 模块</h3><p>新的模型得使用 <strong>openai-0.27</strong> 及其以上版本，使用如下代码更新 <strong>openai</strong> 模块。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> -U openai<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E5%9F%BA%E4%BA%8EGPT-3.5%E7%9A%84%E7%9C%9FChatGPT%E6%8E%A5%E5%8F%A3%E6%9D%A5%E4%BA%86-2.png" alt="image"></p><h3 id="调用接口获取返回信息"><a href="#调用接口获取返回信息" class="headerlink" title="调用接口获取返回信息"></a>调用接口获取返回信息</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>调用 <strong>openai.ChatCompletion.create</strong> 函数获取返回信息。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs routeros">import openai<br><br><span class="hljs-comment"># 填写注册OpenAI接口账号时获取的 OpenAI API Key</span><br>openai.api_key = <span class="hljs-string">&quot;OPENAI_API_KEY&quot;</span><br><br><span class="hljs-comment"># 提问</span><br>prompt = <span class="hljs-string">&#x27;你是谁？&#x27;</span><br><br><span class="hljs-comment"># 访问OpenAI接口</span><br>response = openai.ChatCompletion.create(<br>    <span class="hljs-attribute">model</span>=<span class="hljs-string">&#x27;gpt-3.5-turbo&#x27;</span>,<br>    messages=[<br>        &#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;system&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;你是潘高的私人智能助手。&quot;</span>&#125;,<br>        # &#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;谁赢得了2020年的世界职业棒球大赛?&quot;</span>&#125;,<br>        # &#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;assistant&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;洛杉矶道奇队在2020年赢得了世界职业棒球大赛冠军。&quot;</span>&#125;,<br>        &#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: prompt&#125;<br>    ]<br>)<br><br><span class="hljs-comment"># 返回信息</span><br>resText = response.choices[0].message.content<br><br><span class="hljs-built_in">print</span>(resText)<br></code></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><p>model：使用的模型，gpt-3.5-turbo 是 Chat-GPT 同款模型</p></li><li><p>messages：消息参数，必须是数组。对话消息可以短至 1 条，也可以填充整个对话消息。通常，对话首先是 system 角色，用于给模型定下一些规则。当然，也可以加入一些 用户角色 user 和 模型角色 assistant 的对话内容，以便模型可以理解回顾历史对话内容。</p></li></ul><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>这里我同步测试 GPT-3 和 GPT-3.5 ，看看这次更新的效果。</p><h4 id="提问"><a href="#提问" class="headerlink" title="提问"></a>提问</h4><p>请描述苯丙酮尿症的主要症状及发病机制</p><h4 id="GPT-3"><a href="#GPT-3" class="headerlink" title="GPT-3"></a>GPT-3</h4><p>苯丙酮尿症是一种常染色体隐性遗传性疾病，其症状是尿中阳性的酮体（3-hydroxybutyrate）的持续增加 。它的典型症状有脱水、呕吐、腹泻、乏力和抽搐等，患者血液中血氨含量异常升高。该疾病已成为某些区域新生儿死亡的主要原因。</p><p>发病机制主要是由于缺乏脂肪酸代谢步骤中参与 β-氧化过程的苯丙酮酸脱氢酶（BDH）。由于缺乏苯丙酮酸脱氢酶，导致正常的脂肪代谢受阻，脂肪分解的产物（如酰乙酸和羧酸）无法正常代谢，可以把这些残留物转化为酮体，而酮体排入尿液中。</p><h4 id="GPT-3-5"><a href="#GPT-3-5" class="headerlink" title="GPT-3.5"></a>GPT-3.5</h4><p>苯丙酮尿症是一种遗传代谢疾病，主要特点是体内缺乏苯丙酮羟化酶（PAH）或其辅助酶，导致苯丙氨酸不能正常分解代谢，导致体内苯丙氨酸等代谢物质的积累，引起神经系统的功能障碍。</p><p>苯丙酮尿症的主要症状包括发育延迟、运动协调障碍、言语障碍、情绪不稳定、智力低下等。在新生儿和婴儿期，突出表现为精神发育迟缓、受累神经学体征和不同程度的脑病，可能会导致癫痫、智力障碍等严重后果。</p><p>苯丙酮尿症的发病机制是由于 PAH 基因突变导致 PAH 酶活性降低或完全缺失，使得苯丙氨酸不能正常分解代谢，导致苯丙氨酸等代谢物质的积累，引起神经系统的功能障碍。此外，苯丙氨酸代谢产物苯丙酮、苯丙醇及苯丙酸等可引起脑细胞氧化应激反应，导致脑损伤和神经系统紊乱。</p><h4 id="我的看法"><a href="#我的看法" class="headerlink" title="我的看法"></a>我的看法</h4><p>这两个问答都是不错的。GPT-3.5 的字数多，详细一些。</p><hr><h4 id="提问-1"><a href="#提问-1" class="headerlink" title="提问"></a>提问</h4><p>2023 年 A 股能涨到 4000 点吗？</p><h4 id="GPT-3-1"><a href="#GPT-3-1" class="headerlink" title="GPT-3"></a>GPT-3</h4><p>不能。在当前的政治、经济和市场状况下，2023 年 A 股能涨到 4000 点是几乎不可能的。从历史上看，A 股价格在 2000 年上涨到 3000 点后几乎始终保持稳定，最高也没有超过 3500 点。因此，即使在未来几年里市场形势有所改善，A 股也不太可能突破 4000 点。</p><h4 id="GPT-3-5-1"><a href="#GPT-3-5-1" class="headerlink" title="GPT-3.5"></a>GPT-3.5</h4><p>作为一个 AI 语言模型，我无法对未来股市的涨跌作出准确的预测，因为股市的波动往往受到众多因素的影响，包括宏观经济、政策变化、地缘政治风险等等。投资者可以通过研究市场走势、分析公司基本面和行业情况等等来做出自己的判断和决策。</p><h4 id="我的看法-1"><a href="#我的看法-1" class="headerlink" title="我的看法"></a>我的看法</h4><p>GPT-3 会根据自己的理解给出肯定的回答，至于这个答案对不对，我无法预知。不过，GPT-3 说历史上从未超过 3500 点，我依稀记得 A 股曾经最高到了 6000 多点。用历史数据推测将来事件，我也无法评价这个模型的好坏。</p><p>GPT-3.5 的回答就中庸得多。首先说我不知道，然后给出一堆看似合理又没有多大作用的回答。不过，本身我这个问题也是没有正确答案的，AI 能回答到这个地步，已经是非常非常不错了。</p><hr><h4 id="提问-2"><a href="#提问-2" class="headerlink" title="提问"></a>提问</h4><p>你能替代程序员吗？</p><h4 id="GPT-3-2"><a href="#GPT-3-2" class="headerlink" title="GPT-3"></a>GPT-3</h4><p>不能，作为程序员需要掌握许多技能，如编写代码，使用各种编程语言，调试，建立软件架构等，这些技能是无法通过其他方式替代的。</p><h4 id="GPT-3-5-2"><a href="#GPT-3-5-2" class="headerlink" title="GPT-3.5"></a>GPT-3.5</h4><p>很抱歉，我不能替代程序员。尽管我是一款对话交互的人工智能程序，但我只能根据提供给我的算法和数据回答问题和执行任务。而程序员则需要深入了解编程语言和计算机科学，才能创造性地解决各种技术问题。虽然我可以提供一些编程建议和文档查询，但我无法取代专业的程序员。</p><h4 id="我的看法-2"><a href="#我的看法-2" class="headerlink" title="我的看法"></a>我的看法</h4><p>首先，我对他们的回答非常满意，至少当前环境下，我还不会被替代。再者，GPT-3.5 的的确确在文本方面要强一些。似乎也更懂人情世故一些，不说“不能”，而说“抱歉，我不能…”。这应该是个进步吧。</p><hr><h4 id="提问-3"><a href="#提问-3" class="headerlink" title="提问"></a>提问</h4><p>你使用的模型是 GPT-3 还是 GPT-3.5？</p><h4 id="GPT-3-3"><a href="#GPT-3-3" class="headerlink" title="GPT-3"></a>GPT-3</h4><p>我使用的是 GPT-3。</p><h4 id="GPT-3-5-3"><a href="#GPT-3-5-3" class="headerlink" title="GPT-3.5"></a>GPT-3.5</h4><p>我是 OpenAI 的 GPT-3 模型。至于 GPT-3.5，目前并没有这个版本的存在，它只是一个虚构的版本。</p><h4 id="我的看法-3"><a href="#我的看法-3" class="headerlink" title="我的看法"></a>我的看法</h4><p>我。。。我被耍了吗？不是说 <strong>gpt-3.5-turbo</strong> 是基于 GPT-3.5 吗？她自己都说自己是 GPT-3 模型。这是怎么肥事？</p><hr><h2 id="我的一点思考"><a href="#我的一点思考" class="headerlink" title="我的一点思考"></a>我的一点思考</h2><p>总体而言，和我想象的结果相差不大，GPT-3.5 的确是技高一筹。根据我这次<strong>不严谨的测试</strong>，我得到一些结论。</p><ul><li>在一些既定的专业的问题上，GPT 模型还是可以给出一个比较让人满意的答案。</li><li>即便是有正确的训练数据，GPT-3 模型也有可能给出错误的结论，更别说预测未来的事件。当然，GPT-3.5 模型没有这个问题，因为 GPT-3.5 不确定的事情，绝不多瞎说一个字。</li><li>GPT 模型的宗旨应该是协助人类来更好的完成工作，而不是替代人类完成工作。</li><li>GPT 模型进化速度非常快，相信将来会更加让人吃惊。</li></ul><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>如果我说，这篇博客是 <strong>GPT-3.5</strong> 帮我写的，你怕了吗？</p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>OpenAI</category>
      
      <category>ChatGPT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>OpenAI</tag>
      
      <tag>ChatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>3分钟教你用Python搭建ChatGPT</title>
    <link href="/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT/"/>
    <url>/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p><strong>ChatGPT</strong> 近期以强大的对话和信息整合能力风靡全网。起初，她并没有引起我很大的兴趣。我认为这不过又是互联网公司寻求新的经济增长点的风口而已。</p><p>就像几年前的 <strong>区块链</strong> ，大大小小的公司趋之若鹜，记得我当时的老东家也推出一款去中心化的 APP，用于存储自己的基因数据。现在已经没有人谈及区块链技术了。</p><p>就像最近 1-2 年的 <strong>元宇宙</strong> ，据说甚至有学校成立了元宇宙学院，自从扎克伯格晒出一个简陋无比的元宇宙照片之后，简直是将元宇宙的破烂底裤展示在世人面前。如今，元宇宙成了个笑话。</p><p>基于我浅薄的认知，我并没有过多关注 <strong>ChatGPT</strong> 。直到今天的一些私人原因，我才开始正式了解她。</p><h2 id="ChatGPT-是什么"><a href="#ChatGPT-是什么" class="headerlink" title="ChatGPT 是什么"></a>ChatGPT 是什么</h2><p>ChatGPT 的全称是 <strong>Chat Generative Pre-trained Transformer</strong> 。我的理解她是一个基于 <strong>Transformer 模型</strong> 由预训练数据生成对话信息的应用。（PS：Transformer 模型，是谷歌在 2017 年推出的 NLP 经典模型）</p><p>由她的名字，我猜测，ChatGPT 并不是在全网实时搜索最佳答案，而是根据预先训练的数据，实时拼凑出一个答案。这个答案可能并不一定是正确的，但不管你信不信，反正 ChatGPT 自己是相信这个答案的。</p><h2 id="ChatGPT-的前世今生"><a href="#ChatGPT-的前世今生" class="headerlink" title="ChatGPT 的前世今生"></a>ChatGPT 的前世今生</h2><p><img src="https://pangao1990.gitee.io/pic/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT-1.png" alt="image"></p><p>我们所说的 <strong>ChatGPT</strong> 其实是基于 <strong>GPT-3.5 模型</strong> 开发得到的。截至目前，OpenAI 公司并没有开放 GPT-3.5 的接口。因此我们只能通过 OpenAI 的官方网站 <a href="https://chat.openai.com/">https://chat.openai.com/</a> 来访问 ChatGPT。（<a href="https://ai.com/">https://ai.com</a> 这个地址是 OpenAI 花重金购买的，同样可以跳转到 ChatGPT 官网）</p><p>现在网上出现的一些 ChatGPT 中文版，ChatGPT 微信版等等都是基于 2020 年的 <strong>GPT-3 模型</strong> 开发而来。虽然和基于<strong>GPT-3.5 模型</strong>演化而来的 <strong>ChatGPT</strong> 没法比。但是同样能带我们体验人工智能的美妙。</p><p>而我们今天要搭建的 <strong>ChatGPT</strong> 同样是基于<strong>GPT-3 模型</strong>开发。</p><h2 id="用-Python-搭建-ChatGPT"><a href="#用-Python-搭建-ChatGPT" class="headerlink" title="用 Python 搭建 ChatGPT"></a>用 Python 搭建 ChatGPT</h2><h3 id="获取-OpenAI-API-Key"><a href="#获取-OpenAI-API-Key" class="headerlink" title="获取 OpenAI API Key"></a>获取 OpenAI API Key</h3><p>由我的另一篇博客 <a href="https://pangao1990.gitee.io/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B/">超详细注册 OpenAI 接口账号的教程</a> 获取 <strong>OpenAI API Key</strong> 。</p><p><img src="https://pangao1990.gitee.io/pic/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT-2.png" alt="image"></p><h3 id="安装-openai-模块"><a href="#安装-openai-模块" class="headerlink" title="安装 openai 模块"></a>安装 openai 模块</h3><p>使用如下代码安装 <strong>openai</strong> 模块。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> openai<br></code></pre></td></tr></table></figure><h3 id="调用接口获取返回信息"><a href="#调用接口获取返回信息" class="headerlink" title="调用接口获取返回信息"></a>调用接口获取返回信息</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>调用 <strong>openai.Completion.create</strong> 函数获取返回信息。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs routeros">import openai<br><br><span class="hljs-comment"># 填写注册OpenAI接口账号时获取的 OpenAI API Key</span><br>openai.api_key = <span class="hljs-string">&quot;OPENAI_API_KEY&quot;</span><br><br><span class="hljs-comment"># 提问</span><br>issue = <span class="hljs-string">&#x27;你是谁？&#x27;</span><br><br><span class="hljs-comment"># 访问OpenAI接口</span><br>response = openai.Completion.create(<br>  <span class="hljs-attribute">model</span>=<span class="hljs-string">&#x27;text-davinci-003&#x27;</span>,<br>  <span class="hljs-attribute">prompt</span>=issue,<br>  <span class="hljs-attribute">temperature</span>=0.9,<br>  <span class="hljs-attribute">max_tokens</span>=150,<br>  <span class="hljs-attribute">top_p</span>=1,<br>  <span class="hljs-attribute">frequency_penalty</span>=0.0,<br>  <span class="hljs-attribute">presence_penalty</span>=0.6<br>)<br><br><span class="hljs-comment"># 返回信息</span><br>resText = response.choices[0].text<br><br><span class="hljs-built_in">print</span>(resText)<br></code></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li>model：使用的模型，可选内容如下：</li></ul><p><img src="https://pangao1990.gitee.io/pic/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT-3.png" alt="image"></p><ul><li>prompt：提问，提问描述越详细，回答越准确</li><li>temperature：控制结果的随机性，如果希望结果更有差异性 0.9，或者希望有固定结果可以尝试 0.0</li><li>max_tokens：生成结果时的最大 tokens 数。平均一个汉字是 2 个 tokens，text-davinci-003 最多是 4000 个 tokens，也就是 2000 个汉字左右</li><li>top_p：一个可用于代替 temperature 的参数，对应机器学习中 nucleus sampling，如果设置 0.1 意味着只考虑构成前 10% 概率质量的 tokens</li><li>frequency_penalty：控制字符的重复度，取值为 -2.0 ~ 2.0 之间的数字</li><li>presence_penalty：控制主题的重复度，取值为 -2.0 ~ 2.0 之间的数字</li></ul><h2 id="测试-ChatGPT"><a href="#测试-ChatGPT" class="headerlink" title="测试 ChatGPT"></a>测试 ChatGPT</h2><p><img src="https://pangao1990.gitee.io/pic/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT-4.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT-5.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT-6.png" alt="image"></p><p>别的不敢评价，就是这个最后用 python 写冒泡排序，我给打 99 分。代码最后莫名其妙多出一个逗号，原以为这代码肯定会报错，谁知道测试了下可以正常运行，运行结果也是对的。后来查了一下资料，原来 print()后面加上逗号可以让回车符失效，ChatGPT 是故意这么做的，这是我不知道的知识点。给她扣掉一分，是因为这代码空格和回车有点太随意了，并不是特别工整。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>免费的 API 接口是有额度限制的。每个账号有 <strong>18 美元</strong> 的免费额度，限期 <strong>3 个月</strong> 。 不同的模式计费不同，<strong>text-davinci-003</strong> 这个模式大约每 1000 个 tokens 扣费 0.02 美元。</p><p><img src="https://pangao1990.gitee.io/pic/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT-7.png" alt="image"></p><p>除此以外，OpenAI 的接口还有如下功能，静待你的挖掘。</p><p><img src="https://pangao1990.gitee.io/pic/3%E5%88%86%E9%92%9F%E6%95%99%E4%BD%A0%E7%94%A8Python%E6%90%AD%E5%BB%BAChatGPT-8.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>OpenAI</category>
      
      <category>ChatGPT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>OpenAI</tag>
      
      <tag>ChatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>超详细注册OpenAI接口账号的教程</title>
    <link href="/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B/"/>
    <url>/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>魔法上网（必备）</li><li>用于注册的邮箱（QQ 邮箱、网易邮箱都行）</li><li>一个国外的手机号，用于接收验证码（当然也有其他办法，后面会讲）</li><li>谷歌浏览器（其他带有无痕模式的浏览器也行）</li></ul><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><h5 id="魔法上网"><a href="#魔法上网" class="headerlink" title="魔法上网"></a>魔法上网</h5><p>这个就不过多介绍了，再多说一点，我就要去陪吴亦凡了。</p><h5 id="创建-OpenAI-账号"><a href="#创建-OpenAI-账号" class="headerlink" title="创建 OpenAI 账号"></a>创建 OpenAI 账号</h5><p>谷歌浏览器打开 <a href="https://openai.com/">OpenAI</a> 首页，地址为：<a href="https://openai.com/">https://openai.com/</a> 。点击 API 选项。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-1.png" alt="image"></p><p>点击 SIGN UP，注册账号。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-2.png" alt="image"></p><p>有可能会要求验证是真人还是机器人，勾选上方框即可。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-3.png" alt="image"></p><p>如果没有使用魔法上网，或者之前被 OpenAI 记录为不可用地区，就会出现 <strong>OpenAI’s services are not available in your country</strong> 的提示。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-4.png" alt="image"></p><p>解决这个问题的方法也很简单。鼠标放在网页中，右键，点击 <strong>检查</strong> 。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-5.png" alt="image"></p><p>在弹出的菜单中选择 <strong>应用</strong> 。将 <strong>本地存储空间</strong> 的数据清除。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-6.png" alt="image"></p><p>记得魔法上网需要选择 <strong>全局代理</strong> 。</p><p>此时刷新页面，就可以显示注册信息了。填入对应信息，点击 <strong>继续</strong> 。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-7.png" alt="image"></p><p>此时，需要用到国外手机号接收短信验证码了。不用尝试，国内号码是不可用的。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-8.png" alt="image"></p><p>这时候就要借助 <a href="https://openai.com/">sms-activate</a> 的能力了。访问接码平台首页：<a href="https://sms-activate.org/cn">https://sms-activate.org/cn</a> 。注册账号。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-9.png" alt="image"></p><p>点击 <strong>充值</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-10.png" alt="image"></p><p>选择 <strong>支付宝</strong> 充值。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-11.png" alt="image"></p><p>因为最低要求充值 1 美元，所以咱们就充值 1 美元。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-12.png" alt="image"></p><p>选择 <strong>OpenAI</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-13.png" alt="image"></p><p>选择 <strong>美国</strong> ，点击 <strong>购物车</strong> 进行购买。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-14.png" alt="image"></p><p>购买成功后，在箭头所指地方就会有一个手机号。将手机号复制到刚才 <strong>OpenAI</strong> 注册手机号的地方，点击 <strong>发送验证码</strong> 。此处就会出现一个动态验证码。复制填写到 <strong>OpenAI</strong> 验证码输入框中。</p><p>注意，这个手机号仅能使用 <strong>20 分钟</strong> ，由于我注册的手机号已经使用过了，因此这个地方没有手机号可展示。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-15.png" alt="image"></p><p>完成手机验证后，<strong>OpenAI</strong> 会让选择使用本服务的原因，随便选一个即可。我选的是 <strong>个人使用</strong> 。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-16.png" alt="image"></p><p>到这里，就注册成功了。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-17.png" alt="image"></p><h2 id="获取-Secret-Key"><a href="#获取-Secret-Key" class="headerlink" title="获取 Secret Key"></a>获取 Secret Key</h2><p>依次点击 <strong>个人头像</strong> -&gt; <strong>API Keys</strong> -&gt; <strong>Create new secret key</strong> ，即可获取 <strong>Secret Key</strong> 。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-18.png" alt="image"></p><p>最后，记得要保存 <strong>Secret Key</strong> 哟。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B6%85%E8%AF%A6%E7%BB%86%E6%B3%A8%E5%86%8COpenAI%E6%8E%A5%E5%8F%A3%E8%B4%A6%E5%8F%B7%E7%9A%84%E6%95%99%E7%A8%8B-19.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>OpenAI</category>
      
      <category>ChatGPT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>OpenAI</tag>
      
      <tag>ChatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一个在linux下编程容易被忽视的小bug</title>
    <link href="/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug/"/>
    <url>/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近在做新项目，好久没更新博客了。正巧今天朋友问了我一个 bug 怎么解决，今天就抽空把这个问题记录一下。</p><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p>由于涉及到公司项目的源码，我就不贴出她给我看的代码截图了。这里我简化一下变量，只贴出关键部分。如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">my <span class="hljs-variable">$rootDir</span> = <span class="hljs-string">&#x27;.&#x27;</span>;<br>my <span class="hljs-variable">$time</span>=`<span class="hljs-built_in">date</span> <span class="hljs-string">&#x27;+%Y%m%d-%H%M%S&#x27;</span>`;<br><br>`<span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>`;<br><br><span class="hljs-built_in">chdir</span> <span class="hljs-string">&quot;<span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>&quot;</span> or die <span class="hljs-string">&quot;cannot cd to <span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span> : <span class="hljs-variable">$_</span>&quot;</span>;<br></code></pre></td></tr></table></figure><p>这段代码的逻辑很简单。</p><ol><li>在当前目录创建一个带有时间信息的文件夹；</li><li>进入文件夹。</li></ol><p>运行结果如下所示：</p><p><img src="https://pangao1990.gitee.io/pic/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug-1.png" alt="image"></p><p>的确如她所说，报错了。报错信息提示，找不到这个文件夹。</p><p>可是，明明在当前目录生成了同名文件夹。这就奇怪了。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug-2.png" alt="image"></p><h3 id="找-bug"><a href="#找-bug" class="headerlink" title="找 bug"></a>找 bug</h3><p>接下来就是我找 bug 的思路。</p><p>根据经验，我最先想到就是会不会在路径中有空格？因为我之前做项目有过类似的经历，路径中存在空格或存在中文字符的时候，容易出现一些问题。</p><p>不过，没几秒钟我就被啪啪打脸了。因为这个路径和文件夹名称中既没有空格，也没有中文字符。</p><p>用眼睛看，我是看不出有啥问题了。只能是来反向推，一条条的检查代码。</p><ul><li>首先，我选择在报错代码行的前面打印这个报错路径，然后判断一下路径是不是真的不存在。代码如下所示：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">my <span class="hljs-variable">$rootDir</span> = <span class="hljs-string">&#x27;.&#x27;</span>;<br>my <span class="hljs-variable">$time</span>=`<span class="hljs-built_in">date</span> <span class="hljs-string">&#x27;+%Y%m%d-%H%M%S&#x27;</span>`;<br><br>`<span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>`;<br><br><span class="hljs-comment"># 开始检查</span><br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;<span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>&quot;</span>;<br><span class="hljs-keyword">if</span> (-e <span class="hljs-string">&quot;<span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>&quot;</span>) &#123;<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;exist\n&quot;</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;not exist\n&quot;</span>;<br>&#125;<br><span class="hljs-comment"># 结束检查</span><br><br><span class="hljs-built_in">chdir</span> <span class="hljs-string">&quot;<span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>&quot;</span> or die <span class="hljs-string">&quot;cannot cd to <span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span> : <span class="hljs-variable">$_</span>&quot;</span>;<br></code></pre></td></tr></table></figure><p>咳，没有惊喜，依旧是提示找不到这个路径。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug-3.png" alt="image"></p><ul><li>那是不是这个路径有啥问题呀？我在路径后面加一个 <strong>&#x2F;</strong> 试试。有编程基础的朋友都知道，在路径后面加上 <strong>&#x2F;</strong> ，在大多数情况下都是没有任何影响的。那么，来试试看。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">my <span class="hljs-variable">$rootDir</span> = <span class="hljs-string">&#x27;.&#x27;</span>;<br>my <span class="hljs-variable">$time</span>=`<span class="hljs-built_in">date</span> <span class="hljs-string">&#x27;+%Y%m%d-%H%M%S&#x27;</span>`;<br><br>`<span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>`;<br><br><span class="hljs-comment"># 开始检查</span><br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;<span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>/&quot;</span>; <span class="hljs-comment"># 在路径结尾添加一个 /</span><br><span class="hljs-keyword">if</span> (-e <span class="hljs-string">&quot;<span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>&quot;</span>) &#123;<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;exist\n&quot;</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;not exist\n&quot;</span>;<br>&#125;<br><span class="hljs-comment"># 结束检查</span><br><br><span class="hljs-built_in">chdir</span> <span class="hljs-string">&quot;<span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span>&quot;</span> or die <span class="hljs-string">&quot;cannot cd to <span class="hljs-variable">$rootDir</span>/XX_<span class="hljs-variable">$time</span> : <span class="hljs-variable">$_</span>&quot;</span>;<br></code></pre></td></tr></table></figure><p>运行结果如下所示。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug-4.png" alt="image"></p><p>嘿，惊喜来了。打印结果和我想象中不一样。</p><p>理论上应该打印如下信息。路径后的 <strong>&#x2F;</strong> 应该紧跟路径才对，怎么会换行呢？</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/XX_20220719-172805/</span><br>not exist<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug-5.png" alt="image"></p><h3 id="定位-bug"><a href="#定位-bug" class="headerlink" title="定位 bug"></a>定位 bug</h3><p>噢！我知道了，是获取时间信息时，遗留下来的回车符。</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cos">my <span class="hljs-built_in">$time</span>=`date &#x27;+<span class="hljs-built_in">%Y</span><span class="hljs-built_in">%m</span><span class="hljs-built_in">%d</span>-<span class="hljs-built_in">%H</span><span class="hljs-built_in">%M</span><span class="hljs-built_in">%S</span>&#x27;`<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug-6.png" alt="image"></p><p>果然，这里有一个回车。那么 bug 就找到了。就是这个地方多了个回车符，导致路径不匹配，一直提示“找不到路径”。</p><h3 id="修复-bug"><a href="#修复-bug" class="headerlink" title="修复 bug"></a>修复 bug</h3><p>添加一行代码，对获取的时间变量，去掉其末尾的回车符。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $rootDir = <span class="hljs-string">&#x27;.&#x27;</span>;<br><span class="hljs-keyword">my</span> $time=<span class="hljs-string">`date &#x27;+%Y%m%d-%H%M%S&#x27;`</span>;<br><br><span class="hljs-keyword">chomp</span> $time; <span class="hljs-comment"># 去掉末尾的回车符</span><br><br><span class="hljs-string">`mkdir $rootDir/XX_$time`</span>;<br><br><span class="hljs-keyword">chdir</span> <span class="hljs-string">&quot;$rootDir/XX_$time&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span> <span class="hljs-string">&quot;cannot cd to $rootDir/XX_$time : $_&quot;</span>;<br></code></pre></td></tr></table></figure><p>这样，程序就顺利执行了。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug-7.png" alt="image"></p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>其实，现在拿着结果来找原因，还是有迹可循的。我们再回过头来看最初的报错信息。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug-8.png" alt="image"></p><p>这里就已经展现出一个回车了，只是混在报错信息中，不太容易被察觉到。</p><h3 id="总结思考"><a href="#总结思考" class="headerlink" title="总结思考"></a>总结思考</h3><p>在 linux 操作中很多命令的返回信息都会带有回车。如果你也是平时喜欢在程序中直接调用 linux 自带的命令，那么这个回车符一定要记得去掉噢。</p><p>那么，今天的 bug 就找到这儿吧，下课～</p><p><img src="https://pangao1990.gitee.io/pic/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%9C%A8linux%E4%B8%8B%E7%BC%96%E7%A8%8B%E5%AE%B9%E6%98%93%E8%A2%AB%E5%BF%BD%E8%A7%86%E7%9A%84%E5%B0%8Fbug-9.jpeg" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>Perl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Perl</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript和Python打造跨平台客户端应用——vue-pywebview-pyinstaller</title>
    <link href="/JavaScript%E5%92%8CPython%E6%89%93%E9%80%A0%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94vue-pywebview-pyinstaller/"/>
    <url>/JavaScript%E5%92%8CPython%E6%89%93%E9%80%A0%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94vue-pywebview-pyinstaller/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>现如今，要说比较火的编程语言当属 JavaScript 和 Python 了，这两门语言都可以独立编写前端页面、后端服务器、手机 APP、电脑客户端等等，无所不能。不过，不同的编程语言有不同的侧重点。比如 JavaScript 写网页得心应手，Python 处理大数据信手拈来。那么，能不能取两者的优点，构建一个跨平台客户端框架呢？这就有了今天的主角：<a href="https://github.com/pangao1990/vue-pywebview-pyinstaller">vue-pywebview-pyinstaller</a>。</p><h3 id="应用简介"><a href="#应用简介" class="headerlink" title="应用简介"></a>应用简介</h3><p><a href="https://github.com/pangao1990/vue-pywebview-pyinstaller">vue-pywebview-pyinstaller</a> 基于 pywebview 和 PyInstaller 框架，构建 macOS 和 windows 平台的客户端。本应用的视图层支持 Vue、React、Angular、HTML 中的任意一种，业务层采用本地 Python。考虑到某些生物计算场景数据量大，数据私密，因此将数据上传到服务器计算，并不一定是最优解，选择采用本地 Python 也是一种不错的选择。不过，如果需要调用远程 API，本应用也是支持的。</p><h5 id="应用优势"><a href="#应用优势" class="headerlink" title="应用优势"></a>应用优势</h5><ul><li>视图层可使用任意一款你喜欢的前端框架，比如 Vue、React、Angular、HTML 等，迁移无压力</li><li>采用 Python 编程语言开发业务层，模块丰富</li><li>本应用已经封装打包环节，一键生成 macOS 和 windows 平台的客户端应用。开发者只需要关注视图效果和业务逻辑本身，将繁重复杂的打包环节交给本应用处理即可</li></ul><h5 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h5><ul><li>对软件的用户界面有一定美感要求</li><li>需要用到 Python 中的人工智能、生信分析等模块</li><li>考虑搭建本地应用，使用本机计算和存储资源</li></ul><h5 id="适用人群"><a href="#适用人群" class="headerlink" title="适用人群"></a>适用人群</h5><p>熟悉 Python3 和 任意一款前端框架，如 Vue、React、Angular、HTML 编程的程序员。</p><h3 id="应用安装"><a href="#应用安装" class="headerlink" title="应用安装"></a>应用安装</h3><h4 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h4><ul><li>npm8.0+ (<a href="https://pangao1990.gitee.io/NodeJs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/">NodeJs 安装教程</a>)</li><li>Python3.6-3.8 (<a href="https://pangao1990.gitee.io/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%A8%A1%E5%9D%97%E5%AE%89%E8%A3%85">Python 安装教程</a>)</li></ul><h4 id="应用下载"><a href="#应用下载" class="headerlink" title="应用下载"></a>应用下载</h4><p>利用 git（<a href="https://pangao1990.gitee.io/Git%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/">git 安装教程</a>） 下载应用，如下所示：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/pangao1990/</span>vue-pywebview-pyinstaller.git<br></code></pre></td></tr></table></figure><p>或者，直接在我的 <a href="https://github.com/pangao1990/vue-pywebview-pyinstaller">github</a> 下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入项目</span><br><span class="hljs-built_in">cd</span> vue-pywebview-pyinstaller<br></code></pre></td></tr></table></figure><p>进入项目，项目清单如下所示：</p><p><img src="https://pangao1990.gitee.io/pic/JavaScript%E5%92%8CPython%E6%89%93%E9%80%A0%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94vue-pywebview-pyinstaller-1.png" alt="image"></p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>下载完毕后，运行初始化命令，程序会自动下载安装对应操作平台的所需依赖软件，如下所示：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 初始化</span><br>npm <span class="hljs-built_in">run</span> init<br></code></pre></td></tr></table></figure><p>没报错信息，则初始化完成，如下所示：</p><p><img src="https://pangao1990.gitee.io/pic/JavaScript%E5%92%8CPython%E6%89%93%E9%80%A0%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94vue-pywebview-pyinstaller-2.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/JavaScript%E5%92%8CPython%E6%89%93%E9%80%A0%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94vue-pywebview-pyinstaller-3.png" alt="image"></p><p>项目里多了一个 node_modules 文件夹，用于存放 npm 下载的包；多了一个 pyenv 文件夹，用于存放 Python 虚拟环境。</p><h3 id="应用运行"><a href="#应用运行" class="headerlink" title="应用运行"></a>应用运行</h3><p>输入如下命令，即可启动应用：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm <span class="hljs-built_in">run</span> start<br></code></pre></td></tr></table></figure><p>终端显示如下：</p><p><img src="https://pangao1990.gitee.io/pic/JavaScript%E5%92%8CPython%E6%89%93%E9%80%A0%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94vue-pywebview-pyinstaller-4.png" alt="image"></p><p>同时，会启动一个客户端程序，如下：</p><p><img src="https://pangao1990.gitee.io/pic/JavaScript%E5%92%8CPython%E6%89%93%E9%80%A0%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94vue-pywebview-pyinstaller-5.png" alt="image"></p><p>整体效果如下所示（gif 图片加载可能有点慢）：</p><p><img src="https://pangao1990.gitee.io/pic/JavaScript%E5%92%8CPython%E6%89%93%E9%80%A0%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94vue-pywebview-pyinstaller-6.gif" alt="image"></p><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h3><h4 id="客户端引擎介绍"><a href="#客户端引擎介绍" class="headerlink" title="客户端引擎介绍"></a>客户端引擎介绍</h4><p>本应用基于 <a href="https://pywebview.flowrl.com/">pywebview</a> 构建客户端。而 pywebview 构架构建客户端的原理是利用本地电脑自带的浏览器引擎驱动，模拟生成客户端。本质上还是网页，或者说是一个浏览器，但是感官上和本地客户端没有差别。</p><p>那么，基于 pywebview 构架构建客户端的成败或质量，就与本地电脑的浏览器引擎息息相关了。</p><h5 id="windows-系统"><a href="#windows-系统" class="headerlink" title="windows 系统"></a>windows 系统</h5><p>在 windows 系统上，大体上分为两类客户端引擎：正常模式和兼容模式。</p><ul><li>正常模式</li></ul><p>正常模式下，按照 edgechromium ，edgehtml， mshtml 的客户端引擎依次检索。如果本地电脑 edge 浏览器支持这些引擎，则客户端可以正常启动。否则，请安装对应的 <a href="https://developer.microsoft.com/en-us/microsoft-edge/webview2/">EdgeWebView2Runtime</a> 浏览器引擎。</p><ul><li>兼容模式</li></ul><p>如果本地电脑 edge 浏览器不支持这些引擎，同时也不想下载 <a href="https://developer.microsoft.com/en-us/microsoft-edge/webview2/">EdgeWebView2Runtime</a> ，那么就可以使用兼容模式。兼容模式的原理就是利用 <a href="https://github.com/cztomczak/cefpython">CEFPython</a>，嵌入 Chromium 的 Web 浏览器控件。也就是只要本地电脑安装了谷歌浏览器 V66 版及其以上版本，即可正常启动客户端。缺点就是生成的安装包体积会增加大约 60M 左右。</p><h5 id="macOS-系统"><a href="#macOS-系统" class="headerlink" title="macOS 系统"></a>macOS 系统</h5><p>macOS 系统的浏览器引擎就没有那么多版本了，由于 macOS 系统的封闭性，在 macOS 系统就只有一种 WebKit 引擎可用。</p><p>不过，在 macOS 系统却存在另一个问题。那就是苹果自主研发的 M1 芯片。由于 windows 系统随处可见，我可以找很多电脑测试。mac 电脑我就只有一台 M1 芯片和一个 x86_64 芯片，做不了更多测试。总之，目前我这两台苹果电脑构建的客户端不能交叉使用，原因不明。</p><h4 id="构建客户端-API"><a href="#构建客户端-API" class="headerlink" title="构建客户端 API"></a>构建客户端 API</h4><p>构建客户端的主程序是 main.py ，如下所示：</p><p><img src="https://pangao1990.gitee.io/pic/JavaScript%E5%92%8CPython%E6%89%93%E9%80%A0%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94vue-pywebview-pyinstaller-7.png" alt="image"></p><p>main.py 里面主要是依靠 webview.create_window 和 webview.start 这两个 API 来构建客户端。其他的一些 API，我也会在后面的教程中详细介绍。或者可以直接查看 <a href="https://pywebview.flowrl.com/guide/api.html">pywebview 官网</a> 了解详情。</p><h5 id="webview-create-window"><a href="#webview-create-window" class="headerlink" title="webview.create_window"></a>webview.create_window</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">webview.create_window(title, <span class="hljs-attribute">url</span>=<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-attribute">html</span>=<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-attribute">js_api</span>=None, <span class="hljs-attribute">width</span>=800, <span class="hljs-attribute">height</span>=600, \<br>                      <span class="hljs-attribute">x</span>=None, <span class="hljs-attribute">y</span>=None, <span class="hljs-attribute">resizable</span>=<span class="hljs-literal">True</span>, <span class="hljs-attribute">fullscreen</span>=<span class="hljs-literal">False</span>, \<br>                      min_size=(200, 100), <span class="hljs-attribute">hidden</span>=<span class="hljs-literal">False</span>, <span class="hljs-attribute">frameless</span>=<span class="hljs-literal">False</span>, \<br>                      <span class="hljs-attribute">minimized</span>=<span class="hljs-literal">False</span>, <span class="hljs-attribute">on_top</span>=<span class="hljs-literal">False</span>, <span class="hljs-attribute">confirm_close</span>=<span class="hljs-literal">False</span>, \<br>                      <span class="hljs-attribute">background_color</span>=<span class="hljs-string">&#x27;#FFF&#x27;</span>)<br></code></pre></td></tr></table></figure><p>创建一个新的 pywebview 窗口，并返回其实例。在开始 GUI 循环之前，窗口不会显示。</p><ul><li><strong>title</strong> 窗口标题</li><li><strong>url</strong> 要加载的 URL。如果 URL 没有协议前缀，则将其解析为相对于应用程序入口点的路径。或者，可以传递 WSGI 服务器对象来启动本地 Web 服务器。</li><li><strong>html</strong> 要加载的 HTML 代码。如果同时指定了 URL 和 HTML，HTML 优先。</li><li><strong>js_api</strong> 将 python 对象暴露到当前 pywebview 窗口的 DOM 中。js_api 对象的方法可以通过调用 window.pywebview.api.<methodname>(<parameters>)从 Javascript 执行。请注意，调用 Javascript 函数会收到一个包含 python 函数的返回值。只有基本的 Python 对象（如 int、str、dict……）才能返回 Javascript。</li><li><strong>width</strong> 窗户宽度。默认值为 800px。</li><li><strong>height</strong> 窗户高度。默认值为 600px。</li><li><strong>x</strong> 窗口 x 坐标。默认值居中。</li><li><strong>y</strong> 窗口 y 坐标。默认值居中。</li><li><strong>resizable</strong> 是否可以调整窗口大小。默认值为 True</li><li><strong>fullscreen</strong> 从全屏模式开始。默认为 False</li><li><strong>min_size</strong> 指定最小窗口大小的（宽度、高度）元组。默认值为 200x100</li><li><strong>hidden</strong> 默认情况下创建一个隐藏的窗口。默认为 False</li><li><strong>frameless</strong> 创建一个无框窗口。默认值为 False。</li><li><strong>minimized</strong> 以最小化模式启动</li><li><strong>on_top</strong> 将窗口设置为始终位于其他窗口的顶部。默认值为 False。</li><li><strong>confirm_close</strong> 是否显示窗口关闭确认对话框。默认为 False</li><li><strong>background_color</strong> 加载 WebView 之前显示的窗口的背景颜色。指定为十六进制颜色。默认值为白色。</li><li><strong>transparent</strong> 创建一个透明的窗口。Windows 不支持。默认值为 False。请注意，此设置不会隐藏或使窗口铬透明。将窗口 chrome setframeless 隐藏为 True。</li></ul><h5 id="webview-start"><a href="#webview-start" class="headerlink" title="webview.start"></a>webview.start</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">webview.start(<span class="hljs-attribute">func</span>=None, <span class="hljs-attribute">args</span>=None, localization=&#123;&#125;, <span class="hljs-attribute">gui</span>=None, <span class="hljs-attribute">debug</span>=<span class="hljs-literal">False</span>, <span class="hljs-attribute">http_server</span>=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><p>启动 GUI 循环并显示之前创建的窗口。此函数必须从主线程调用。</p><ul><li><strong>func</strong> 启动 GUI 循环时调用的函数。</li><li><strong>args</strong> 函数参数。可以是单个值，也可以是元组值。</li><li><strong>localization</strong> 带有本地化字符串的词典。默认字符串及其键在 localization.py 中定义</li><li><strong>gui</strong> 强制使用特定的 GUI。允许的值是 cef、qt 或 gtk，具体取决于平台。</li><li><strong>debug</strong> 启用调试模式。</li><li><strong>http_server</strong> 启用内置 HTTP 服务器。如果启用，本地文件将使用随机端口上的本地 HTTP 服务器提供服务。对于每个窗口，都会生成一个单独的 HTTP 服务器。对于非本地 URL，此选项将被忽略。</li></ul><h4 id="域间通信"><a href="#域间通信" class="headerlink" title="域间通信"></a>域间通信</h4><h5 id="从-Python-调用-Javascript"><a href="#从-Python-调用-Javascript" class="headerlink" title="从 Python 调用 Javascript"></a>从 Python 调用 Javascript</h5><p>window.evaluate_js(code, callback&#x3D;None)允许您使用同步返回的最后一个值执行任意 Javascript 代码。如果提供了回调函数，则解析 promise，并调用回调函数，结果作为参数。Javascript 类型转换为 Python 类型，例如 JS 对象到 Python 字典，数组到列表，未定义为 None。由于实现限制，字符串“null”将被计算为 None。另外，evaluate_js 返回的值限制为 900 个字符内。</p><h5 id="从-Javascript-调用-Python"><a href="#从-Javascript-调用-Python" class="headerlink" title="从 Javascript 调用 Python"></a>从 Javascript 调用 Python</h5><p>从 Javascript 调用 Python 函数可以通过两种不同的方法完成。</p><ul><li>通过将 Python 类的实例暴露给 create_window 的 js_api。该类的所有可调用方法都将以 pywebview.api.method_name 的形式公开到 JS 域中。方法名称不得以下划线开头。</li><li>通过将函数传递给窗口对象的 expose(func)这将以 pywebview.api.func_name 的形式将一个或多个函数公开到 JS 域。与 JS API 不同，expose 也允许在运行时公开函数。如果 JS API 和以这种方式公开的函数之间存在名称冲突，则后者优先。</li></ul><h4 id="打包客户端"><a href="#打包客户端" class="headerlink" title="打包客户端"></a>打包客户端</h4><p>pywebview 建议 macOS 用 <a href="https://py2app.readthedocs.io/en/latest/">py2app</a> 打包，windows 用 <a href="https://pyinstaller.readthedocs.io/en/stable/">pyinstaller</a> 打包。但是我发现 pyinstaller 也可以很顺畅得打包 macOS 应用，虽然移植有点问题。</p><p>我就不介绍 pyinstaller 的打包方法了，后面我会出这个框架详细的打包介绍。这里我将打包方法封装在应用中，只需要按命令打包即可。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 开发模式</span><br>npm <span class="hljs-built_in">run</span> start<br><br><span class="hljs-comment"># 开发模式，cef兼容模式【仅win系统】</span><br>npm <span class="hljs-built_in">run</span> start:cef<br><br><span class="hljs-comment"># 预打包，带console，方便输出日志信息</span><br>npm <span class="hljs-built_in">run</span> pre<br><br><span class="hljs-comment"># 预打包，带console，cef兼容模式【仅win系统】</span><br>npm <span class="hljs-built_in">run</span> pre:cef<br><br><span class="hljs-comment"># 预打包，带console，生成文件夹【仅win系统】</span><br>npm <span class="hljs-built_in">run</span> pre:folder<br><br><span class="hljs-comment"># 预打包，带console，生成文件夹，cef兼容模式【仅win系统】</span><br>npm <span class="hljs-built_in">run</span> pre:folder:cef<br><br><br><span class="hljs-comment"># 正式打包</span><br>npm <span class="hljs-built_in">run</span> build<br><br><span class="hljs-comment"># 正式打包，cef兼容模式【仅win系统】</span><br>npm <span class="hljs-built_in">run</span> build:cef<br><br><span class="hljs-comment"># 正式打包，生成文件夹【仅win系统】</span><br>npm <span class="hljs-built_in">run</span> build:folder<br><br><span class="hljs-comment"># 正式打包，生成文件夹，cef兼容模式【仅win系统】</span><br>npm <span class="hljs-built_in">run</span> build:folder:cef<br></code></pre></td></tr></table></figure><h4 id="HMR-原理"><a href="#HMR-原理" class="headerlink" title="HMR 原理"></a>HMR 原理</h4><ul><li>使用 npm-run-all 并行启用 vite(自带热更新) 和 pywebview</li><li>使用 nodemon 监听 <code>api/*</code> <code>pyapp/*</code> <code>main.py</code> 等文件，有修改自动重启应用，达到 HRM 效果</li></ul><p>*注：这里感谢 <a href="https://github.com/WnagoiYy">WnagoiYy</a> 同学的 PR。</p><h4 id="注意问题"><a href="#注意问题" class="headerlink" title="注意问题"></a>注意问题</h4><ul><li>在 windows 系统下，只能打包 exe 等适用于 windows 的程序，不能打包 mac 系统下的 app 程序。同理，mac 也是一样。</li><li>在 windows 系统下，请不要使用中文路径，否则可能会出现 cannot call null pointer pointer from cdata ‘int(_)(void _, int)’ 等错误信息。mac 系统无此问题。</li></ul><h4 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h4><h5 id="V3-0-0"><a href="#V3-0-0" class="headerlink" title="V3.0.0"></a>V3.0.0</h5><ul><li>新增 SQLite 数据库支持，使用 sqlalchemy 进行 ORM 操作，使用 alembic 进行数据迁移与映射</li><li>新增 static 静态文件夹，可以存放 cache 缓存、db 数据库等，这些文件都将被直接打包到程序包中</li><li>新增 python 调用 js 函数的示例</li><li>在 config.py 中新增配置信息，如代码所在绝对目录等</li><li>修复 python 代码无法打印日志的问题</li><li>构建程序包时，实时更新打包配置文件 spec</li><li>调整项目文件夹结构</li><li>pywebview 模块升级到 4.0</li></ul><h5 id="V2-0-0"><a href="#V2-0-0" class="headerlink" title="V2.0.0"></a>V2.0.0</h5><ul><li>将 Vue3 框架整体分离至 gui 文件夹，如此一来，你可以随意替换 gui 文件夹下的前端框架，使用 Vue、React、Angular、HTML ，或者你喜欢的其他框架均可</li><li>整理框架结构，优化代码逻辑</li></ul><h5 id="V1-3-0"><a href="#V1-3-0" class="headerlink" title="V1.3.0"></a>V1.3.0</h5><ul><li>新增热更新</li></ul><h5 id="V1-0-0"><a href="#V1-0-0" class="headerlink" title="V1.0.0"></a>V1.0.0</h5><ul><li>初始版本</li></ul><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>JavaScript</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>JavaScript</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022年2月最受欢迎编程语言排行榜｜Python遥遥领先</title>
    <link href="/2022%E5%B9%B42%E6%9C%88%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%8E%92%E8%A1%8C%E6%A6%9C%EF%BD%9CPython%E9%81%A5%E9%81%A5%E9%A2%86%E5%85%88/"/>
    <url>/2022%E5%B9%B42%E6%9C%88%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%8E%92%E8%A1%8C%E6%A6%9C%EF%BD%9CPython%E9%81%A5%E9%81%A5%E9%A2%86%E5%85%88/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>如果你想检验自己掌握的编程语言是否仍然受欢迎，又或者你想学习一些当下火热的编程语言，那么，<a href="https://www.tiobe.com/tiobe-index/">TIOBE 指数</a> 可以给你提供很好的参考数据。</p><p><a href="https://www.tiobe.com/tiobe-index/">TIOBE 指数</a> 是编程语言受欢迎程度的指标。该索引每月更新一次。评定标准基于全球技术工程师的数量、教学课程和第三方机构数据。例如谷歌、必应、雅虎、维基百科、亚马逊、YouTube 和百度等热门搜索引擎的数据都会被作为参考依据。</p><p>不过，值得注意的是，<a href="https://www.tiobe.com/tiobe-index/">TIOBE 指数</a> 评定出的第一名并不是指世界上最好的编程语言，也不是指代码量最多的语言。</p><p>下图就是 2022 年 2 月 TIOBE 指数排行榜：</p><h3 id="TOP-20-编程语言"><a href="#TOP-20-编程语言" class="headerlink" title="TOP 20 编程语言"></a>TOP 20 编程语言</h3><p><img src="https://pangao1990.gitee.io/pic/2022%E5%B9%B42%E6%9C%88%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%8E%92%E8%A1%8C%E6%A6%9C%EF%BD%9CPython%E9%81%A5%E9%81%A5%E9%A2%86%E5%85%88-1.png" alt="image"></p><p>在前 5 名编程语言中，除了 C 语言下跌 2.26%，其它编程语言指数较上个月都有所上涨，C 语言已连续三个月呈下跌趋势，而 Python 则较上月上涨了 4.47%。</p><h3 id="TOP-10-编程语言-TIOBE-指数走势（2002-年-2022-年）"><a href="#TOP-10-编程语言-TIOBE-指数走势（2002-年-2022-年）" class="headerlink" title="TOP 10 编程语言 TIOBE 指数走势（2002 年-2022 年）"></a>TOP 10 编程语言 TIOBE 指数走势（2002 年-2022 年）</h3><p><img src="https://pangao1990.gitee.io/pic/2022%E5%B9%B42%E6%9C%88%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%8E%92%E8%A1%8C%E6%A6%9C%EF%BD%9CPython%E9%81%A5%E9%81%A5%E9%A2%86%E5%85%88-2.png" alt="image"></p><h3 id="TOP-21-50-排名的编程语言清单"><a href="#TOP-21-50-排名的编程语言清单" class="headerlink" title="TOP 21-50 排名的编程语言清单"></a>TOP 21-50 排名的编程语言清单</h3><p><img src="https://pangao1990.gitee.io/pic/2022%E5%B9%B42%E6%9C%88%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%8E%92%E8%A1%8C%E6%A6%9C%EF%BD%9CPython%E9%81%A5%E9%81%A5%E9%A2%86%E5%85%88-3.png" alt="image"></p><h3 id="十大编程语言的历史排名"><a href="#十大编程语言的历史排名" class="headerlink" title="十大编程语言的历史排名"></a>十大编程语言的历史排名</h3><p>以下是十大编程语言的历史排名（取 12 个月内位置的平均值）：</p><p><img src="https://pangao1990.gitee.io/pic/2022%E5%B9%B42%E6%9C%88%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%8E%92%E8%A1%8C%E6%A6%9C%EF%BD%9CPython%E9%81%A5%E9%81%A5%E9%A2%86%E5%85%88-4.png" alt="image"></p><h3 id="年度排名上升最快的编程语言"><a href="#年度排名上升最快的编程语言" class="headerlink" title="年度排名上升最快的编程语言"></a>年度排名上升最快的编程语言</h3><p><img src="https://pangao1990.gitee.io/pic/2022%E5%B9%B42%E6%9C%88%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%8E%92%E8%A1%8C%E6%A6%9C%EF%BD%9CPython%E9%81%A5%E9%81%A5%E9%A2%86%E5%85%88-5.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【前端小技巧】用CSS隐藏元素的几种方法</title>
    <link href="/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <url>/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>2021 年最后一天，疫情还没有完全结束，武汉市政府也取消了跨年活动。今晚，就连地铁都提前到 9 点关闭，大家都在家里跨年。这不，我也在家里跨年。不过我并没有看晚会，而是整理了一篇前端小技巧，算是给自己 2021 年一个小小的总结。</p><hr><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>用 CSS 隐藏元素有很多种方法，这里介绍 3 种常见的。</p><h3 id="opacity-0"><a href="#opacity-0" class="headerlink" title="opacity: 0"></a>opacity: 0</h3><p>特点是【<strong>看不见，占空间，摸得着</strong>】</p><ul><li>元素隐藏</li><li>不改变布局</li><li>如果绑定了事件，点击该区域，是可以触发事件的</li></ul><h3 id="visibility-hidden"><a href="#visibility-hidden" class="headerlink" title="visibility: hidden"></a>visibility: hidden</h3><p>特点是【<strong>看不见，占空间，摸不着</strong>】</p><ul><li>元素隐藏</li><li>不改变布局</li><li>如果绑定了事件，点击该区域，是无法触发事件的</li></ul><h3 id="display-none"><a href="#display-none" class="headerlink" title="display: none"></a>display: none</h3><p>特点是【<strong>看不见，不占空间，摸不着</strong>】</p><ul><li>元素隐藏</li><li>改变布局</li><li>如果绑定了事件，点击该区域，是无法触发事件的</li></ul><hr><p>接下来，我们来编写代码验证一下。首先写入三个方块，对中间的橙色方块添加点击事件。代码及页面效果如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">            <span class="hljs-selector-class">.box</span> &#123;<span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.red</span> &#123;<span class="hljs-attribute">background-color</span>: red;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.orange</span> &#123;<span class="hljs-attribute">background-color</span>: orange;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.yellow</span> &#123;<span class="hljs-attribute">background-color</span>: yellow;&#125;</span><br><span class="language-css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box red&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box orange&#x27;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box yellow&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;btn&quot;</span>).<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;触发点击操作 0.0&#x27;</span>);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-1.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-2.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-3.gif" alt="image"></p><h3 id="opacity-0-1"><a href="#opacity-0-1" class="headerlink" title="opacity: 0"></a>opacity: 0</h3><p>对中间橙色方块添加 <strong>opacity: 0</strong> 样式，代码及效果如下：</p><ul><li>元素隐藏</li><li>不改变布局</li><li>如果绑定了事件，点击该区域，是可以触发事件的</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">            <span class="hljs-selector-class">.box</span> &#123;<span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.red</span> &#123;<span class="hljs-attribute">background-color</span>: red;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.orange</span> &#123;<span class="hljs-attribute">background-color</span>: orange;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.yellow</span> &#123;<span class="hljs-attribute">background-color</span>: yellow;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.opacity</span> &#123;<span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>&#125;</span><br><span class="language-css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box red&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box orange opacity&#x27;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box yellow&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;btn&quot;</span>).<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;触发点击操作 0.0&#x27;</span>);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-4.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-5.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-6.gif" alt="image"></p><h3 id="visibility-hidden-1"><a href="#visibility-hidden-1" class="headerlink" title="visibility: hidden"></a>visibility: hidden</h3><p>对中间橙色方块添加 <strong>visibility: hidden</strong> 样式，代码及效果如下：</p><ul><li>元素隐藏</li><li>不改变布局</li><li>如果绑定了事件，点击该区域，是无法触发事件的</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">            <span class="hljs-selector-class">.box</span> &#123;<span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.red</span> &#123;<span class="hljs-attribute">background-color</span>: red;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.orange</span> &#123;<span class="hljs-attribute">background-color</span>: orange;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.yellow</span> &#123;<span class="hljs-attribute">background-color</span>: yellow;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.visibility</span> &#123;<span class="hljs-attribute">visibility</span>: hidden&#125;</span><br><span class="language-css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box red&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box orange visibility&#x27;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box yellow&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;btn&quot;</span>).<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;触发点击操作 0.0&#x27;</span>);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-7.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-8.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-9.gif" alt="image"></p><h3 id="display-none-1"><a href="#display-none-1" class="headerlink" title="display: none"></a>display: none</h3><p>对中间橙色方块添加 <strong>display: none</strong> 样式，代码及效果如下：</p><ul><li>元素隐藏</li><li>改变布局</li><li>如果绑定了事件，点击该区域，是无法触发事件的</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">            <span class="hljs-selector-class">.box</span> &#123;<span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.red</span> &#123;<span class="hljs-attribute">background-color</span>: red;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.orange</span> &#123;<span class="hljs-attribute">background-color</span>: orange;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.yellow</span> &#123;<span class="hljs-attribute">background-color</span>: yellow;&#125;</span><br><span class="language-css">            <span class="hljs-selector-class">.display</span> &#123;<span class="hljs-attribute">display</span>: none&#125;</span><br><span class="language-css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box red&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box orange display&#x27;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;box yellow&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;btn&quot;</span>).<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;触发点击操作 0.0&#x27;</span>);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-10.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8CSS%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-11.gif" alt="image"></p><hr><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>本人 2021 年度成就总结：</p><ol><li>学术方面，凭借个人努力，在核酸检测领域产出多份数据真实详尽的报告。</li><li>健康方面，保证膳食纤维摄入，具体表现为每日坚持吃瓜，吃好瓜，吃大瓜。</li><li>商业方面，与各大平台合作，全面参与投资 618、双 11、双 12 等千亿级重大项目。</li><li>环保方面，股票基金一片绿，绿水青山就是金山银山。在废物利用领域更是成绩斐然：自己作为废物，常常被别人利用。</li><li>运动方面，专注于水上项目，在摸鱼、划水等小项上有突出表现。</li></ol><p><strong>最后，祝大家元旦快乐～</strong></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【前端小技巧】用border画三角形和梯形</title>
    <link href="/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2/"/>
    <url>/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我们组要招一个前端开发，我也借此机会整理了一下前端的基础知识。否则在面试的时候如果被别人问倒了，人家还以为我们公司没有技术大牛的。</p><p>在复习 CSS 基础的时候，我被一个网友的奇思妙想震惊了，居然可以用 border 来画三角形。在此之前，我都只是用 border 来打框框的。-.-！！</p><hr><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>我们比较常规的用法，就是用 border 属性来设置边框，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-1.png" alt="image"></p><p>现在，为了便于观察，我们将四条边设置为不同的颜色，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">border-top</span>: <span class="hljs-number">1px</span> solid red;<br>  <span class="hljs-attribute">border-left</span>: <span class="hljs-number">1px</span> solid orange;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">1px</span> solid green;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid blue;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-2.png" alt="image"></p><p>注意，神奇的事情即将发生。将边框加粗，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">border-top</span>: <span class="hljs-number">50px</span> solid red;<br>  <span class="hljs-attribute">border-left</span>: <span class="hljs-number">50px</span> solid orange;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">50px</span> solid green;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">50px</span> solid blue;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-3.png" alt="image"></p><p>看到了吗？出现了 4 个梯形。接着，将长度和宽度缩小，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">10</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">10</span>;<br>  <span class="hljs-attribute">border-top</span>: <span class="hljs-number">50px</span> solid red;<br>  <span class="hljs-attribute">border-left</span>: <span class="hljs-number">50px</span> solid orange;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">50px</span> solid green;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">50px</span> solid blue;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-4.png" alt="image"></p><p>梯形的短边越来越短，直到为 0，三角形就出现了。那么，设置长度和宽度为 0，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">border-top</span>: <span class="hljs-number">50px</span> solid red;<br>  <span class="hljs-attribute">border-left</span>: <span class="hljs-number">50px</span> solid orange;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">50px</span> solid green;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">50px</span> solid blue;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-5.png" alt="image"></p><p>此时，四个方向的三角形就形成了，想要展示哪个三角形，只需要将其他三个设置为透明即可，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">border-top</span>: <span class="hljs-number">50px</span> solid red;<br>  <span class="hljs-attribute">border-left</span>: <span class="hljs-number">50px</span> solid transparent;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">50px</span> solid transparent;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">50px</span> solid transparent;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-6.png" alt="image"></p><p>甚至，各种三角形、梯形的组合形态都可以随意拼接，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">border-top</span>:<span class="hljs-number">50px</span> solid red;<br>  <span class="hljs-attribute">border-left</span>:<span class="hljs-number">50px</span> solid transparent;<br>  <span class="hljs-attribute">border-right</span>:<span class="hljs-number">50px</span> solid green;<br>  <span class="hljs-attribute">border-bottom</span>:<span class="hljs-number">50px</span> solid transparent;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-7.png" alt="image"></p><hr><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">border-top</span>:<span class="hljs-number">50px</span> solid red;<br>  <span class="hljs-attribute">border-left</span>:<span class="hljs-number">50px</span> solid transparent;<br>  <span class="hljs-attribute">border-right</span>:<span class="hljs-number">50px</span> solid green;<br>  <span class="hljs-attribute">border-bottom</span>:<span class="hljs-number">50px</span> solid transparent;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-8.png" alt="image"></p><hr><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>:<span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">height</span>:<span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">border-top</span>:<span class="hljs-number">100px</span> solid red;<br>  <span class="hljs-attribute">border-left</span>:<span class="hljs-number">20px</span> solid yellow;<br>  <span class="hljs-attribute">border-right</span>:<span class="hljs-number">20px</span> solid green;<br>  <span class="hljs-attribute">border-bottom</span>:<span class="hljs-number">0px</span> solid transparent;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-9.png" alt="image"></p><hr><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>CSS 真是强大啊，感觉只要技术够牛，就可以用 CSS 画任意图形。最后，附上网友用 CSS 画的蓝胖子。 <img src="https://pangao1990.gitee.io/pic/%E3%80%90%E5%89%8D%E7%AB%AF%E5%B0%8F%E6%8A%80%E5%B7%A7%E3%80%91%E7%94%A8border%E7%94%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E5%92%8C%E6%A2%AF%E5%BD%A2-10.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你的电脑卡吗？一招教你解决问题</title>
    <link href="/%E4%BD%A0%E7%9A%84%E7%94%B5%E8%84%91%E5%8D%A1%E5%90%97%EF%BC%9F%E4%B8%80%E6%8B%9B%E6%95%99%E4%BD%A0%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    <url>/%E4%BD%A0%E7%9A%84%E7%94%B5%E8%84%91%E5%8D%A1%E5%90%97%EF%BC%9F%E4%B8%80%E6%8B%9B%E6%95%99%E4%BD%A0%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>同事 A：我的电脑很卡。</p><p>同事 B：你得清理一下。</p><p>同事 A：我连购物车都清理了。</p><p>我：。。。</p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ES6操作数组的高级函数map()、filter()、reduce()</title>
    <link href="/ES6%E6%93%8D%E4%BD%9C%E6%95%B0%E7%BB%84%E7%9A%84%E9%AB%98%E7%BA%A7%E5%87%BD%E6%95%B0map()%E3%80%81filter()%E3%80%81reduce()/"/>
    <url>/ES6%E6%93%8D%E4%BD%9C%E6%95%B0%E7%BB%84%E7%9A%84%E9%AB%98%E7%BA%A7%E5%87%BD%E6%95%B0map()%E3%80%81filter()%E3%80%81reduce()/</url>
    
    <content type="html"><![CDATA[<h3 id="arr-map-–-更新数组"><a href="#arr-map-–-更新数组" class="headerlink" title="arr.map() – 更新数组"></a>arr.map() – 更新数组</h3><ol><li>原数组不变</li><li>回调函数参数：item(数组元素)、index(序列)、arr(原数组)</li><li>循环原数组，使用 return 操作输出项，返回新数组，新数组长度和原数组一样</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> originalArr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br><br><span class="hljs-keyword">const</span> newArr = originalArr.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, index, arr</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> item * <span class="hljs-number">2</span> <span class="hljs-comment">// 将原数组的每一项都乘以2，输出新数组，原数组不变</span><br>&#125;)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(newArr) <span class="hljs-comment">// [2, 4, 6, 8, 10]</span><br></code></pre></td></tr></table></figure><h3 id="arr-filter-–-筛选数组"><a href="#arr-filter-–-筛选数组" class="headerlink" title="arr.filter() – 筛选数组"></a>arr.filter() – 筛选数组</h3><ol><li>原数组不变</li><li>回调函数参数：item(数组元素)、index(序列)、arr(原数组)</li><li>循环原数组，使用 return 判断是否输出元素，返回新数组，新数组长度小于或等于原数组</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> originalArr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br><br><span class="hljs-keyword">const</span> newArr = originalArr.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">item, index, arr</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> item % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> <span class="hljs-comment">// 将原数组的偶数项输出为新数组，原数组不变</span><br>&#125;)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(newArr) <span class="hljs-comment">// [2, 4]</span><br></code></pre></td></tr></table></figure><h3 id="arr-reduce-–-叠加数组"><a href="#arr-reduce-–-叠加数组" class="headerlink" title="arr.reduce() – 叠加数组"></a>arr.reduce() – 叠加数组</h3><ol><li>原数组不变</li><li>回调函数参数：pre(初始值为数组第一项，此后是上一次操作的返回值)、item(数组元素)、index(序列，下标从 1 开始)、arr(原数组)</li><li>循环原数组，使用 return 操作输出，直到循环结束，返回一个输出值</li></ol><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vim">const originalArr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br><br>const newArr = originalArr.reduce((<span class="hljs-keyword">pre</span>, item, <span class="hljs-built_in">index</span>, arr) =&gt; &#123;<br>  // 第一次循环：<span class="hljs-keyword">pre</span>:<span class="hljs-number">1</span>, item:<span class="hljs-number">2</span>, <span class="hljs-built_in">index</span>:<span class="hljs-number">1</span>, <span class="hljs-keyword">pre</span>+item:<span class="hljs-number">3</span><br>  // 第二次循环：<span class="hljs-keyword">pre</span>:<span class="hljs-number">3</span>, item:<span class="hljs-number">3</span>, <span class="hljs-built_in">index</span>:<span class="hljs-number">2</span>, <span class="hljs-keyword">pre</span>+item:<span class="hljs-number">6</span><br>  // 第三次循环：<span class="hljs-keyword">pre</span>:<span class="hljs-number">6</span>, item:<span class="hljs-number">4</span>, <span class="hljs-built_in">index</span>:<span class="hljs-number">3</span>, <span class="hljs-keyword">pre</span>+item:<span class="hljs-number">10</span><br>  // 第四次循环：<span class="hljs-keyword">pre</span>:<span class="hljs-number">10</span>, item:<span class="hljs-number">5</span>, <span class="hljs-built_in">index</span>:<span class="hljs-number">4</span>, <span class="hljs-keyword">pre</span>+item:<span class="hljs-number">15</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">pre</span> + item<br>&#125;)<br><br>console.info(newArr) // <span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>javascript类型转换中需要注意的坑</title>
    <link href="/javascript%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E4%B8%AD%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9D%91/"/>
    <url>/javascript%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E4%B8%AD%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<h3 id="数字型转换"><a href="#数字型转换" class="headerlink" title="数字型转换"></a>数字型转换</h3><ul><li><strong>Number(undefined)</strong> 转换为 <strong>NaN</strong></li></ul><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Number</span>(<span class="hljs-literal">undefined</span>)</span><br><br>NaN<br></code></pre></td></tr></table></figure><ul><li><strong>Number(null)</strong> 转换为 <strong>0</strong></li></ul><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Number</span>(<span class="hljs-literal">null</span>)</span><br><br>0<br></code></pre></td></tr></table></figure><ul><li><strong>Number(true)</strong> 转换为 <strong>1</strong></li></ul><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Number</span>(<span class="hljs-literal">true</span>)</span><br><br>1<br></code></pre></td></tr></table></figure><ul><li><strong>Number(false)</strong> 转换为 <strong>0</strong></li></ul><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Number</span>(<span class="hljs-literal">false</span>)</span><br><br>0<br></code></pre></td></tr></table></figure><ul><li><strong>Number(string)</strong> 先去掉字符串首尾空格。剩余字符串如果为空，则转换为 <strong>0</strong> 。如果剩余字符串为纯数字字符串，则转换为对应 <strong>数字</strong> 。如果剩余字符串还有其他字符，则转换为 <strong>NaN</strong> 。</li></ul><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Number</span>(<span class="hljs-string">&quot;   123   &quot;</span>)</span><br><br>123<br><br><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Number</span>(<span class="hljs-string">&quot;   123潘高的小站   &quot;</span>)</span><br><br>NaN<br></code></pre></td></tr></table></figure><h3 id="布尔型转换"><a href="#布尔型转换" class="headerlink" title="布尔型转换"></a>布尔型转换</h3><ul><li><strong>Boolean(0)</strong> 直观上为“空”的值（如 0、空字符串、null、undefined 和 NaN）将变为 <strong>false</strong> 。</li></ul><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Boolean</span>(<span class="hljs-number">0</span>)</span><br><br>false<br><br><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Boolean</span>(<span class="hljs-string">&quot;&quot;</span>)</span><br><br>false<br><br><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">null</span>)</span><br><br>false<br><br><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">undefined</span>)</span><br><br>false<br><br><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Boolean</span>(<span class="hljs-title class_">NaN</span>)</span><br><br>false<br></code></pre></td></tr></table></figure><ul><li><strong>Boolean(“潘高的小站”)</strong> 其他情况都是 <strong>true</strong> 。</li></ul><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs isbl">&gt; <span class="hljs-function"><span class="hljs-title">Boolean</span>(<span class="hljs-string">&quot;潘高的小站&quot;</span>)</span><br><br><span class="hljs-variable"><span class="hljs-literal">true</span></span><br><br><br>&gt; <span class="hljs-function"><span class="hljs-title">Boolean</span>(<span class="hljs-string">&quot;0&quot;</span>)</span><br><br><span class="hljs-variable"><span class="hljs-literal">true</span></span><br></code></pre></td></tr></table></figure><p><strong>注意：</strong> Boolean(“0”) 转化为 true ，并不是 false 。因为 “0” 是字符串，不是数字，并且不是空字符串，只有 “” 这样的空字符串才是 false 。</p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Node</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS</tag>
      
      <tag>Node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>npm install --global --save --save-dev 的区别</title>
    <link href="/npminstall--global--save--save-dev%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <url>/npminstall--global--save--save-dev%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h3 id="npm-install-–global-lt-XXX-gt"><a href="#npm-install-–global-lt-XXX-gt" class="headerlink" title="npm install –global &lt;XXX&gt;"></a>npm install –global &lt;XXX&gt;</h3><ul><li>效果等同于 npm install -g &lt;XXX&gt;</li><li><strong>全局</strong>安装模块</li><li><strong>不会</strong>将模块依赖记录在 dependencies 或 devDependencies 对象中</li><li>运行 npm install 初始化项目时<strong>不会</strong>下载模块</li></ul><p>例如我在任意目录下运行如下代码：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--global cowsay</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/npminstall--global--save--save-dev%E7%9A%84%E5%8C%BA%E5%88%AB-1.png" alt="image"></p><p>报错了，不要紧，这是指我的 npm 安装在默认目录，没有权限访问。我用管理员权限再运行一次，就好了：</p><p><img src="https://pangao1990.gitee.io/pic/npminstall--global--save--save-dev%E7%9A%84%E5%8C%BA%E5%88%AB-2.png" alt="image"></p><p>安装好后，在整个电脑任意目录，我都可以使用这个模块，比如输入命令，得到返回信息如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">cowsay</span> 潘高的小站<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/npminstall--global--save--save-dev%E7%9A%84%E5%8C%BA%E5%88%AB-3.png" alt="image"></p><h3 id="npm-install-–save-lt-XXX-gt"><a href="#npm-install-–save-lt-XXX-gt" class="headerlink" title="npm install –save &lt;XXX&gt;"></a>npm install –save &lt;XXX&gt;</h3><ul><li>效果等同于 npm install -S &lt;XXX&gt;</li><li>在指定项目的 node_modules 下安装模块</li><li>在 package.json 文件中的 dependencies 对象创建一个属性，用来记录添加的依赖</li><li>运行 npm install 初始化项目时，会下载模块到项目的 node_modules 下</li><li>运行 npm install –production 会自动下载模块到项目的 node_modules 下</li></ul><p>例如我在 test1 目录下运行如下代码：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> test1<br><br>npm install <span class="hljs-params">--save</span> cowsay<br></code></pre></td></tr></table></figure><p>得到的效果如下所示：</p><p><img src="https://pangao1990.gitee.io/pic/npminstall--global--save--save-dev%E7%9A%84%E5%8C%BA%E5%88%AB-4.png" alt="image"></p><h3 id="npm-install-–save-dev-lt-XXX-gt"><a href="#npm-install-–save-dev-lt-XXX-gt" class="headerlink" title="npm install –save-dev &lt;XXX&gt;"></a>npm install –save-dev &lt;XXX&gt;</h3><ul><li>效果等同于 npm install -D &lt;XXX&gt;</li><li>在指定项目的 node_modules 下安装模块</li><li>在 package.json 文件中的 dependencies 对象创建一个属性，用来记录添加的依赖</li><li>运行 npm install 初始化项目时，会下载模块到项目的 node_modules 下</li><li>运行 npm install –production <strong>不会</strong>自动下载模块到项目的 node_modules 下</li></ul><p>例如我在 test2 目录下运行如下代码：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> test2<br><br>npm install <span class="hljs-params">--save-dev</span> cowsay<br></code></pre></td></tr></table></figure><p>得到的效果如下所示：</p><p><img src="https://pangao1990.gitee.io/pic/npminstall--global--save--save-dev%E7%9A%84%E5%8C%BA%E5%88%AB-5.png" alt="image"></p><h3 id="npm-install-lt-XXX-gt"><a href="#npm-install-lt-XXX-gt" class="headerlink" title="npm install &lt;XXX&gt;"></a>npm install &lt;XXX&gt;</h3><ul><li>在 npm 5.0 及其以后的版本中，效果与 npm install –save &lt;XXX&gt; 一模一样</li><li>在 npm 5.0 以前的版本中，npm install &lt;XXX&gt; 会将模块下载到指定项目下，并且<strong>不会</strong>在 package.json 文件中记录依赖</li></ul><p>例如我在 test3 目录下运行如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> test3<br><br>npm install cowsay<br></code></pre></td></tr></table></figure><p>得到的效果如下所示：</p><p><img src="https://pangao1990.gitee.io/pic/npminstall--global--save--save-dev%E7%9A%84%E5%8C%BA%E5%88%AB-6.png" alt="image"></p><h3 id="npm-install-与-npm-i-的区别"><a href="#npm-install-与-npm-i-的区别" class="headerlink" title="npm install 与 npm i 的区别"></a>npm install 与 npm i 的区别</h3><p>目前，并没有发现这两者有啥不同的，并且，官方也说这俩只是互为别名。不仅如此，为了防止单词拼写错误，还有很多其他别名，官方用心良苦。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-symbol">aliases:</span> <span class="hljs-keyword">add, </span>i, in, <span class="hljs-keyword">ins, </span><span class="hljs-keyword">inst, </span><span class="hljs-keyword">insta, </span><span class="hljs-keyword">instal, </span>isnt, isnta, isntal, isntall<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/npminstall--global--save--save-dev%E7%9A%84%E5%8C%BA%E5%88%AB-7.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Node</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>跨域问题的4种解决方案</title>
    <link href="/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%844%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%844%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>难以置信，我居然被跨域问题折磨了一上午。相信很多程序员都遇到过跨域问题，当然，解决方案也有很多种。但我今天尝试了无数种办法，依旧没有解决。直到最后我媳妇儿给了我个提示，会不会跨域问题只是表象，真正的 bug 在其他地方。后来，经过我仔细排查，终于发现原来是 PhalApi 框架中的一个小问题，引发了跨域报错（文末再说 PhalApi 框架中的问题是啥）。那我也借这个机会，来和大伙聊聊啥是跨域问题，和有哪些常见的解决方案。</p><h3 id="什么是跨域"><a href="#什么是跨域" class="headerlink" title="什么是跨域"></a>什么是跨域</h3><p>什么是快乐星球，呸，什么是跨域呢？</p><p>简单来讲，跨域是指从一个域名的网页去请求另一个域名的资源。比如从百度(baidu.com)页面去请求我的博客(blog.pangao.vip)的资源。但由于有<strong>同源策略</strong>的关系，一般是不允许这么直接访问的。</p><h3 id="什么是同源策略"><a href="#什么是同源策略" class="headerlink" title="什么是同源策略"></a>什么是同源策略</h3><p>一言蔽之，同源就是协议、域名和端口都相同。</p><table><thead><tr><th>URL1</th><th>URL2</th><th>说明</th><th>是否同源</th></tr></thead><tbody><tr><td><a href="http://blog.pangao.vip/a.js">http://blog.pangao.vip/a.js</a></td><td><a href="http://blog.pangao.vip/123/b.js">http://blog.pangao.vip/123/b.js</a></td><td>协议、域名、端口均相同</td><td>同源</td></tr><tr><td><a href="http://blog.pangao.vip/a.js">http://blog.pangao.vip/a.js</a></td><td><a href="https://pangao1990.gitee.io/b.js">https://pangao1990.gitee.io/b.js</a></td><td>协议不同，域名和端口相同</td><td>非同源</td></tr><tr><td><a href="http://blog.pangao.vip/a.js">http://blog.pangao.vip/a.js</a></td><td><a href="http://pangao.vip/b.js">http://pangao.vip/b.js</a></td><td>域名不同，协议和端口相同</td><td>非同源</td></tr><tr><td><a href="http://blog.pangao.vip/a.js">http://blog.pangao.vip:80/a.js</a></td><td><a href="http://blog.pangao.vip:8080/b.js">http://blog.pangao.vip:8080/b.js</a></td><td>端口不同，域名和协议和相同</td><td>非同源</td></tr></tbody></table><h3 id="为什么要有同源策略"><a href="#为什么要有同源策略" class="headerlink" title="为什么要有同源策略"></a>为什么要有同源策略</h3><p>试想，如果你刚刚在网银输入账号密码，查看了自己还有 1 万块钱，紧接着访问一些不规矩的网站，这个网站可以访问刚刚的网银站点，并且获取账号密码，那后果可想而知。所以，从安全的角度来讲，同源策略是有利于保护网站信息的。</p><h3 id="为什么要跨域"><a href="#为什么要跨域" class="headerlink" title="为什么要跨域"></a>为什么要跨域</h3><p>然而，有一些情况下，我们是需要跨域访问的。比如，程序员开发网站，就有可能需要在本地访问服务器的数据。再比如某公司的 A 页面(a.pangao.vip)有可能需要获取 B 页面(b.pangao.vip)。</p><h3 id="跨域问题的-4-种解决方案"><a href="#跨域问题的-4-种解决方案" class="headerlink" title="跨域问题的 4 种解决方案"></a>跨域问题的 4 种解决方案</h3><h4 id="1、浏览器插件"><a href="#1、浏览器插件" class="headerlink" title="1、浏览器插件"></a>1、浏览器插件</h4><p>谷歌浏览器有一款允许跨域的插件 <strong>Allow CORS: Access-Control-Allow-Origin</strong>。这款插件可以在 web 应用程序中轻松执行跨域 Ajax 请求。请注意，将加载项添加到浏览器时，默认情况下它处于非活动状态（工具栏图标为灰色 C 字母）。如果要激活加载项，请按一下工具栏上的图标。图标将变为橙色 C 字母。</p><p>如果你没有梯子，谷歌打不开，那么请试试这个<a href="https://www.extfans.com/productivity/lhobafahddgcelffkeicbaginigeejlf/">Allow CORS: Access-Control-Allow-Origin </a>。在第三方网站下载插件，然后离线安装到谷歌浏览器。</p><h4 id="2、web-服务器软件"><a href="#2、web-服务器软件" class="headerlink" title="2、web 服务器软件"></a>2、web 服务器软件</h4><p>以 <strong>nginx</strong> 为例，只需要在 Nginx 的配置文件中配置以下参数：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> / &#123;<br>    <span class="hljs-attribute">add_header</span> Access-Control-Allow-Origin *;<br>    <span class="hljs-attribute">add_header</span> Access-Control-Allow-Methods <span class="hljs-string">&#x27;GET, POST, OPTIONS&#x27;</span>;<br>    <span class="hljs-attribute">add_header</span> Access-Control-Allow-Headers <span class="hljs-string">&#x27;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&#x27;</span>;<br><br>    <span class="hljs-attribute">if</span> (<span class="hljs-variable">$request_method</span> = <span class="hljs-string">&#x27;OPTIONS&#x27;</span>) &#123;<br>        <span class="hljs-attribute">return</span> <span class="hljs-number">204</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3、后端框架操作"><a href="#3、后端框架操作" class="headerlink" title="3、后端框架操作"></a>3、后端框架操作</h4><p>以 <strong>php</strong> 为例，只需要在文件开头添加如下代码即可：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lisp">header(&#x27;Access-Control-Allow-Origin<span class="hljs-symbol">:*</span>&#x27;)<span class="hljs-comment">;</span><br>header(&#x27;Access-Control-Allow-Methods<span class="hljs-symbol">:OPTIONS</span>, GET, POST&#x27;)<span class="hljs-comment">;</span><br>header(&#x27;Access-Control-Allow-Headers<span class="hljs-symbol">:x-requested-with</span>&#x27;)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>由于我使用的是 <a href="https://www.phalapi.net/">PhalApi 框架</a>，按照这个<a href="https://github.com/gongshunkai/phalapi-cors">教程</a>操作，就可以很容易的解决跨域问题。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%844%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-1.png" alt="image"></p><h4 id="4、前端框架操作"><a href="#4、前端框架操作" class="headerlink" title="4、前端框架操作"></a>4、前端框架操作</h4><p>以 <strong>vue</strong> 为例，修改 vue.config.js 文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">devServer:</span> &#123;<br>    <span class="hljs-attr">open:</span> <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">host:</span> <span class="hljs-string">&#x27;localhost&#x27;</span>,<br>    <span class="hljs-attr">port:</span> <span class="hljs-number">8080</span>,<br>    <span class="hljs-attr">overlay:</span> &#123;<br>        <span class="hljs-attr">warnings:</span> <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">errors:</span> <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-attr">proxy:</span> &#123;<br>        <span class="hljs-string">&#x27;/api&#x27;</span><span class="hljs-string">:</span> &#123;<br>            <span class="hljs-attr">target:</span> <span class="hljs-string">&#x27;http://blog.pangao.vip&#x27;</span>,<br>            <span class="hljs-attr">ws:</span> <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">changOrigin:</span> <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">pathRewrite:</span> &#123;<br>            <span class="hljs-string">&#x27;^/api&#x27;</span><span class="hljs-string">:</span> <span class="hljs-string">&#x27;&#x27;</span><br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在需要用到 <code>http://blog.pangao.vip</code> 的地方，均用 <code>api</code> 替代，比如修改 .env.development 文件如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">VUE_APP_BASE_API</span> = <span class="hljs-string">&#x27;api&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>最后，再来说说 PhalApi 框架中的问题。用过 PhalApi 框架的朋友肯定都知道，url 路由访问方式是：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>dev.phalapi.net/?service=App.Usre.Login<br></code></pre></td></tr></table></figure><p>但由于某些原因，我需要以以下方式访问：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>dev.phalapi.net<span class="hljs-regexp">/App/</span>User/Login<br></code></pre></td></tr></table></figure><p>当然，PhalApi 框架官网也是写得很清楚需要做哪些操作，以达到这种效果。结果我忘记设置了。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%844%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-2.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%844%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-3.png" alt="image"></p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>媳妇说一就是一，事业发达开飞机；<br>媳妇说五就是五，这样才能开路虎。</p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS</tag>
      
      <tag>Vue</tag>
      
      <tag>PHP</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>可能是Python中最好用的身份证解析工具—parseIdCard</title>
    <link href="/%E5%8F%AF%E8%83%BD%E6%98%AFPython%E4%B8%AD%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%A7%A3%E6%9E%90%E5%B7%A5%E5%85%B7%E2%80%94parseIdCard/"/>
    <url>/%E5%8F%AF%E8%83%BD%E6%98%AFPython%E4%B8%AD%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%A7%A3%E6%9E%90%E5%B7%A5%E5%85%B7%E2%80%94parseIdCard/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>2021.08.03，武汉新冠疫情似有复苏的迹象，于是武汉政府立即采取果断措施，启动全城核酸检测。很荣幸，我们公司也积极参与核酸检测工作。我在其中参与了核酸实验和数据校对的工作。在数据校对过程中，主要矛盾体现在身份证不匹配的问题上。于是，我写了这个可能是 Python 中最好用的身份证解析工具–parseIdCard。</p></blockquote><h3 id="身份证格式说明"><a href="#身份证格式说明" class="headerlink" title="身份证格式说明"></a>身份证格式说明</h3><p>根据〖中华人民共和国国家标准 GB11643-1999〗中有关公民身份号码的规定，公民身份号码是特征组合码，由十七位数字本体码和一位数字校验码组成。排列顺序从左至右依次为：六位数字地址码，八位数字出生日期码，三位数字顺序码和一位数字校验码。如下所示：</p><p>42 01 16 20200103 12 3 X</p><ul><li>42 &#x3D;&gt; 湖北（省）</li><li>01 &#x3D;&gt; 武汉（市）</li><li>16 &#x3D;&gt; 黄陂（区）</li><li>20200103 &#x3D;&gt; 2020 年 01 月 03 日（出生日期）</li><li>12 &#x3D;&gt; 派出所代码</li><li>3 &#x3D;&gt; 性别码</li><li>X &#x3D;&gt; 校验码</li></ul><h3 id="具体代码实现"><a href="#具体代码实现" class="headerlink" title="具体代码实现"></a>具体代码实现</h3><h4 id="地区码校验"><a href="#地区码校验" class="headerlink" title="地区码校验"></a>地区码校验</h4><p>地区码比较简单，就是地区与编码的一一对应关系，整理如下数据库就行。</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-number">420101</span>湖北武汉市市辖区<br><span class="hljs-number">420102</span>湖北武汉市江岸区<br><span class="hljs-number">420103</span>湖北武汉市江汉区<br><span class="hljs-number">420104</span>湖北武汉市乔口区<br><span class="hljs-number">420105</span>湖北武汉市汉阳区<br><span class="hljs-number">420106</span>湖北武汉市武昌区<br><span class="hljs-number">420107</span>湖北武汉市青山区<br><span class="hljs-number">420111</span>湖北武汉市洪山区<br><span class="hljs-number">420112</span>湖北武汉市东西湖区<br><span class="hljs-number">420113</span>湖北武汉市汉南区<br><span class="hljs-number">420114</span>湖北武汉市蔡甸区<br><span class="hljs-number">420115</span>湖北武汉市江夏区<br><span class="hljs-number">420116</span>湖北武汉市黄陂区<br><span class="hljs-number">420117</span>湖北武汉市新洲区<br><span class="hljs-params">...</span><span class="hljs-params">...</span><br></code></pre></td></tr></table></figure><p>再将地区码与数据库比对，用 Python 代码实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__checkArea</span>(<span class="hljs-params">areaId</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;校验地区。输入6位地区编码字符串，返回：&#123;code, id, area&#125;&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(areaId) != <span class="hljs-number">6</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: areaId, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;地区编码应该为6位&#x27;</span>&#125;<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> areaId.isdigit():<br>            dbAreaPath = os.path.join(os.path.dirname(__file__), <span class="hljs-string">&#x27;area&#x27;</span>)<br>            conn = sqlite3.connect(dbAreaPath)<br>            cur = conn.cursor()<br>            cur.execute(<span class="hljs-string">&quot;SELECT DISTINCT area FROM area WHERE id = &#x27;&quot;</span> + areaId + <span class="hljs-string">&quot;&#x27;&quot;</span>)<br>            returnArea = <span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> cur:<br>                returnArea = c[<span class="hljs-number">0</span>]<br>            conn.close()<br>            <span class="hljs-keyword">if</span> returnArea == <span class="hljs-string">&#x27;&#x27;</span>:<br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: areaId, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;未知地区编码&#x27;</span>&#125;<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: areaId, <span class="hljs-string">&#x27;area&#x27;</span>: returnArea&#125;<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: areaId, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;非法地区编码&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="出生日期校验"><a href="#出生日期校验" class="headerlink" title="出生日期校验"></a>出生日期校验</h4><p>众所周知，日期是有一定的规律的。比如：年份是四位数字，月份和日是两位数字，月份最多只有 12 月，日最多只有 31，不过有的月份是 28、29、30。把这些常见的规则，用 Python 代码实现如下：</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs coq">def __checkBirthdate(ymd):<br>    &#x27;&#x27;&#x27;校验出生日期。输入<span class="hljs-number">8</span>位出生日期字符串，返回：&#123;code, id, age&#125;&#x27;&#x27;&#x27;<br>    <span class="hljs-keyword">if</span> len(ymd) != <span class="hljs-number">8</span>:<br>        <span class="hljs-keyword">return</span> &#123;&#x27;code&#x27;: &#x27;Error&#x27;, &#x27;id&#x27;: ymd, &#x27;age&#x27;: &#x27;出生日期应该为<span class="hljs-number">8</span>位&#x27;&#125;<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> ymd.isdigit():<br>            yearInt = int(ymd[:<span class="hljs-number">4</span>])<br>            currentYearInt = datetime.now().year<br>            age = currentYearInt - yearInt<br>            <span class="hljs-keyword">if</span> age &gt;= <span class="hljs-number">0</span>:<br>                # 闰年月日:((<span class="hljs-number">01</span>|<span class="hljs-type">03</span>|<span class="hljs-type">05</span>|<span class="hljs-type">07</span>|<span class="hljs-type">08</span>|<span class="hljs-type">10</span>|<span class="hljs-type">12</span>)(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">3</span>[<span class="hljs-number">0</span><span class="hljs-number">-1</span>])|<span class="hljs-type">(04</span>|<span class="hljs-type">06</span>|<span class="hljs-type">09</span>|<span class="hljs-type">11</span>)(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">30</span>)|<span class="hljs-type">02</span>(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]))<br>                # 平年月日:((<span class="hljs-number">01</span>|<span class="hljs-type">03</span>|<span class="hljs-type">05</span>|<span class="hljs-type">07</span>|<span class="hljs-type">08</span>|<span class="hljs-type">10</span>|<span class="hljs-type">12</span>)(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">3</span>[<span class="hljs-number">0</span><span class="hljs-number">-1</span>])|<span class="hljs-type">(04</span>|<span class="hljs-type">06</span>|<span class="hljs-type">09</span>|<span class="hljs-type">11</span>)(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">30</span>)|<span class="hljs-type">02</span>(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">1</span>[<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">2</span>[<span class="hljs-number">0</span><span class="hljs-number">-8</span>]))<br>                <span class="hljs-keyword">if</span> (yearInt % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> or yearInt % <span class="hljs-number">100</span> == <span class="hljs-number">0</span> and yearInt % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>):<br>                    ereg = re.compile(&#x27;([<span class="hljs-number">1</span><span class="hljs-number">-9</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]&#123;<span class="hljs-number">3</span>&#125;)((<span class="hljs-number">01</span>|<span class="hljs-type">03</span>|<span class="hljs-type">05</span>|<span class="hljs-type">07</span>|<span class="hljs-type">08</span>|<span class="hljs-type">10</span>|<span class="hljs-type">12</span>)(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">3</span>[<span class="hljs-number">0</span><span class="hljs-number">-1</span>])|<span class="hljs-type">(04</span>|<span class="hljs-type">06</span>|<span class="hljs-type">09</span>|<span class="hljs-type">11</span>)(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">30</span>)|<span class="hljs-type">02</span>(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]))&#x27;)<br>                <span class="hljs-keyword">else</span>:<br>                    ereg = re.compile(&#x27;([<span class="hljs-number">1</span><span class="hljs-number">-9</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]&#123;<span class="hljs-number">3</span>&#125;)((<span class="hljs-number">01</span>|<span class="hljs-type">03</span>|<span class="hljs-type">05</span>|<span class="hljs-type">07</span>|<span class="hljs-type">08</span>|<span class="hljs-type">10</span>|<span class="hljs-type">12</span>)(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">3</span>[<span class="hljs-number">0</span><span class="hljs-number">-1</span>])|<span class="hljs-type">(04</span>|<span class="hljs-type">06</span>|<span class="hljs-type">09</span>|<span class="hljs-type">11</span>)(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">[1</span><span class="hljs-number">-2</span>][<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">30</span>)|<span class="hljs-type">02</span>(<span class="hljs-number">0</span>[<span class="hljs-number">1</span><span class="hljs-number">-9</span>]|<span class="hljs-type">1</span>[<span class="hljs-number">0</span><span class="hljs-number">-9</span>]|<span class="hljs-type">2</span>[<span class="hljs-number">0</span><span class="hljs-number">-8</span>]))&#x27;)<br>                <span class="hljs-keyword">if</span> (re.<span class="hljs-keyword">match</span>(ereg, ymd)):<br>                    # 校验通过<br>                    <span class="hljs-keyword">return</span> &#123;&#x27;code&#x27;: &#x27;OK&#x27;, &#x27;id&#x27;: ymd, &#x27;age&#x27;: age&#125;<br>        <span class="hljs-keyword">return</span> &#123;&#x27;code&#x27;: &#x27;Error&#x27;, &#x27;id&#x27;: ymd, &#x27;age&#x27;: &#x27;非法出生日期&#x27;&#125;<br></code></pre></td></tr></table></figure><h4 id="性别校验"><a href="#性别校验" class="headerlink" title="性别校验"></a>性别校验</h4><p>性别校验的规则比较简单，奇数为男，偶数为女。用 Python 代码实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__checkGender</span>(<span class="hljs-params">gender</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;校验性别。输入1位性别编码字符串，返回：&#123;code, id, gender&#125;&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(gender) != <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: gender, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;性别编码应该为1位&#x27;</span>&#125;<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> gender.isdigit():<br>            genderInt = <span class="hljs-built_in">int</span>(gender)<br>            <span class="hljs-keyword">if</span> genderInt % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>                <span class="hljs-comment"># 偶数 =&gt; 女</span><br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: gender, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;女&#x27;</span>&#125;<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-comment"># 奇数 =&gt; 男</span><br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: gender, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>&#125;<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: gender, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;非法性别编码&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="校验码"><a href="#校验码" class="headerlink" title="校验码"></a>校验码</h4><p>其他组码都好理解，这最后一位的校验码，就比较复杂了。校验码是根据前面十七位数字码，按照 ISO7064:1983.MOD11-2 校验码计算出来的。详细步骤如下所示：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>、将身份证号码前<span class="hljs-number">17</span>位数分别乘以不同的系数。从第一位到第十七位的系数分别为：<span class="hljs-number">7</span> <span class="hljs-number">9</span> <span class="hljs-number">10</span> <span class="hljs-number">5</span> <span class="hljs-number">8</span> <span class="hljs-number">4</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">6</span> <span class="hljs-number">3</span> <span class="hljs-number">7</span> <span class="hljs-number">9</span> <span class="hljs-number">10</span> <span class="hljs-number">5</span> <span class="hljs-number">8</span> <span class="hljs-number">4</span> <span class="hljs-number">2</span><br><span class="hljs-attribute">2</span>、将这<span class="hljs-number">17</span>位数字和系数相乘的结果相加<br><span class="hljs-attribute">3</span>、用加出来和除以<span class="hljs-number">11</span>，看余数是多少<br><span class="hljs-attribute">4</span>、余数只可能有<span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span> <span class="hljs-number">7</span> <span class="hljs-number">8</span> <span class="hljs-number">9</span> <span class="hljs-number">10</span>这<span class="hljs-number">11</span>个数字。其分别对应的校验码为<span class="hljs-number">1</span> <span class="hljs-number">0</span> X <span class="hljs-number">9</span> <span class="hljs-number">8</span> <span class="hljs-number">7</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>按照以上逻辑，用 Python 代码实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__checkJYM</span>(<span class="hljs-params">inStr</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;校验校验码。输入17位字符串，返回：&#123;code, id, area, age, gender, jym&#125;&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(inStr) != <span class="hljs-number">17</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: inStr, <span class="hljs-string">&#x27;jym&#x27;</span>: <span class="hljs-string">&#x27;请输入身份证前17位&#x27;</span>&#125;<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> inStr.isdigit():<br>            <span class="hljs-comment"># 校验地区</span><br>            resultArea = __checkArea(inStr[:<span class="hljs-number">6</span>])<br>            area = resultArea[<span class="hljs-string">&#x27;area&#x27;</span>]<br>            <span class="hljs-keyword">if</span> resultArea[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-string">&#x27;Error&#x27;</span>:<br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: inStr, <span class="hljs-string">&#x27;jym&#x27;</span>: area&#125;<br>            <span class="hljs-comment"># 校验出生日期</span><br>            resultBirthdate = __checkBirthdate(inStr[<span class="hljs-number">6</span>:<span class="hljs-number">14</span>])<br>            age = resultBirthdate[<span class="hljs-string">&#x27;age&#x27;</span>]<br>            <span class="hljs-keyword">if</span> resultBirthdate[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-string">&#x27;Error&#x27;</span>:<br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: inStr, <span class="hljs-string">&#x27;jym&#x27;</span>: age&#125;<br>            <span class="hljs-comment"># 校验性别</span><br>            resultGender = __checkGender(inStr[<span class="hljs-number">16</span>:<span class="hljs-number">17</span>])<br>            gender = resultGender[<span class="hljs-string">&#x27;gender&#x27;</span>]<br>            <span class="hljs-keyword">if</span> resultGender[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-string">&#x27;Error&#x27;</span>:<br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: inStr, <span class="hljs-string">&#x27;jym&#x27;</span>: gender&#125;<br>            S = (<span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">0</span>]) + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">10</span>])) * <span class="hljs-number">7</span> + (<span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">1</span>]) + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">11</span>])) * <span class="hljs-number">9</span> + (<span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">2</span>]) + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">12</span>])) * <span class="hljs-number">10</span> + (<span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">3</span>]) + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">13</span>])) * <span class="hljs-number">5</span> + (<span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">4</span>]) + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">14</span>])) * <span class="hljs-number">8</span> + (<span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">5</span>]) + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">15</span>])) * <span class="hljs-number">4</span> + (<span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">6</span>]) + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">16</span>])) * <span class="hljs-number">2</span> + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">7</span>]) * <span class="hljs-number">1</span> + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">8</span>]) * <span class="hljs-number">6</span> + <span class="hljs-built_in">int</span>(inStr[<span class="hljs-number">9</span>]) * <span class="hljs-number">3</span><br>            Y = S % <span class="hljs-number">11</span><br>            jym = <span class="hljs-string">&#x27;&#x27;</span>    <span class="hljs-comment"># 校验码</span><br>            jymList = <span class="hljs-string">&#x27;10X98765432&#x27;</span><br>            <span class="hljs-keyword">if</span> Y &lt;= <span class="hljs-number">10</span>:<br>                jym = jymList[Y]  <span class="hljs-comment"># 校验码</span><br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: inStr, <span class="hljs-string">&#x27;area&#x27;</span>: area, <span class="hljs-string">&#x27;age&#x27;</span>: age, <span class="hljs-string">&#x27;gender&#x27;</span>: gender, <span class="hljs-string">&#x27;jym&#x27;</span>: jym&#125;<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: inStr, <span class="hljs-string">&#x27;jym&#x27;</span>: <span class="hljs-string">&#x27;非法输入参数&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="身份证编码校验"><a href="#身份证编码校验" class="headerlink" title="身份证编码校验"></a>身份证编码校验</h4><p>综上，即可对整体身份证编码进行校验，用 Python 代码实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__checkIdCard</span>(<span class="hljs-params">idCard</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;校验身份证。输入18位身份证字符串，返回：&#123;code, id, info&#125;&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(idCard) != <span class="hljs-number">18</span>:<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: idCard, <span class="hljs-string">&#x27;info&#x27;</span>: <span class="hljs-string">&#x27;身份证编码应该为18位&#x27;</span>&#125;<br>    <span class="hljs-keyword">else</span>:<br>        idCard17 = idCard[:<span class="hljs-number">17</span>]    <span class="hljs-comment"># 前17位</span><br>        idCardLast = idCard[-<span class="hljs-number">1</span>:]    <span class="hljs-comment"># 最后一位</span><br>        <span class="hljs-keyword">if</span> idCard17.isdigit() <span class="hljs-keyword">and</span> re.<span class="hljs-keyword">match</span>(<span class="hljs-string">&#x27;([0-9]|X|x)&#x27;</span>, idCardLast):<br>            resultJYM = __checkJYM(idCard17)<br>            <span class="hljs-keyword">if</span> resultJYM[<span class="hljs-string">&#x27;code&#x27;</span>] == <span class="hljs-string">&#x27;Error&#x27;</span>:<br>                infoList = <span class="hljs-built_in">list</span>()<br>                <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;area&#x27;</span> <span class="hljs-keyword">in</span> resultJYM:<br>                    infoList.append(resultJYM[<span class="hljs-string">&#x27;area&#x27;</span>])<br>                    <span class="hljs-keyword">del</span> resultJYM[<span class="hljs-string">&#x27;area&#x27;</span>]<br>                <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;age&#x27;</span> <span class="hljs-keyword">in</span> resultJYM:<br>                    infoList.append(resultJYM[<span class="hljs-string">&#x27;age&#x27;</span>])<br>                    <span class="hljs-keyword">del</span> resultJYM[<span class="hljs-string">&#x27;age&#x27;</span>]<br>                <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;gender&#x27;</span> <span class="hljs-keyword">in</span> resultJYM:<br>                    infoList.append(resultJYM[<span class="hljs-string">&#x27;gender&#x27;</span>])<br>                    <span class="hljs-keyword">del</span> resultJYM[<span class="hljs-string">&#x27;gender&#x27;</span>]<br>                <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;jym&#x27;</span> <span class="hljs-keyword">in</span> resultJYM:<br>                    infoList.append(resultJYM[<span class="hljs-string">&#x27;jym&#x27;</span>])<br>                    <span class="hljs-keyword">del</span> resultJYM[<span class="hljs-string">&#x27;jym&#x27;</span>]<br>                resultJYM[<span class="hljs-string">&#x27;info&#x27;</span>] = <span class="hljs-string">&#x27;；&#x27;</span>.join(infoList)<br>                <span class="hljs-keyword">return</span> resultJYM<br>            <span class="hljs-keyword">if</span> idCardLast == resultJYM[<span class="hljs-string">&#x27;jym&#x27;</span>]:<br>                <span class="hljs-keyword">del</span> resultJYM[<span class="hljs-string">&#x27;jym&#x27;</span>]<br>                resultJYM[<span class="hljs-string">&#x27;info&#x27;</span>] = <span class="hljs-string">&#x27;身份证校验通过&#x27;</span><br>                <span class="hljs-keyword">return</span> resultJYM<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: idCard, <span class="hljs-string">&#x27;info&#x27;</span>: <span class="hljs-string">&#x27;身份证校验码错误&#x27;</span>&#125;<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: idCard, <span class="hljs-string">&#x27;info&#x27;</span>: <span class="hljs-string">&#x27;非法身份证编码&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="parseIdCard-工具的使用"><a href="#parseIdCard-工具的使用" class="headerlink" title="parseIdCard 工具的使用"></a>parseIdCard 工具的使用</h3><p>安装 parseIdCard 工具，如下所示：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> parseIdCard<br></code></pre></td></tr></table></figure><p>使用方法，如下所示：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-keyword">from</span> parseIdCard <span class="hljs-keyword">import</span> parseIdCard<br><br>## 校验地区码。可以输入整型，列表，字符串(可用逗号等分割多条信息码)<br>parseIdCard.parseArea(<span class="hljs-number">420116</span>)<br># 输出 &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;420116&#x27;</span>, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;湖北武汉市黄陂区&#x27;</span>&#125;<br><br>parseIdCard.parseArea([<span class="hljs-string">&#x27;429116&#x27;</span>, <span class="hljs-string">&#x27;42010&#x27;</span>])<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;429116&#x27;</span>, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;未知地区编码&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;42010&#x27;</span>, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;地区编码应该为6位&#x27;</span>&#125;]<br><br>parseIdCard.parseArea(<span class="hljs-string">&#x27;420116,420101&#x27;</span>)<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;420116&#x27;</span>, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;湖北武汉市黄陂区&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;420101&#x27;</span>, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;湖北武汉市市辖区&#x27;</span>&#125;]<br><br><br>## 校验出生日期。可以输入整型，列表，字符串(可用逗号等分割多条信息码)<br>parseIdCard.parseBirthdate(<span class="hljs-number">20200103</span>)<br># 输出 &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;20200103&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">1</span>&#125;<br><br>parseIdCard.parseBirthdate([<span class="hljs-string">&#x27;00000000&#x27;</span>, <span class="hljs-string">&#x27;22221203&#x27;</span>])<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;00000000&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-string">&#x27;非法出生日期&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;22221203&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-string">&#x27;非法出生日期&#x27;</span>&#125;]<br><br>parseIdCard.parseBirthdate(<span class="hljs-string">&#x27;20200103, 20121222&#x27;</span>)<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;20200103&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">1</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;20121222&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">9</span>&#125;]<br><br><br>## 校验性别。可以输入整型，列表，字符串(可用逗号等分割多条信息码)<br>parseIdCard.parseGender(<span class="hljs-number">1</span>)<br># 输出 &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>&#125;<br><br>parseIdCard.parseGender([<span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;X&#x27;</span>])<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;女&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;非法性别编码&#x27;</span>&#125;]<br><br>parseIdCard.parseGender(<span class="hljs-string">&#x27;12;9&#x27;</span>)<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;12&#x27;</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;性别编码应该为1位&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>&#125;]<br><br><br>## 计算校验码。可以输入整型，列表，字符串(可用逗号等分割多条信息码)<br>parseIdCard.parseJYM(<span class="hljs-number">42011620200103123</span>)<br># 输出 &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;42011620200103123&#x27;</span>, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;湖北武汉市黄陂区&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>, <span class="hljs-string">&#x27;jym&#x27;</span>: <span class="hljs-string">&#x27;X&#x27;</span>&#125;<br><br>parseIdCard.parseJYM([<span class="hljs-string">&#x27;02011620200103123&#x27;</span>, <span class="hljs-string">&#x27;4201162020010&#x27;</span>])<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;02011620200103123&#x27;</span>, <span class="hljs-string">&#x27;jym&#x27;</span>: <span class="hljs-string">&#x27;未知地区编码&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;4201162020010&#x27;</span>, <span class="hljs-string">&#x27;jym&#x27;</span>: <span class="hljs-string">&#x27;请输入身份证前17位&#x27;</span>&#125;]<br><br>parseIdCard.parseJYM(<span class="hljs-string">&#x27;02011620200103123，4201162020010&#x27;</span>)<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;02011620200103123&#x27;</span>, <span class="hljs-string">&#x27;jym&#x27;</span>: <span class="hljs-string">&#x27;未知地区编码&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;4201162020010&#x27;</span>, <span class="hljs-string">&#x27;jym&#x27;</span>: <span class="hljs-string">&#x27;请输入身份证前17位&#x27;</span>&#125;]<br><br><br>## 校验身份证编码。可以输入整型，列表，字符串(可用逗号等分割多条信息码)<br>parseIdCard.parseIdCard(<span class="hljs-number">420116202001031248</span>)<br># 输出 &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;42011620200103124&#x27;</span>, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;湖北武汉市黄陂区&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;女&#x27;</span>, <span class="hljs-string">&#x27;info&#x27;</span>: <span class="hljs-string">&#x27;身份证校验通过&#x27;</span>&#125;<br><br>parseIdCard.parseIdCard([<span class="hljs-number">420116202001031248</span>, <span class="hljs-string">&#x27;42011620200103123X&#x27;</span>])<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;42011620200103124&#x27;</span>, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;湖北武汉市黄陂区&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;女&#x27;</span>, <span class="hljs-string">&#x27;info&#x27;</span>: <span class="hljs-string">&#x27;身份证校验通过&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;OK&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;42011620200103123&#x27;</span>, <span class="hljs-string">&#x27;area&#x27;</span>: <span class="hljs-string">&#x27;湖北武汉市黄陂区&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>, <span class="hljs-string">&#x27;info&#x27;</span>: <span class="hljs-string">&#x27;身份证校验通过&#x27;</span>&#125;]<br><br>parseIdCard.parseIdCard(<span class="hljs-string">&#x27;42011620200103124X；42011620200103123&#x27;</span>)<br># 输出 [&#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;42011620200103124X&#x27;</span>, <span class="hljs-string">&#x27;info&#x27;</span>: <span class="hljs-string">&#x27;身份证校验码错误&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;code&#x27;</span>: <span class="hljs-string">&#x27;Error&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;42011620200103123&#x27;</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;身份证编码应该为18位&#x27;</span>&#125;]<br></code></pre></td></tr></table></figure><h3 id="计划升级"><a href="#计划升级" class="headerlink" title="计划升级"></a>计划升级</h3><p>后续版本计划新增智能修复身份证编码的功能。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>附上一个我穿防护服的镇楼照。希望疫情尽快过去，以后一切顺利。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8F%AF%E8%83%BD%E6%98%AFPython%E4%B8%AD%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%A7%A3%E6%9E%90%E5%B7%A5%E5%85%B7%E2%80%94parseIdCard.jpg" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python中定时任务框架APScheduler入门教程</title>
    <link href="/Python%E4%B8%AD%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%A1%86%E6%9E%B6APScheduler%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
    <url>/Python%E4%B8%AD%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%A1%86%E6%9E%B6APScheduler%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>谈到定时任务，大家可能会优先想到 linux 中的 <code>crontab</code> ，或者 windows 中的任务计划。这些工具用起来都很方便，但是说出来你可能不信，最近我在生信流程中使用 <code>crontab</code> 命令完成一些自动化操作时，遇到问题了。</p><p>不知是不是 <code>crontab</code> 命令不允许有 qsub 的提交操作，还是管理员设置了 <code>crontab</code> 发起任务的用户没有节点访问权限。。。总之，一向很便利的 <code>crontab</code> 命令居然给我挖坑了。于是，我只得自己写一个定时任务。</p><p>当然，核心功能是基于今天的主角 <code>APScheduler</code> 定时任务框架。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装只需要一行命令。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> apscheduler<br></code></pre></td></tr></table></figure><p>如果对 Python 的环境搭建及模块安装还不熟悉，可以看看我写的另一篇博客 <a href="https://pangao1990.gitee.io/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%A8%A1%E5%9D%97%E5%AE%89%E8%A3%85/">Python 环境搭建及模块安装</a> 。</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>首先介绍两个最常用的调度器：</p><ul><li><strong>BlockingScheduler</strong><br> 阻塞式调度器：适用于只跑调度器的程序。</li><li><strong>BackgroundScheduler</strong><br> 后台调度器：适用于非阻塞的情况，调度器会在后台独立运行。</li></ul><p>这是人说的话吗？字我都看得懂，意思一点也不明白。。。<br>简单说来，可以把 <code>BlockingScheduler</code> 看成是单线程，如果在程序中仅仅只运行定时任务，那么就应该选择阻塞式调度器。<br>而把 <code>BackgroundScheduler</code> 看成是多线程，如果在程序中除了运行定时任务，咱们还想同时做点别的计算啥的，那就应该选择后台调度器。</p><p>这里我选择使用 <code>BlockingScheduler</code> 阻塞式调度器，主程序只负责调度定时任务，不执行其他计算等操作。如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> apscheduler.schedulers.blocking <span class="hljs-keyword">import</span> BlockingScheduler    <span class="hljs-comment"># 引入模块</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">task</span>():<br>    <span class="hljs-string">&#x27;&#x27;&#x27;定时任务&#x27;&#x27;&#x27;</span><br>    os.system(<span class="hljs-string">&#x27;python3 spider.py&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    scheduler = BlockingScheduler()<br><br>    <span class="hljs-comment"># 添加任务</span><br>    scheduler.add_job(task, <span class="hljs-string">&#x27;cron&#x27;</span>, hour=<span class="hljs-number">11</span>, minute=<span class="hljs-number">30</span>)<br><br>    scheduler.start()<br></code></pre></td></tr></table></figure><p>运行上面这段代码，就会在每天的 11:30 时执行 <code>python3 spider.py</code> 命令。</p><p>其中，出现了个新标签 <code>cron</code>，这玩意儿叫触发器，可以设置定时任务触发的条件，这里就简单介绍一下这个小东西。</p><p>APScheduler 有三种内置的触发器：</p><h4 id="date"><a href="#date" class="headerlink" title="date"></a>date</h4><p>日期，在某个具体的日期触发定时任务，仅触发一次。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 在2020-1-3这一天的凌晨执行task函数</span><br><span class="hljs-attribute">scheduler</span>.add_job(task, &#x27;date&#x27;, run_date=date(<span class="hljs-number">2020</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>))<br><br><span class="hljs-comment"># 在1990-12-22 14:30:22时执行task函数</span><br><span class="hljs-attribute">scheduler</span>.add_job(task, &#x27;date&#x27;, run_date=&#x27;<span class="hljs-number">1990</span>-<span class="hljs-number">12</span>-<span class="hljs-number">22</span> <span class="hljs-number">14</span>:<span class="hljs-number">30</span>:<span class="hljs-number">22</span>&#x27;)<br><br><span class="hljs-comment"># 未指定时间，则会立即执行</span><br><span class="hljs-attribute">scheduler</span>.add_job(task, &#x27;date&#x27;)<br></code></pre></td></tr></table></figure><p>如上所示，run_date 参数可以是 <code>date型</code> 或 <code>str型</code>，甚至可以不显式指定。</p><h4 id="interval"><a href="#interval" class="headerlink" title="interval"></a>interval</h4><p>间隔，在某个时间间隔后触发定时任务，间隔触发无限次。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"># 每隔<span class="hljs-number">1</span>周<span class="hljs-number">3</span>天<span class="hljs-number">8</span>时<span class="hljs-number">20</span>分<span class="hljs-number">5</span>秒执行一次task函数<br>scheduler.add<span class="hljs-constructor">_job(<span class="hljs-params">task</span>, &#x27;<span class="hljs-params">interval</span>&#x27;, <span class="hljs-params">weeks</span>=1,<span class="hljs-params">days</span>=3,<span class="hljs-params">hours</span>=8,<span class="hljs-params">minutes</span>=20,<span class="hljs-params">seconds</span>=5)</span><br></code></pre></td></tr></table></figure><p>如上所示，weeks、days、hours、minutes、seconds 的参数都是 <code>int型</code>。</p><h4 id="cron"><a href="#cron" class="headerlink" title="cron"></a>cron</h4><p>周期，在某个周期内触发定时任务，循环触发无限次。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"># 每天<span class="hljs-number">8</span>时<span class="hljs-number">20</span>分执行一次task函数<br>scheduler.add<span class="hljs-constructor">_job(<span class="hljs-params">task</span>, &#x27;<span class="hljs-params">cron</span>&#x27;, <span class="hljs-params">hour</span>=8,<span class="hljs-params">minute</span>=20)</span><br><br># 从星期一到星期五的每一天<span class="hljs-number">8</span>:<span class="hljs-number">20</span>执行一次task函数，直到<span class="hljs-number">2100</span>-<span class="hljs-number">05</span>-<span class="hljs-number">20</span>程序终止<br>scheduler.add<span class="hljs-constructor">_job(<span class="hljs-params">task</span>, &#x27;<span class="hljs-params">cron</span>&#x27;, <span class="hljs-params">day_of_week</span>=&#x27;<span class="hljs-params">mon</span>-<span class="hljs-params">fri</span>&#x27;,<span class="hljs-params">hour</span>=8,<span class="hljs-params">minute</span>=20,<span class="hljs-params">end_date</span>=&#x27;2100-05-20&#x27;)</span><br></code></pre></td></tr></table></figure><p>该触发器的规则和 <code>crontab</code> 类似。各参数的说明如下：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>year</td><td>int 型或 str，取值四位数的年份，如 2020 年</td></tr><tr><td>month</td><td>int 型或 str，取值范围为 1-12 月</td></tr><tr><td>week</td><td>int 型或 str，取值范围为第 1-53 周</td></tr><tr><td>day_of_week</td><td>int 型或 str，表示一周中的第几天，既可以用 0-6 表示也可以用其英语缩写表示(mon,tue,wed,thu,fri,sat,sun)</td></tr><tr><td>day</td><td>int 型或 str，取值范围为 1-31 日</td></tr><tr><td>hour</td><td>int 型或 str，取值范围为 0-23 时</td></tr><tr><td>minute</td><td>int 型或 str，取值范围为 0-59 分</td></tr><tr><td>second</td><td>int 型或 str，取值范围为 0-59 秒</td></tr><tr><td>start_date</td><td>datetime 型或 str，表示开始时间</td></tr><tr><td>end_date</td><td>datetime 型或 str，表示结束时间</td></tr></tbody></table><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>太烧脑了，怪不得程序员会掉头发</title>
    <link href="/%E5%A4%AA%E7%83%A7%E8%84%91%E4%BA%86%EF%BC%8C%E6%80%AA%E4%B8%8D%E5%BE%97%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BC%9A%E6%8E%89%E5%A4%B4%E5%8F%91/"/>
    <url>/%E5%A4%AA%E7%83%A7%E8%84%91%E4%BA%86%EF%BC%8C%E6%80%AA%E4%B8%8D%E5%BE%97%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BC%9A%E6%8E%89%E5%A4%B4%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<blockquote><p>有人晚上会刷抖音，有人晚上会追剧，有人晚上有约会。。。而程序员的夜晚，只有编程！​ 公元 2020 年 5 月 27 日，这天，一个小小的程序员，居然花了一整晚的时间做了五个烧脑的 IT 题，你能信吗？</p></blockquote><h2 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h2><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-2.png" alt="image"></p><p>简而言之，从下面这段密码中获取答案：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">aG<span class="hljs-attr">VscC9</span>hc<span class="hljs-symbol">nRpY2</span>xlcy<span class="hljs-number">80</span>MTYz<br></code></pre></td></tr></table></figure><p>我天！这完全摸不着头脑啊！！！不过冷静下来，还是可以看出这像是经过 <code>base64</code> 加密的。来！试一试。果然，经过<code>base64</code> 解密后，得到一串“有意义的”字符。如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">help<span class="hljs-regexp">/articles/</span><span class="hljs-number">4163</span><br></code></pre></td></tr></table></figure><p>很自然，联想到网址哈。于是接到活动主页 <code>https://oschina.gitee.io/</code> 的后面，变成 <code>https://oschina.gitee.io/help/articles/4163</code> 访问。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-3.png" alt="image"></p><p>坑！一个巨大的 404 啪啪的砸到我的脸上。这，哪里出问题了。。。我去！我沙雕了，Gitee 的官网是 <code>https://gitee.io</code>。那线索肯定是在 <code>https://gitee.io/help/articles/4163</code> 里面。嘿嘿，这个网址可以访问：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-4.png" alt="image"></p><p>我仔仔细细的读完整个网页，一点点的尝试，终于发现密码就是 <code>248386765</code> ：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-5.png" alt="image"></p><p>bingo！终于通过第一关了。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-6.png" alt="image"></p><h2 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h2><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-7.png" alt="image"></p><p>我去，我想骂人，一点线索都没有，还要我找线索？于是我鼠标乱划试图碰碰运气。嘿！被我发现了秘密，原来：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-8.png" alt="image"></p><p>线索是一段网址，并且字体颜色与背景色一样，难以分辨。真鸡贼啊！</p><p>打开网址，有 5 个文件：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-9.png" alt="image"></p><p>依次打开，如下所示：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-10.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-11.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-12.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-13.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-14.png" alt="image"></p><p>除了 <code>桌子</code> 这个图有点奇怪，其他的图真找不出有啥特别的。我知道了！这还不简单吗？这就是计算机最底层的 0 和 1 嘛。那答案不就是 <code>000 01 00 1000 01 10</code>。我真是聪明啊！</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-15.png" alt="image"></p><p>我去！错了？这不科学啊！我这么完美的解释居然不对！！！那除了 0 和 1 这种编码，还有啥密码啊？密码？摩斯密码？对哦～试试，于是在网上找了个摩斯密码对照表：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-16.png" alt="image"></p><p>对照着找出密码：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">SAIBAN</span><br></code></pre></td></tr></table></figure><p>塞班？？？</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-17.png" alt="image"></p><p>哇，居然蒙对了！</p><h2 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h2><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-18.png" alt="image"></p><p>说实话，这闯关越来越难了。我实在是找不出答案，只能翻看网页源代码了。哈！居然被我发现过关的“祝贺词”：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-19.png" alt="image"></p><p>不用说了，答案肯定是这个。于是我试了又试。<code>Bug 星球？</code> <code>Bug 星球</code> <code>Bug Planet</code> <code>BugPlanet</code> <code>bug planet</code> <code>BUG PLANET</code> <code>BUGPLANET</code> …… 终于答案试出来了，就是 <code>BUGPLANET</code>。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-20.png" alt="image"></p><h2 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h2><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-21.png" alt="image"></p><p>等等，既然都打开网页源代码了，不如全局检索一下之前找到的答案，没准儿能有啥新发现呢？</p><p>于是，我发现了这个 0.o</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-22.png" alt="image"></p><p>是的，你没看错，做了半天的题目答案，居然就写死在前端代码里。只要你打开前端源代码，就可以轻而易举的找到全部答案。这。。。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-23.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-24.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-25.png" alt="image"></p><h2 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h2><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-26.png" alt="image"></p><p>由于找到“窍门”，答题速度有如神助。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-27.png" alt="image"></p><p>轻松过关。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-28.png" alt="image"></p><p>最后，还得了一个通关证书。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-29.png" alt="image"></p><p>结尾，咱们再来看看完整的故事线：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%8A%A0%E8%B6%B3%E9%A9%AC%E5%8A%9B_%E6%9C%AA%E6%9D%A5%E5%8F%AF%E6%9C%9F-30.png" alt="image"></p><p>忙了一晚上终于把 5 题都做完了，后两题不知道算不算“作弊”。不过我想，既然考察程序员，那么从源代码中找答案不仅不能算作弊，还应该要额外加分吧。那么，问题来了，怎么优雅的告诉别人，我是一枚程序员呢？</p><hr><p>更多编程趣事请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS和JS简介-HTML5极速入门</title>
    <link href="/CSS%E5%92%8CJS%E7%AE%80%E4%BB%8B-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <url>/CSS%E5%92%8CJS%E7%AE%80%E4%BB%8B-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><p><strong>CSS，又称层叠样式表，用于渲染 HTML 元素标签的样式。</strong></p><p>我们在创建 HTML 文档时，如果不使用样式美化页面，就是这个样子的：</p><p><img src="https://pangao1990.gitee.io/pic/CSS%E5%92%8CJS%E7%AE%80%E4%BB%8B-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-1.png" alt="image"></p><p>使用样式文件排版美化后，就是这样子的：</p><p><img src="https://pangao1990.gitee.io/pic/CSS%E5%92%8CJS%E7%AE%80%E4%BB%8B-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-2.png" alt="image"></p><p>CSS 可以通过以下方式添加到 HTML 中:</p><ul><li><strong>内联样式</strong> - 在 HTML 元素中使用 <code>style</code> 属性</li><li><strong>内部样式表</strong> - 在 HTML 文档头部 <code>&lt;head&gt;</code> 区域使用 <code>&lt;style&gt;</code> 元素来包含 CSS</li><li><strong>外部引用</strong> - 使用外部 CSS 文件</li></ul><h3 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h3><p>在标签中使用样式属性，如下改变段落的字体颜色：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:blue;&quot;</span>&gt;</span>潘高陪你学编程<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><p>对单个文件定义样式，就可以使用内部样式表。在<code>&lt;head&gt;</code> 部分通过 <code>&lt;style&gt;</code> 标签定义内部样式表：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">            <span class="hljs-selector-tag">body</span> &#123;<span class="hljs-attribute">background-color</span>:yellow;&#125;</span><br><span class="language-css">            <span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">color</span>:blue;&#125;</span><br><span class="language-css">        </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>潘高陪你学编程<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="外部引用"><a href="#外部引用" class="headerlink" title="外部引用"></a>外部引用</h3><p>当同一样式会被多个 HTML 文档引用时，就应该使用外部样式表。这样，修改一个 CSS 文件，就可以改变整个网站的外观。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;<span class="hljs-built_in">head</span>&gt;<br>    &lt;<span class="hljs-built_in">link</span> rel=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> href=<span class="hljs-string">&quot;/css/mystyle.css&quot;</span>&gt;<br>&lt;/head&gt;<br></code></pre></td></tr></table></figure><p>当同时使用以上三种方式时，<code>内部样式表</code>的样式会覆盖 <code>内联样式</code>，<code>外部引用</code> 的样式会覆盖<code>内部样式表</code>的样式。</p><p>很显然在建站时，更推荐使用<code>外部引用</code>。将样式文件独立出来，不仅便于统一修改，还减少了冗余代码量。不过，在极个别情况下，选择使用 <code>内部样式表</code> 修改单个 HTML 文档样式，或使用 <code>内部样式表</code> 修改单个标签的样式，也是很方便的。</p><h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><blockquote><p>JS，即 JavaScript ，可以使 HTML 页面具有更强的动态和交互性。</p></blockquote><h4 id="lt-script-gt-标签"><a href="#lt-script-gt-标签" class="headerlink" title="&lt;script&gt; 标签"></a><code>&lt;script&gt;</code> 标签</h4><p><code>&lt;script&gt;</code> 标签既可包含脚本语句，也可通过 <code>src</code> 属性指向外部脚本文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-string">&quot;潘高陪你学编程&quot;</span>);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/myjs.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="lt-noscript-gt-标签"><a href="#lt-noscript-gt-标签" class="headerlink" title="&lt;noscript&gt; 标签"></a><code>&lt;noscript&gt;</code> 标签</h4><p>只有在浏览器不支持脚本或者禁用脚本时，才会显示 <code>&lt;noscript&gt;</code> 元素中的内容。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">noscript</span>&gt;</span>抱歉，你的浏览器不支持 JavaScript!<span class="hljs-tag">&lt;/<span class="hljs-name">noscript</span>&gt;</span><br></code></pre></td></tr></table></figure><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=370797698&bvid=BV1mZ4y1p7se&cid=194808016&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>HTML5</category>
      
      <category>HTML5极速入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML5极速入门</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5常用标签-HTML5极速入门</title>
    <link href="/HTML5%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <url>/HTML5%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<blockquote><p><code>HTML</code> 文档是由各种标签组成的。那么，学习了标签的使用，也就可以轻松自如的编写<code>HTML</code> 文档了。</p></blockquote><h2 id="HTML-标题"><a href="#HTML-标题" class="headerlink" title="HTML 标题"></a>HTML 标题</h2><p>标题是通过 <code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code> 这样的标签进行定义的。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是一个标题1<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>这是一个标题2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>这是一个标题3<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>…<br>…<br><span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>这是一个标题6<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br></code></pre></td></tr></table></figure><p>其中，<code>&lt;h1&gt;</code> 是最大的标题，<code>&lt;h6&gt;</code> 是最小的标题。效果如下：</p><p><img src="https://pangao1990.gitee.io/pic/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-1.png" alt="image"></p><h2 id="HTML-水平线"><a href="#HTML-水平线" class="headerlink" title="HTML 水平线"></a>HTML 水平线</h2><p><code>&lt;hr&gt;</code> 标签可用于分隔内容，如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是一个标题1<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>这是一个标题2<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>这是一个标题3<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>这是一个标题6<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-2.png" alt="image"></p><h2 id="HTML-段落"><a href="#HTML-段落" class="headerlink" title="HTML 段落"></a>HTML 段落</h2><p>段落是通过 <code>&lt;p&gt;</code> 标签定义的，浏览器会自动地在段落的前后添加空行。如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">p</span>&gt;这是段落<span class="hljs-selector-tag">A</span>&lt;/<span class="hljs-selector-tag">p</span>&gt;<br>&lt;<span class="hljs-selector-tag">p</span>&gt;这是段落<span class="hljs-selector-tag">B</span>&lt;/<span class="hljs-selector-tag">p</span>&gt;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-3.png" alt="image"></p><h2 id="HTML-折行"><a href="#HTML-折行" class="headerlink" title="HTML 折行"></a>HTML 折行</h2><p>如果想在一个段落内进行换行，可以使用 <code>&lt;br&gt;</code> 标签，如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>现在<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>演示一下<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>分行的效果<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-4.png" alt="image"></p><h2 id="HTML-超链接"><a href="#HTML-超链接" class="headerlink" title="HTML 超链接"></a>HTML 超链接</h2><p><code>HTML</code> 文档使用超链接与网络上的另一个文档相连，如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://pangao1990.gitee.io/&quot;</span>&gt;</span>访问潘高陪你学编程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-5.png" alt="image"></p><p>如果想在新窗口打开文档，可以使用<code>target</code> 属性，如下所示：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;https://pangao1990.gitee.io/&quot;</span> <span class="hljs-attribute">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;访问潘高陪你学编程&lt;/a&gt;<br></code></pre></td></tr></table></figure><h2 id="HTML-图片"><a href="#HTML-图片" class="headerlink" title="HTML 图片"></a>HTML 图片</h2><p>在<code>HTML</code> 文档中，图像由 <code>&lt;img&gt;</code> 标签定义。该标签只包含属性，并没有闭合标签。如下所示：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;https://pangao1990.gitee.io/images/avatar.jpg&quot;</span> <span class="hljs-attribute">alt</span>=<span class="hljs-string">&quot;潘高的头像&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-6.png" alt="image"></p><p>源属性 <code>src</code> 的值是图像的 URL 地址。<code>alt</code> 属性用来为图像定义一串预备的可替换的文本，当图片获取失败时，就会显示该文本。</p><p>除此以外，可以使用 <code>height</code> 与 <code>width</code> 属性设置图像的高度与宽度，如下所示：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;https://pangao1990.gitee.io/images/avatar.jpg&quot;</span> <span class="hljs-attribute">alt</span>=<span class="hljs-string">&quot;潘高的头像&quot;</span> <span class="hljs-attribute">width</span>=<span class="hljs-string">&quot;300&quot;</span> <span class="hljs-attribute">height</span>=<span class="hljs-string">&quot;400&quot;</span>&gt;<br></code></pre></td></tr></table></figure><h2 id="HTML-表格"><a href="#HTML-表格" class="headerlink" title="HTML 表格"></a>HTML 表格</h2><p>表格由 <code>&lt;table&gt;</code> 标签来定义。每个表格均有若干行（由 <code>&lt;tr&gt;</code> 标签定义），每行被分割为若干单元格（由 <code>&lt;td&gt;</code> 标签定义）。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。如下所示：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;table border=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br><span class="hljs-section">&lt;tr&gt;</span><br><span class="hljs-section">&lt;th&gt;</span><span class="hljs-attribute">Header</span> <span class="hljs-number">1</span>&lt;/th&gt;<br><span class="hljs-section">&lt;th&gt;</span><span class="hljs-attribute">Header</span> <span class="hljs-number">2</span>&lt;/th&gt;<br><span class="hljs-section">&lt;/tr&gt;</span><br><span class="hljs-section">&lt;tr&gt;</span><br><span class="hljs-section">&lt;td&gt;</span><span class="hljs-attribute">row</span> <span class="hljs-number">1</span>, cell <span class="hljs-number">1</span>&lt;/td&gt;<br><span class="hljs-section">&lt;td&gt;</span><span class="hljs-attribute">row</span> <span class="hljs-number">1</span>, cell <span class="hljs-number">2</span>&lt;/td&gt;<br><span class="hljs-section">&lt;/tr&gt;</span><br><span class="hljs-section">&lt;tr&gt;</span><br><span class="hljs-section">&lt;td&gt;</span><span class="hljs-attribute">row</span> <span class="hljs-number">2</span>, cell <span class="hljs-number">1</span>&lt;/td&gt;<br><span class="hljs-section">&lt;td&gt;</span><span class="hljs-attribute">row</span> <span class="hljs-number">2</span>, cell <span class="hljs-number">2</span>&lt;/td&gt;<br><span class="hljs-section">&lt;/tr&gt;</span><br><span class="hljs-section">&lt;/table&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-7.png" alt="image"></p><h2 id="HTML-列表"><a href="#HTML-列表" class="headerlink" title="HTML 列表"></a>HTML 列表</h2><p><code>HTML</code> 文档支持有序列表和无序列表，如下所示:</p><ul><li>有序列表</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第一个序列<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第二个序列<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>第三个序列<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-8.png" alt="image"></p><ul><li>无序列表</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是序列<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是序列<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是序列<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-9.png" alt="image"></p><h2 id="HTML-区块和内联"><a href="#HTML-区块和内联" class="headerlink" title="HTML 区块和内联"></a>HTML 区块和内联</h2><p>大多数 <code>HTML</code> 元素被定义为<code>块级元素</code>或<code>内联元素</code>。</p><ul><li>块级元素</li></ul><p><code>块级元素</code>在浏览器显示时，通常会以新行来开始和结束。例如: <code>&lt;h1&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;table&gt;</code> 等。</p><p>这里介绍一个新的块级元素标签 <code>&lt;div&gt;</code>。她没有特定的含义，是组合其他 <code>HTML</code> 元素的容器。</p><ul><li>内联元素</li></ul><p><code>内联元素</code>在显示时通常不会以新行开始。</p><p>这里介绍一个新的内联元素标签 <code>&lt;span&gt;</code>。她也没有特定的含义，是文本的容器。</p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=413162234&bvid=BV1kV411k7io&cid=191022872&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>HTML5</category>
      
      <category>HTML5极速入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML5极速入门</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5标签-HTML5极速入门</title>
    <link href="/HTML5%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <url>/HTML5%E6%A0%87%E7%AD%BE-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<blockquote><p>HTML 文档是由 HTML 标签组成的。</p></blockquote><p>标签由 <code>开始标签</code> 和 <code>结束标签</code> 组成，之间夹杂着标签内容。如下所示：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span>&gt;潘高陪你学编程&lt;/<span class="hljs-keyword">div</span>&gt;<br></code></pre></td></tr></table></figure><p><code>&lt;div&gt;</code> 是 <code>开始标签</code> ，<code>&lt;/div&gt;</code> 是 <code>结束标签</code> ，<code>潘高陪你学编程</code> 是标签内容。</p><p>当然了，有的极个别标签是没有 <code>结束标签</code> 的，比如：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;br /&gt;</span><br></code></pre></td></tr></table></figure><p>大多数标签都是带有属性的，比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://blog.pangao.vip&quot;</span>&gt;</span>潘高陪你学编程<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>属性是描述于 <code>开始标签</code> 之中</li><li>属性总是以名称&#x2F;值对的形式出现，比如：key&#x3D;”value”</li><li>属性值应该始终被包括在引号内，双引号是最常用的。但在极少数情况下，比如属性值本身就含有双引号，那么必须使用单引号，比如：key&#x3D;’潘高”陪你”学编程’</li><li>属性和属性值对大小写不敏感，不过建议都使用小写</li></ul><p>常见的属性有这么几种：</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>class</td><td>为 html 标签定义一个或多个类名（classname）(类名从样式文件引入)</td></tr><tr><td>id</td><td>定义元素的唯一 id</td></tr><tr><td>style</td><td>规定元素的行内样式（inline style）</td></tr><tr><td>…</td><td>…</td></tr></tbody></table><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=412797369&bvid=BV1ZV411o7EK&cid=180173723&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>HTML5</category>
      
      <category>HTML5极速入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML5极速入门</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML编辑器-HTML5极速入门</title>
    <link href="/HTML%E7%BC%96%E8%BE%91%E5%99%A8-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <url>/HTML%E7%BC%96%E8%BE%91%E5%99%A8-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<blockquote><p>工欲善其事，必先利其器。一个好的编辑器会让编程过程变得事半功倍。</p></blockquote><p>对于 <code>HTML</code> 编程，我用过这么几款编辑器。</p><p>首先是<strong>Dreamweaver</strong>，这还是我在读大学那会儿使用的网页编辑器。我依稀记得这款编辑器最大的特点就是可以进行拖拽操作。随意将按钮、选项框、图片等元素拖拽到页面进行布局，别提有多方便了。</p><p>在我参加工作之后就是使用<strong>Webstorm</strong>编辑器了，这款软件可以说是极大提升了生产力。在编程过程中所需要的一切应用都被集成到这款软件中了。比如代码高亮、比如代码补全、比如代码测试、等等。唯一的缺点就是，由于高度集成导致软件本身很大，配置不高的电脑会比较卡，发热严重。</p><p>近几年出现了一款后起之秀，也就是<strong>VSCode</strong>。这是微软出的一款编辑器。当我第一次接触到这款软件就对他爱不释手了。以至于我一时激愤将我电脑上绝大多数的编辑器都卸载了，接下来的编程都是在 VSCode 上完成的。比如 Python、Java、PHP、Vue 等等。</p><p>除此以外，还有一款元老级编辑器，那就是大名鼎鼎的<strong>记事本</strong>。在操作系统出现之初，这款编辑器就存在了。她可以编写天下所有的软件，而且没有兼容的问题、没有软件臃肿的问题、没有软件过时的问题。唯一的缺点就是门槛太高了，小白慎入。</p><p>根据我的经验，我推荐大家使用 <strong>VSCode</strong> 来编写<code>HTML</code>代码。</p><h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>首先在<a href="https://code.visualstudio.com/">官网</a>下载 VSCode 的安装包。比较简单，这里就不演示了。</p><h3 id="安装拓展"><a href="#安装拓展" class="headerlink" title="安装拓展"></a>安装拓展</h3><p>这款编辑器的特点就是想要什么功能就自己装什么拓展。这里我推荐安装 2 个拓展：<code>Chinese (Simplified) Language Pack for Visual Studio Code</code> 和 <code>open in browser</code>。这两个拓展分别是用来显示中文和快速调用浏览器展示网页的。如下所示：<br><img src="https://pangao1990.gitee.io/pic/HTML%E7%BC%96%E8%BE%91%E5%99%A8-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-1.png" alt="image"></p><h3 id="编写-HTML-代码"><a href="#编写-HTML-代码" class="headerlink" title="编写 HTML 代码"></a>编写 HTML 代码</h3><p>首先新建文本 <code>test.html</code>，如下所示：<br><img src="https://pangao1990.gitee.io/pic/HTML%E7%BC%96%E8%BE%91%E5%99%A8-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-2.png" alt="image"></p><p>然后在 html 文件中写入代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>潘高的小站<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    我的第一个博客网址是 http://blog.pangao.vip<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>最后按 <code>alt</code> + <code>B</code> 调用浏览器，展示网页效果，如下所示：<br><img src="https://pangao1990.gitee.io/pic/HTML%E7%BC%96%E8%BE%91%E5%99%A8-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-3.png" alt="image"></p><p>至此，我们就完成了使用<strong>VSCode</strong>编写一个简单网页的过程，是不是很简单呢？！</p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=667839445&bvid=BV1Za4y1x7P5&cid=178849891&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>HTML5</category>
      
      <category>HTML5极速入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML5极速入门</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5简介-HTML5极速入门</title>
    <link href="/HTML5%E7%AE%80%E4%BB%8B-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <url>/HTML5%E7%AE%80%E4%BB%8B-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="什么是-HTML？"><a href="#什么是-HTML？" class="headerlink" title="什么是 HTML？"></a>什么是 HTML？</h3><ul><li><p>HTML 是一种超文本标记语言（英语：<strong>H</strong>yper<strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage）</p></li><li><p>HTML 文档也叫做<strong>web 页面</strong>（网页）</p></li><li><p>HTML 文档包含了<strong>HTML 标签</strong>及<strong>文本</strong>内容</p></li><li><p>HTML 不是一种<strong>编程语言</strong>，而是一种<strong>标记语言</strong></p></li></ul><h3 id="HTML-标签"><a href="#HTML-标签" class="headerlink" title="HTML 标签"></a>HTML 标签</h3><ul><li><p>HTML 标签是由尖括号包围的关键词，比如 <code>&lt;html&gt;</code></p></li><li><p>HTML 标签通常是成对出现的，比如 <code>&lt;b&gt;</code> 和 <code>&lt;/b&gt;</code></p></li><li><p>标签对中的第一个标签是<strong>开始标签</strong>，第二个标签是<strong>结束标签</strong></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">标签</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">标签</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Web-浏览器"><a href="#Web-浏览器" class="headerlink" title="Web 浏览器"></a>Web 浏览器</h3><p><code>Web浏览器</code>是用于读取 HTML 文件，并将其作为网页显示的。</p><p>浏览器并不是直接显示的 HTML 标签，但可以使用标签来决定如何展现 HTML 页面的内容给用户。</p><p><img src="https://pangao1990.gitee.io/pic/HTML5%E7%AE%80%E4%BB%8B-HTML5%E6%9E%81%E9%80%9F%E5%85%A5%E9%97%A8-1.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=710354080&bvid=BV17Q4y1T7Ki&cid=178427428&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>HTML5</category>
      
      <category>HTML5极速入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML5极速入门</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>soap比对结果文件说明</title>
    <link href="/soap%E6%AF%94%E5%AF%B9%E7%BB%93%E6%9E%9C%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/"/>
    <url>/soap%E6%AF%94%E5%AF%B9%E7%BB%93%E6%9E%9C%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<p><strong>soap</strong> 是 <a href="https://www.bgi.com/">华大基因</a> 开发的一款短序列比对软件，软件主页是 <a href="http://soap.genomics.org.cn/soapaligner.html">http://soap.genomics.org.cn/soapaligner.html</a> 。不过很可惜，这个网址已经没人维护了。</p><p>由于我现在承接了一个古老的项目（2012年的），项目中就是用的soap比对，因此这里整理了网上对该比对软件的结果文件介绍。</p><p>soap格式文件可以用纯文本编辑器打开，部分内容如下所示：</p><span id="more"></span><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tap">CL100152537L1C001R001_82        TTATAAATAAAACTCCCATCTCCCTGGGACAGAGC     FFEGGEFGDGGGFGFGGFGGGFGGF;@BAFF;E@E    <span class="hljs-number"> 18 </span>     a      <span class="hljs-number"> 35 </span>     +       chr8   <span class="hljs-number"> 89537925 </span>      <span class="hljs-number"> 0 </span>      35M     35<br>CL100152537L1C001R001_100       AGAAAACACTCCCTCAGGGAAGTGCCAGCCCTCCT     &gt;8@F?DGFGGEGGFGB7?7FAAF&gt;GF9BBGFGGGF    <span class="hljs-number"> 1 </span>      a      <span class="hljs-number"> 35 </span>     +       chr11  <span class="hljs-number"> 65819516 </span>      <span class="hljs-number"> 1 </span>      G-&gt;15A2 35M     15G19<br>...<br></code></pre></td></tr></table></figure><p>从左至右，依次表示：  </p><ul><li><strong>编号</strong>：read的编号。</li><li><strong>read序列</strong>：如果read比对上参考序列的负链，会被反向互补为正链。</li><li><strong>质量值</strong>：序列的质量值，和序列顺序一致，如果read反向互补，质量值也会随着改变。</li><li><strong>比对次数</strong>：比对上的次数。没有比对上的read将被忽略。</li><li><strong>a&#x2F;b</strong>：pair-end比对的标记， 表示read属于来自哪个文件。</li><li><strong>长度</strong>：read长度，如果是容缺失的比对，长度将是加上缺失片断的长度。</li><li>**+&#x2F;-**：比对上参考序列的正链或负链。</li><li><strong>染色体名称</strong>：参考序列的染色体名称。</li><li><strong>位点</strong>：第一个碱基在染色体上的位置，从1开始。</li><li><strong>错配的个数</strong>：默认为0。</li><li><strong>错配的详细信息</strong>：<code>G-&gt;15A2</code>  意思是一个错配,在参考序列的位置是的位置+15（从0开始），在参考序列上是G，read上是A，质量值是2。</li><li><strong>比对上的数目</strong>：<code>35M</code> 意思是35个碱基比对上了。</li><li><strong>对比的细节</strong>：<code>15G19</code>意思是前15个比对上了，第16（参考序列上位置+16）个是错配，后面19个还是比对上了。</li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>生物信息分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生物信息分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3报错-Python入门到精通</title>
    <link href="/Python3%E6%8A%A5%E9%94%99-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E6%8A%A5%E9%94%99-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h2 id="Python3-报错"><a href="#Python3-报错" class="headerlink" title="Python3 报错"></a>Python3 报错</h2><p>我们在写程序的时候最喜闻乐见的就是程序打印出我们想要的结果。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E6%8A%A5%E9%94%99-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-1.png" alt="image"></p><p>最怕的就是程序没有按照我们预先设想的样子运行，完了还爆出一堆的错误信息。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E6%8A%A5%E9%94%99-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-2.png" alt="image"></p><p>本章要介绍的就是 python 中的报错信息。报错信息有很多种，这里介绍两种比较常见的报错信息：</p><ul><li>语法错误</li><li>逻辑异常</li></ul><h3 id="语法错误"><a href="#语法错误" class="headerlink" title="语法错误"></a>语法错误</h3><p>我们先来看看什么是语法错误。还记得我们之前讲的 for 循环语句，必须要带冒号，如果不带冒号，就会报语法错误。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">list</span> = [<span class="hljs-string">&#x27;苹果&#x27;</span>, <span class="hljs-string">&#x27;西瓜&#x27;</span>, <span class="hljs-string">&#x27;葡萄&#x27;</span>]<br><span class="hljs-keyword">for</span> <span class="hljs-keyword">lt</span> in <span class="hljs-keyword">list</span><br>    <span class="hljs-keyword">print</span>(<span class="hljs-keyword">lt</span>)<br><br><br><span class="hljs-keyword">for</span> <span class="hljs-keyword">lt</span> in <span class="hljs-keyword">list</span><br>                 ^<br>SyntaxError: invalid <span class="hljs-keyword">syntax</span><br></code></pre></td></tr></table></figure><p>如果循环语句中没有缩进，也会报语法错误。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs perl">list = [<span class="hljs-string">&#x27;苹果&#x27;</span>, <span class="hljs-string">&#x27;西瓜&#x27;</span>, <span class="hljs-string">&#x27;葡萄&#x27;</span>]<br><span class="hljs-keyword">for</span> <span class="hljs-keyword">lt</span> in list:<br><span class="hljs-keyword">print</span>(<span class="hljs-keyword">lt</span>)<br><br><br>    <span class="hljs-keyword">print</span>(<span class="hljs-keyword">lt</span>)<br>        ^<br>IndentationError: expected an indented block<br></code></pre></td></tr></table></figure><p>报错信息中写的很清楚，按照提示修改就可以了。</p><h3 id="逻辑异常"><a href="#逻辑异常" class="headerlink" title="逻辑异常"></a>逻辑异常</h3><p>在语法正确的情况下，如果程序中出现逻辑错误，那么也是会报错的，这类错误就是逻辑异常。</p><p>比如计算 1&#x2F;0，我们知道 0 是不能作为除数的，这属于逻辑错误，程序就会报异常。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-keyword">a</span> = <span class="hljs-number">1</span> / <span class="hljs-number">0</span><br>print(<span class="hljs-keyword">a</span>)<br><br>    <span class="hljs-keyword">a</span> = <span class="hljs-number">1</span> / <span class="hljs-number">0</span><br>ZeroDivisionError: division <span class="hljs-keyword">by</span> <span class="hljs-literal">zero</span><br></code></pre></td></tr></table></figure><p>再比如这个例子，程序就会报异常，说 b 这个玩意儿没有定义，不知道是啥。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">a</span> = <span class="hljs-number">1</span> / <span class="hljs-selector-tag">b</span><br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(a)</span></span><br><br>    <span class="hljs-selector-tag">a</span> = <span class="hljs-number">1</span> / <span class="hljs-selector-tag">b</span><br>NameError: name <span class="hljs-string">&#x27;b&#x27;</span> is not defined<br></code></pre></td></tr></table></figure><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>有的时候我们怀疑某段代码可能会报错，或者说是担心会报错，但是又不希望程序会因此断掉。这时候我们就可以用 try 语句捕获异常信息。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable"><span class="hljs-keyword">try</span></span>:<br>    <span class="hljs-number">1</span>/<span class="hljs-number">0</span><br><span class="hljs-variable"><span class="hljs-keyword">except</span></span>:<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-string">&#x27;程序报错了&#x27;</span>)</span><br><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-string">&#x27;无论1/0对不对，我都不希望程序中止&#x27;</span>)</span><br></code></pre></td></tr></table></figure><p>正如上面这个例子，虽然 1&#x2F;0 是逻辑错误，但是程序并不会报错，程序会依次输出这两句话，然后程序正常退出。</p><p>我们也可以根据报错信息的不同做分类处理。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable"><span class="hljs-keyword">try</span></span>:<br>    <span class="hljs-variable">a</span>/<span class="hljs-number">0</span><br><span class="hljs-variable"><span class="hljs-keyword">except</span></span> <span class="hljs-variable">ZeroDivisionError</span>:<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-string">&#x27;0不能作为被除数&#x27;</span>)</span><br><span class="hljs-variable"><span class="hljs-keyword">except</span></span> <span class="hljs-variable">NameError</span>:<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-string">&#x27;变量没有被定义&#x27;</span>)</span><br></code></pre></td></tr></table></figure><p>正如上面这个例子，我们可以分别捕获 <code>0不能作为被除数</code> 和 <code>变量没有被定义</code> 这两类异常信息。</p><p>当然，我们也可以加上 else 语句，当 try 里的内容一点错误也没有时，执行 else 里的代码。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable"><span class="hljs-keyword">try</span></span>:<br>    <span class="hljs-variable">a</span>/<span class="hljs-number">0</span><br><span class="hljs-variable"><span class="hljs-keyword">except</span></span> <span class="hljs-variable">ZeroDivisionError</span>:<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-string">&#x27;0不能作为被除数&#x27;</span>)</span><br><span class="hljs-variable"><span class="hljs-keyword">except</span></span> <span class="hljs-variable">NameError</span>:<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-string">&#x27;变量没有被定义&#x27;</span>)</span><br><span class="hljs-variable"><span class="hljs-keyword">else</span></span>:<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-string">&#x27;没有任何报错&#x27;</span>)</span><br></code></pre></td></tr></table></figure><hr><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><p>尝试给下列代码添加上 try 语句，并分别捕获 <code>ZeroDivisionError</code> 、<code>NameError</code> 异常。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">x</span> = <span class="hljs-function"><span class="hljs-title">int</span>(<span class="hljs-title">input</span>(<span class="hljs-string">&quot;请输入一个整数: &quot;</span>))</span><br><br><span class="hljs-variable">y</span> = <span class="hljs-number">1</span> / <span class="hljs-variable">x</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-variable">x</span> + <span class="hljs-string">&quot;的倒数是：&quot;</span> + <span class="hljs-variable">y</span>)</span><br></code></pre></td></tr></table></figure><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=73873428&cid=126366209&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr><h3 id="习题答案"><a href="#习题答案" class="headerlink" title="习题答案"></a>习题答案</h3><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable"><span class="hljs-keyword">try</span></span>:<br>    <span class="hljs-variable">x</span> = <span class="hljs-function"><span class="hljs-title">int</span>(<span class="hljs-title">input</span>(<span class="hljs-string">&quot;请输入一个整数: &quot;</span>))</span><br><br>    <span class="hljs-variable">y</span> = <span class="hljs-number">1</span> / <span class="hljs-variable">x</span><br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-variable">x</span> + <span class="hljs-string">&quot;的倒数是：&quot;</span> + <span class="hljs-variable">y</span>)</span><br><span class="hljs-variable"><span class="hljs-keyword">except</span></span> <span class="hljs-variable">ZeroDivisionError</span>:<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-string">&#x27;0不能作为被除数&#x27;</span>)</span><br><span class="hljs-variable"><span class="hljs-keyword">except</span></span> <span class="hljs-variable">NameError</span>:<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-string">&#x27;变量没有被定义&#x27;</span>)</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3模块-Python入门到精通</title>
    <link href="/Python3%E6%A8%A1%E5%9D%97-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E6%A8%A1%E5%9D%97-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><p>模块是一个包含所有定义的函数和变量的文件，其后缀名是 <code>.py</code> 。模块可以被别的程序引入，以调用该模块中的函数等功能。这也是使用 python 标准库的方法。</p><h3 id="import-语句"><a href="#import-语句" class="headerlink" title="import 语句"></a>import 语句</h3><p>想要引用模块，只需要执行 import 语句就可以了。我们来看个示例。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Filename: printHello.py</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>(<span class="hljs-params"> name </span>):<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;Hello : &quot;</span>, name)<br></code></pre></td></tr></table></figure><p>新建一个 <code>printHello.py</code> 的文件，写入一个 <code>hello</code> 的函数。这个文件就是一个模块。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-meta"># Filename: test.py</span><br><br><span class="hljs-meta">#导入模块</span><br><span class="hljs-keyword">import</span> printHello<br><br><span class="hljs-meta"># 现在可以调用模块里包含的函数了</span><br><span class="hljs-title">printHello</span>.hello(<span class="hljs-string">&quot;Python&quot;</span>)<br></code></pre></td></tr></table></figure><p>我们再在<strong>同一目录</strong>下新建一个 <code>test.py</code> 的文件，使用 <code>import</code> 导入 <code>printHello</code> 这个模块。注意：导入模块时，不加后缀 <code>.py</code> 。这时就可以使用 <code>printHello.hello</code> 这种形式调用模块中的 <code>hello</code> 函数了。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">$ <span class="hljs-keyword">python3</span> test.<span class="hljs-keyword">py</span><br>Hello : Python<br></code></pre></td></tr></table></figure><p>直接运行 test 这个脚本，我们可以看到，结果输出 Hello Python。</p><p>这里，我们就完成了模块的调用。</p><h3 id="from-…-import-语句"><a href="#from-…-import-语句" class="headerlink" title="from … import 语句"></a>from … import 语句</h3><p>Python 的 <code>from … import</code> 语句可以从模块中导入一个指定的部分到当前脚本中。</p><p>比如还是刚才的示例：</p><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs capnproto"><span class="hljs-comment"># Filename: test.py</span><br><br><span class="hljs-comment">#导入模块</span><br><span class="hljs-keyword">from</span> printHello <span class="hljs-keyword">import</span> hello<br><br><span class="hljs-comment"># 现在可以调用模块里包含的函数了</span><br>hello(<span class="hljs-string">&quot;Python&quot;</span>)<br></code></pre></td></tr></table></figure><p>我们改用 <code>from … import</code> 语句，就是 from 这个模块 import 函数，这样可以不必将整个模块导入，而只导入我们需要用到的函数。在调用的时候也是直接写函数名，而不必写模块名了。</p><h3 id="包"><a href="#包" class="headerlink" title="包"></a>包</h3><p>包是一种管理 Python 模块命名空间的形式。通俗来理解呢，就是文件夹名称。</p><p>还是之前的示例，还记得吗？这两个文件必须是在同一目录下，如果是不同的目录下该怎么引入模块呢？这时候就需要用到“包”的概念了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Filename: package/printHello.py</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>(<span class="hljs-params"> name </span>):<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;Hello : &quot;</span>, name)<br></code></pre></td></tr></table></figure><p>比如我们将 printHello.py 这个文件放置在 package 这个文件夹下。</p><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs capnproto"><span class="hljs-comment"># Filename: test.py</span><br><br><span class="hljs-comment">#导入模块</span><br><span class="hljs-keyword">from</span> package.printHello <span class="hljs-keyword">import</span> hello<br><br><span class="hljs-comment"># 现在可以调用模块里包含的函数了</span><br>hello(<span class="hljs-string">&quot;Python&quot;</span>)<br></code></pre></td></tr></table></figure><p>那么，我们导入模块时就可以用 <code>.</code> 表示文件夹分割。其他的，就和之前的用法一样了。</p><hr><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><p>上百度，谷歌一下。理解下列模块中函数的用法和意义。</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs moonscript"><span class="hljs-keyword">import</span> sys<br><br>sys.path[<span class="hljs-number">0</span>]<br>sys.argv[<span class="hljs-number">0</span>]<br><br><br><br><span class="hljs-keyword">import</span> <span class="hljs-built_in">os</span><br><br><span class="hljs-built_in">os</span>.getcwd()<br><span class="hljs-built_in">os</span>.path.dirname(path)<br><span class="hljs-built_in">os</span>.sep<br><span class="hljs-built_in">os</span>.rename(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;test.py’)</span><br><span class="hljs-string">os.remove(&#x27;</span>test.txt’)<br><span class="hljs-built_in">os</span>.path.isfile(<span class="hljs-string">&#x27;test.txt’)</span><br><span class="hljs-string">os.path.exists(directory)</span><br></code></pre></td></tr></table></figure><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=73774198&cid=126189243&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr><h3 id="习题答案"><a href="#习题答案" class="headerlink" title="习题答案"></a>习题答案</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs pf">import sys<br><br>sys.path[<span class="hljs-number">0</span>]    <span class="hljs-comment"># 获取当前工作目录</span><br>sys.argv[<span class="hljs-number">0</span>]    <span class="hljs-comment"># 获取当前脚本名</span><br><br><br><br>import <span class="hljs-keyword">os</span><br><br><span class="hljs-keyword">os</span>.getcwd()    <span class="hljs-comment"># 获取执行命令的位置</span><br><span class="hljs-keyword">os</span>.path.dirname(path)    <span class="hljs-comment"># 去掉文件名，返回目录</span><br><span class="hljs-keyword">os</span>.sep    <span class="hljs-comment"># 表示不同操作系统的路径分隔符</span><br><span class="hljs-keyword">os</span>.rename(&#x27;test.txt&#x27;, &#x27;test.py’)    <span class="hljs-comment"># 文件重命名</span><br><span class="hljs-keyword">os</span>.remove(&#x27;test.txt’)    <span class="hljs-comment"># 删除文件</span><br><span class="hljs-keyword">os</span>.path.isfile(&#x27;test.txt’)    <span class="hljs-comment"># 判断文件是否存在，如果不存在就返回False</span><br><span class="hljs-keyword">os</span>.path.exists(directory)    <span class="hljs-comment"># 判断目录是否存在，如果目录不存在就返回False</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3函数-Python入门到精通</title>
    <link href="/Python3%E5%87%BD%E6%95%B0-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E5%87%BD%E6%95%B0-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>函数是一段可重复使用的、实现特定功能的代码块。函数的特点是能提高应用的<strong>模块性</strong>，和代码的<strong>复用性</strong>。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><code>Python</code> 定义函数使用 <code>def</code> 关键字，一般格式如下：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-function"><span class="hljs-keyword">def</span> 函数名（参数列表）:</span><br><span class="hljs-function">    函数体</span><br></code></pre></td></tr></table></figure><p>我们需要注意以下几点：</p><ul><li>函数代码块以 <code>def</code> 关键词开头，后接函数标识符名称和圆括号 ()。</li><li>任何传入参数和自变量必须放在圆括号中间，圆括号之间可以用于定义参数。</li><li>函数的第一行语句可以选择性地使用文档字符串,用于存放函数说明。</li><li>函数内容以冒号起始，并且缩进。</li><li>return [表达式] 结束函数，选择性地返回一个值给调用方。不带表达式的 <code>return</code> 相当于返回 <code>None</code> 。</li></ul><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><p>我们写一个函数，用于输出 <code>Hello Python!</code> 。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">def</span> <span class="hljs-function"><span class="hljs-title">hello</span>():</span><br><span class="hljs-function">    <span class="hljs-title">print</span>(<span class="hljs-string">&quot;Hello Python!&quot;</span>)</span><br></code></pre></td></tr></table></figure><p>给函数加上一段注释。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;输出你好&quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello Python!&quot;</span>)<br></code></pre></td></tr></table></figure><p>添加一个参数，并给参数设置默认值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>(<span class="hljs-params">name=<span class="hljs-string">&#x27;Python&#x27;</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;输出你好&quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello &quot;</span> + name + <span class="hljs-string">&quot;!&quot;</span>)<br></code></pre></td></tr></table></figure><p>设置返回值，若不设置，则默认返回值为 <code>None</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>(<span class="hljs-params">name=<span class="hljs-string">&#x27;Python&#x27;</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;输出你好&quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello &quot;</span> + name + <span class="hljs-string">&quot;!&quot;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;ok&#x27;</span><br></code></pre></td></tr></table></figure><p>调用函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>(<span class="hljs-params">name=<span class="hljs-string">&#x27;Python&#x27;</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;输出你好&quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello &quot;</span> + name + <span class="hljs-string">&quot;!&quot;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;ok&#x27;</span><br><br>h = hello()<br><span class="hljs-built_in">print</span>(h)<br></code></pre></td></tr></table></figure><hr><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><p>找出下列代码中的错误和不规范的地方。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">getMax</span>(<span class="hljs-params">a=<span class="hljs-number">0</span>, b = <span class="hljs-number">0</span>, c</span>)<br><span class="hljs-string">&#x27;&#x27;&#x27;返回a,b,c三个数中最大的数&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> a &gt;= b <span class="hljs-keyword">and</span> a &gt; c:<br>        <span class="hljs-keyword">return</span> a;<br>    elseif b &gt; a &amp;&amp; b &gt; c:<br>        <span class="hljs-keyword">return</span> b<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> c<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=73665412&cid=126000422&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr><h3 id="习题答案"><a href="#习题答案" class="headerlink" title="习题答案"></a>习题答案</h3><p><strong>有 4 处错误：</strong></p><ul><li><code>def getMax()</code> 函数后面忘写 <code>:</code> 。正确写法为<code>def getMax():</code></li><li>注释写的不对，函数体需要缩进，如下：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">getMax</span>():<br>    <span class="hljs-string">&#x27;&#x27;&#x27;返回a,b,c三个数中最大的数&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure></li><li>python 中 <code>elseif</code> 这种写法是错误的，正确的写法是 <code>elif</code> 。</li><li>python 中没有 <code>&amp;&amp;</code> 这种表示方式，表示 <code>且</code> 的正确方式是 <code>and</code> 。</li></ul><p><strong>有 4 处不规范：</strong></p><ul><li>作为参数时 <code>b = 0</code> 的 <code>=</code> 左右最好不要空格，规范写法为： <code>b=0</code></li><li>作为参数时， <code>a=0, b=0, c</code> 这种写法不好。最好是要么都指定默认值，要么都没有默认值。比如 <code>a=0, b=0, c=0</code> 或 <code>a, b, c</code></li><li>python 中不必在语句末尾写 <code>;</code> ，所以不推荐 <code>return a;</code> 这么写，推荐的写法是： <code>return a</code> 。</li><li>在本代码中的最后一句 <code>return None</code> 是多余的，无论代码怎么运行，都不会执行这一句。因此，本句应该删除。</li></ul><p>所以，优化后的代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">getMax</span>(<span class="hljs-params">a, b, c</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;返回a,b,c三个数中最大的数&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> a &gt;= b <span class="hljs-keyword">and</span> a &gt; c:<br>        <span class="hljs-keyword">return</span> a<br>    <span class="hljs-keyword">elif</span> b &gt; a <span class="hljs-keyword">and</span> b &gt; c:<br>        <span class="hljs-keyword">return</span> b<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> c<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3循环语句-Python入门到精通</title>
    <link href="/Python3%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><p><strong>循环语句的作用就是反复执行—段代码，直到满足跳出循环的条件为止。</strong>我们来看看下面这幅流程图。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-1.png" alt="image"></p><p>当程序执行到循环语句时，若是执行结果为真，则执行语句 1；然后，程序返回，继续执行循环语句，直到循环语句的执行结果为假，程序才会跳出循环，执行语句 2，接着程序结束。<br>在这个流程图中，我们可以看到，如果循环语句的执行结果一直为真，那么，程序就会循环执行语句 1，除非内存溢出，程序报错；否则，程序永远不会停止。</p><p>就像火影忍者里的鼬大神释放的一个忍术伊邪那美一样，永远循环下去，直到找到突破口。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-2.png" alt="image"></p><p>Python 的循环语句有两种，一种是 <code>while</code> ，另一种是 <code>for</code> 。</p><h3 id="while-语句"><a href="#while-语句" class="headerlink" title="while 语句"></a>while 语句</h3><p><code>while</code> 语句的形式如下所示：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">while</span> 判断条件:<br>    语句<span class="hljs-number">1</span><br><span class="hljs-keyword">else</span>:<br>    语句<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>若判断条件为真，则执行语句 1；否则，执行语句 2。</p><p>如下例子，就是循环计算 1+2+3…+100</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs axapta">n = <span class="hljs-number">100</span><br><span class="hljs-keyword">sum</span> = <span class="hljs-number">0</span><br>counter = <span class="hljs-number">1</span><br><br><span class="hljs-keyword">while</span> counter &lt;= n:<br>    <span class="hljs-keyword">sum</span> = <span class="hljs-keyword">sum</span> + counter<br>    counter += <span class="hljs-number">1</span><br><br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;1 到 %d 之和为: %d&quot;</span> % (n,<span class="hljs-keyword">sum</span>))<br></code></pre></td></tr></table></figure><h4 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h4><p>我们可以通过设置条件表达式永远为真，来实现无限循环。<strong>无限循环在服务器上的实时请求非常有用。</strong>如下是一段示例：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-built_in">var</span> = <span class="hljs-number">1</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-built_in">var</span> == <span class="hljs-number">1</span> :<br>    <span class="hljs-meta"># 表达式永远为 true</span><br>    strInput = input(<span class="hljs-string">&quot;请输入:&quot;</span>)<br>    <span class="hljs-keyword">print</span> (<span class="hljs-string">&quot;你输入的是: &quot;</span>, strInput)<br><br><span class="hljs-keyword">print</span> (<span class="hljs-string">&quot;结束&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="for-语句"><a href="#for-语句" class="headerlink" title="for 语句"></a>for 语句</h3><p><code>for</code> 语句的形式如下所示：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">for 变量 in 序列</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">语句1</span><br><span class="hljs-attribute">else</span><span class="hljs-punctuation">:</span><br>    语句2<br></code></pre></td></tr></table></figure><p>遍历序列，获取元素项，并执行语句 1；当遍历结束，执行语句 2。</p><p>如下例子，遍历列表，并打印列表的元素项：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">fruits = [<span class="hljs-string">&#x27;葡萄&#x27;</span>, <span class="hljs-string">&#x27;西瓜&#x27;</span>, <span class="hljs-string">&#x27;香蕉&#x27;</span>, <span class="hljs-string">&#x27;苹果&#x27;</span>]<br><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">ft</span> <span class="hljs-keyword">in</span> fruits:<br>    print(<span class="hljs-built_in">ft</span>)<br></code></pre></td></tr></table></figure><p>在循环语句中还有三个比较重要的语句：<code>break</code> 、<code>continue</code> 、<code>pass</code> 。</p><h4 id="break"><a href="#break" class="headerlink" title="break"></a>break</h4><p><code>break</code> 是指立刻跳出全部循环，不再执行循环中的语句。</p><h4 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h4><p><code>continue</code> 是指立刻跳出本次循环，不再执行本次循环中剩余的语句，但是还会继续执行下一次循环代码。</p><h4 id="pass"><a href="#pass" class="headerlink" title="pass"></a>pass</h4><p><code>pass</code> 是空语句，为了保持程序结构的完整性。它不做任何事情，相当于占位语句。</p><hr><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><ul><li><p>习题 1：</p><p>用 while 语句打印出九九乘法表。</p></li><li><p>习题 2：</p><p>一个四位数 abcd，满足 abcd * 4 &#x3D; dcba，求这个数。</p></li></ul><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=73389020&cid=125541149&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr><h3 id="习题答案"><a href="#习题答案" class="headerlink" title="习题答案"></a>习题答案</h3><ul><li>习题 1：</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">i</span> = <span class="hljs-number">1</span>   # 外边一层循环控制行数<br><span class="hljs-attribute">while</span> i &lt;= <span class="hljs-number">9</span>:<br>    <span class="hljs-attribute">j</span> = <span class="hljs-number">1</span>   # 里面一层循环控制每一行中的列数<br>    <span class="hljs-attribute">while</span> j &lt;= i:<br>        <span class="hljs-attribute">mut</span> = j * i<br>        <span class="hljs-attribute">print</span>(<span class="hljs-string">&quot;%d*%d=%d&quot;</span> % (j, i, mut), end=<span class="hljs-string">&quot;   &quot;</span>)<br>        <span class="hljs-attribute">j</span> += <span class="hljs-number">1</span><br>    <span class="hljs-attribute">print</span>(<span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-attribute">i</span> += <span class="hljs-number">1</span><br><br><span class="hljs-comment">#######################输出#######################</span><br><br><span class="hljs-attribute">1</span>*<span class="hljs-number">1</span>=<span class="hljs-number">1</span><br><span class="hljs-attribute">1</span>*<span class="hljs-number">2</span>=<span class="hljs-number">2</span>   <span class="hljs-number">2</span>*<span class="hljs-number">2</span>=<span class="hljs-number">4</span><br><span class="hljs-attribute">1</span>*<span class="hljs-number">3</span>=<span class="hljs-number">3</span>   <span class="hljs-number">2</span>*<span class="hljs-number">3</span>=<span class="hljs-number">6</span>   <span class="hljs-number">3</span>*<span class="hljs-number">3</span>=<span class="hljs-number">9</span><br><span class="hljs-attribute">1</span>*<span class="hljs-number">4</span>=<span class="hljs-number">4</span>   <span class="hljs-number">2</span>*<span class="hljs-number">4</span>=<span class="hljs-number">8</span>   <span class="hljs-number">3</span>*<span class="hljs-number">4</span>=<span class="hljs-number">12</span>   <span class="hljs-number">4</span>*<span class="hljs-number">4</span>=<span class="hljs-number">16</span><br><span class="hljs-attribute">1</span>*<span class="hljs-number">5</span>=<span class="hljs-number">5</span>   <span class="hljs-number">2</span>*<span class="hljs-number">5</span>=<span class="hljs-number">10</span>   <span class="hljs-number">3</span>*<span class="hljs-number">5</span>=<span class="hljs-number">15</span>   <span class="hljs-number">4</span>*<span class="hljs-number">5</span>=<span class="hljs-number">20</span>   <span class="hljs-number">5</span>*<span class="hljs-number">5</span>=<span class="hljs-number">25</span><br><span class="hljs-attribute">1</span>*<span class="hljs-number">6</span>=<span class="hljs-number">6</span>   <span class="hljs-number">2</span>*<span class="hljs-number">6</span>=<span class="hljs-number">12</span>   <span class="hljs-number">3</span>*<span class="hljs-number">6</span>=<span class="hljs-number">18</span>   <span class="hljs-number">4</span>*<span class="hljs-number">6</span>=<span class="hljs-number">24</span>   <span class="hljs-number">5</span>*<span class="hljs-number">6</span>=<span class="hljs-number">30</span>   <span class="hljs-number">6</span>*<span class="hljs-number">6</span>=<span class="hljs-number">36</span><br><span class="hljs-attribute">1</span>*<span class="hljs-number">7</span>=<span class="hljs-number">7</span>   <span class="hljs-number">2</span>*<span class="hljs-number">7</span>=<span class="hljs-number">14</span>   <span class="hljs-number">3</span>*<span class="hljs-number">7</span>=<span class="hljs-number">21</span>   <span class="hljs-number">4</span>*<span class="hljs-number">7</span>=<span class="hljs-number">28</span>   <span class="hljs-number">5</span>*<span class="hljs-number">7</span>=<span class="hljs-number">35</span>   <span class="hljs-number">6</span>*<span class="hljs-number">7</span>=<span class="hljs-number">42</span>   <span class="hljs-number">7</span>*<span class="hljs-number">7</span>=<span class="hljs-number">49</span><br><span class="hljs-attribute">1</span>*<span class="hljs-number">8</span>=<span class="hljs-number">8</span>   <span class="hljs-number">2</span>*<span class="hljs-number">8</span>=<span class="hljs-number">16</span>   <span class="hljs-number">3</span>*<span class="hljs-number">8</span>=<span class="hljs-number">24</span>   <span class="hljs-number">4</span>*<span class="hljs-number">8</span>=<span class="hljs-number">32</span>   <span class="hljs-number">5</span>*<span class="hljs-number">8</span>=<span class="hljs-number">40</span>   <span class="hljs-number">6</span>*<span class="hljs-number">8</span>=<span class="hljs-number">48</span>   <span class="hljs-number">7</span>*<span class="hljs-number">8</span>=<span class="hljs-number">56</span>   <span class="hljs-number">8</span>*<span class="hljs-number">8</span>=<span class="hljs-number">64</span><br><span class="hljs-attribute">1</span>*<span class="hljs-number">9</span>=<span class="hljs-number">9</span>   <span class="hljs-number">2</span>*<span class="hljs-number">9</span>=<span class="hljs-number">18</span>   <span class="hljs-number">3</span>*<span class="hljs-number">9</span>=<span class="hljs-number">27</span>   <span class="hljs-number">4</span>*<span class="hljs-number">9</span>=<span class="hljs-number">36</span>   <span class="hljs-number">5</span>*<span class="hljs-number">9</span>=<span class="hljs-number">45</span>   <span class="hljs-number">6</span>*<span class="hljs-number">9</span>=<span class="hljs-number">54</span>   <span class="hljs-number">7</span>*<span class="hljs-number">9</span>=<span class="hljs-number">63</span>   <span class="hljs-number">8</span>*<span class="hljs-number">9</span>=<span class="hljs-number">72</span>   <span class="hljs-number">9</span>*<span class="hljs-number">9</span>=<span class="hljs-number">81</span><br></code></pre></td></tr></table></figure><ul><li>习题 2:</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs clean">for n <span class="hljs-keyword">in</span> list(range(<span class="hljs-number">1000</span>, <span class="hljs-number">9999</span>)):<br>    N = n * <span class="hljs-number">4</span><br>    nStr = str(n)<br>    NStr = str(N)<br><br>    <span class="hljs-keyword">if</span> nStr[<span class="hljs-number">0</span>] == NStr[<span class="hljs-number">3</span>]:<br>        <span class="hljs-keyword">if</span> nStr[<span class="hljs-number">1</span>] == NStr[<span class="hljs-number">2</span>]:<br>            <span class="hljs-keyword">if</span> nStr[<span class="hljs-number">2</span>] == NStr[<span class="hljs-number">1</span>]:<br>                <span class="hljs-keyword">if</span> nStr[<span class="hljs-number">3</span>] == NStr[<span class="hljs-number">0</span>]:<br>                    print(nStr, <span class="hljs-string">&#x27;* 4 =&#x27;</span>, NStr)<br>                    break<br><br>#####################输出#####################<br><br><span class="hljs-number">2178</span> * <span class="hljs-number">4</span> = <span class="hljs-number">8712</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3条件语句-Python入门到精通</title>
    <link href="/Python3%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><p><strong>条件语句是通过一条或多条语句的执行结果来决定接下来执行的代码块。</strong></p><p>这么理解比较抽象，可以用下面的流程图来展示。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-1.png" alt="image"></p><p>当程序执行到条件语句时，会根据条件语句的执行结果选择不同的路径继续执行程序，没有选择的路径将不会被执行。</p><h3 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h3><p>在 <code>Python3</code> 中的条件语句只有 <code>if</code> 。使用形式如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-2.png" alt="image"></p><p>其中，灰色语句是可以被替换的。抽象出来，就是如下格式：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">if 表达式1</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">语句1</span><br><span class="hljs-attribute">elif 表达式2</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">语句2</span><br><span class="hljs-attribute">else</span><span class="hljs-punctuation">:</span><br>    语句3<br></code></pre></td></tr></table></figure><ul><li>如果 <code>表达式1</code> 为 <code>True</code> ，将执行 <code>语句1</code> 块语句</li><li>如果 <code>表达式1</code> 为 <code>False</code> ，将执行 <code>表达式2</code> 条件语句</li><li>如果 <code>表达式2</code> 为 <code>True</code> ，将执行 <code>语句2</code> 块语句</li><li>如果 <code>表达式2</code> 为 <code>False</code> ，将执行 <code>语句3</code> 块语句</li></ul><p>我们可以就上面的例子，完善一下，写一个小程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">age = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入年龄: &quot;</span>))<br><br><span class="hljs-keyword">if</span> age &lt;= <span class="hljs-number">15</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;童年&#x27;</span>)<br><span class="hljs-keyword">elif</span> age &lt;= <span class="hljs-number">29</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;青少年&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;中老年&#x27;</span>)<br><br><span class="hljs-comment"># 退出提示</span><br><span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;点击 enter 键退出&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>将以上程序保存在 <code>test.py</code> 文件中，并执行该程序：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span> test.<span class="hljs-keyword">py</span><br><br>请输入年龄: <span class="hljs-number">18</span><br>青少年<br>点击 enter 键退出<br><br></code></pre></td></tr></table></figure><h3 id="if-嵌套"><a href="#if-嵌套" class="headerlink" title="if 嵌套"></a>if 嵌套</h3><p>在嵌套 <code>if</code> 语句中，可以把 <code>if...elif...else</code> 结构放在另外一个 <code>if...elif...else</code> 结构中，如下：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">if 表达式1</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">语句</span><br><span class="hljs-attribute">    if 表达式2</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">语句</span><br><span class="hljs-attribute">    elif 表达式3</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">语句</span><br><span class="hljs-attribute">    else</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">语句</span><br><span class="hljs-attribute">elif 表达式4</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">语句</span><br><span class="hljs-attribute">else</span><span class="hljs-punctuation">:</span><br>    语句<br></code></pre></td></tr></table></figure><hr><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><ul><li><p>习题 1：</p><p>用条件语句实现从键盘输入年份，判断该年是闰年还是平年？<br>(提示：能被 400 整除，或者能被 4 整除却不能被 100 整除的年份是闰年)</p></li><li><p>习题 2：</p><p>用条件语句实现从键盘输入三个整数，按照从大到小的顺序输出。</p></li></ul><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=73192585&cid=125191891&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr><h3 id="习题答案"><a href="#习题答案" class="headerlink" title="习题答案"></a>习题答案</h3><ul><li>习题 1：</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs processing"><span class="hljs-built_in">year</span> = <span class="hljs-built_in">int</span>(<span class="hljs-title function_">input</span>(<span class="hljs-string">&quot;请输入年份: &quot;</span>))<br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">year</span> &lt;= <span class="hljs-number">0</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;别闹，年份小于等于0算怎么回事？&#x27;</span>)<br>elif <span class="hljs-built_in">year</span> % <span class="hljs-number">400</span> == <span class="hljs-number">0</span> <span class="hljs-title function_">or</span> (<span class="hljs-built_in">year</span> % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> and <span class="hljs-built_in">year</span> % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;闰年&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;平年&#x27;</span>)<br><br># 退出提示<br><span class="hljs-title function_">input</span>(<span class="hljs-string">&quot;点击 enter 键退出&quot;</span>)<br><br></code></pre></td></tr></table></figure><ul><li>习题 2:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入第一个整数: &quot;</span>))<br>b = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入第二个整数: &quot;</span>))<br>c = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入第三个整数: &quot;</span>))<br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(a, <span class="hljs-built_in">int</span>) <span class="hljs-keyword">and</span> <span class="hljs-built_in">isinstance</span>(b, <span class="hljs-built_in">int</span>) <span class="hljs-keyword">and</span> <span class="hljs-built_in">isinstance</span>(c, <span class="hljs-built_in">int</span>):<br>    <span class="hljs-keyword">if</span> a &gt; b:<br>        <span class="hljs-keyword">if</span> a &gt; c:<br>            <span class="hljs-keyword">if</span> b &gt; c:<br>                <span class="hljs-built_in">print</span>(a, b, c)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(a, c, b)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(c, a, b)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> a &gt; c:<br>            <span class="hljs-built_in">print</span>(b, a, c)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> b &gt; c:<br>                <span class="hljs-built_in">print</span>(b, c, a)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(c, b, a)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;不闹，不是说好输入整数的吗？&#x27;</span>)<br><br><span class="hljs-comment"># 退出提示</span><br><span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;点击 enter 键退出&quot;</span>)<br><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3字典-Python入门到精通</title>
    <link href="/Python3%E5%AD%97%E5%85%B8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E5%AD%97%E5%85%B8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>字典是一种<strong>一一对应</strong>的键值对。</p><h4 id="什么是健值对？"><a href="#什么是健值对？" class="headerlink" title="什么是健值对？"></a>什么是健值对？</h4><p>比如说一个网址就对应一个网站。</p><p><a href="http://blog.pangao.vip/">http://blog.pangao.vip</a></p><p><img src="https://pangao1990.gitee.io/pic/Python3%E5%AD%97%E5%85%B8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A.png" alt="image"></p><p>那么字典也是一样的。我们来看看字典。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">网站：http:<span class="hljs-regexp">//</span>blog.pangao.vip<br>公众号：潘高陪你学编程<br></code></pre></td></tr></table></figure><p>把这两个键值对用逗号连接，再用大括号把这些键值对扩起来，就是一个字典。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">&#123;&#x27;网站&#x27;：&#x27;http://blog.pangao.vip&#x27;, &#x27;公众号&#x27;：&#x27;潘高陪你学编程&#x27;&#125;<br></code></pre></td></tr></table></figure><p><strong>注意</strong>：键必须是唯一的，但值则不必。值可以取任何数据类型，但键必须是不可变的，只能取字符串，数字或元组。</p><h3 id="创建字典"><a href="#创建字典" class="headerlink" title="创建字典"></a>创建字典</h3><p>直接将字典赋值给变量就可以创建一个字典变量。</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">dict</span> = &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;公众号&#x27;</span>: <span class="hljs-string">&#x27;潘高陪你学编程&#x27;</span>&#125;</span><br></code></pre></td></tr></table></figure><p>直接使用字典变量+方括号+键就可以获取字典对应的值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">dict</span>[<span class="hljs-string">&#x27;公众号&#x27;</span>]<br><span class="hljs-string">&#x27;潘高陪你学编程&#x27;</span><br></code></pre></td></tr></table></figure><p>如果用字典里没有的键访问数据，会报错。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">&gt;&gt;&gt; dict[<span class="hljs-string">&#x27;gender&#x27;</span>]<br>Traceback (most recent <span class="hljs-keyword">call</span> <span class="hljs-keyword">last</span>):<br>  File <span class="hljs-string">&quot;&lt;stdin&gt;&quot;</span>, <span class="hljs-built_in">line</span> <span class="hljs-number">1</span>, in <span class="hljs-symbol">&lt;module&gt;</span><br>KeyError: <span class="hljs-string">&#x27;gender&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="修改字典"><a href="#修改字典" class="headerlink" title="修改字典"></a>修改字典</h3><p>直接给要修改的字典键赋值就可以修改值了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">dict</span> = &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;公众号&#x27;</span>: <span class="hljs-string">&#x27;潘高陪你学编程&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">dict</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = <span class="hljs-string">&#x27;pangao&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">dict</span><br>&#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;pangao&#x27;</span>, <span class="hljs-string">&#x27;公众号&#x27;</span>: <span class="hljs-string">&#x27;潘高陪你学编程&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>直接对字典新增键值对就可以新增字典数据项了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">dict</span>[<span class="hljs-string">&#x27;gender&#x27;</span>] = <span class="hljs-string">&#x27;男&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">dict</span><br>&#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;pangao&#x27;</span>, <span class="hljs-string">&#x27;公众号&#x27;</span>: <span class="hljs-string">&#x27;潘高陪你学编程&#x27;</span>, <span class="hljs-string">&#x27;gender&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="删除字典"><a href="#删除字典" class="headerlink" title="删除字典"></a>删除字典</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">del</span> <span class="hljs-built_in">dict</span>[<span class="hljs-string">&#x27;name&#x27;</span>] <span class="hljs-comment"># 删除键 &#x27;name&#x27;</span><br><span class="hljs-built_in">dict</span>.clear() <span class="hljs-comment"># 清空字典</span><br><span class="hljs-keyword">del</span> <span class="hljs-built_in">dict</span> <span class="hljs-comment"># 删除字典</span><br></code></pre></td></tr></table></figure><h3 id="字典内置函数"><a href="#字典内置函数" class="headerlink" title="字典内置函数"></a>字典内置函数</h3><table><thead><tr><th>函数</th><th>含义</th></tr></thead><tbody><tr><td>dict.get(key, default&#x3D;None)</td><td>返回指定键的值，如果值不在字典中返回 default 值</td></tr><tr><td>key in dict</td><td>如果键在字典 dict 里返回 true，否则返回 false</td></tr><tr><td>dict.items()</td><td>以列表返回可遍历的(键, 值) 元组数组</td></tr><tr><td>dict.update(dict2)</td><td>把字典 dict2 的键&#x2F;值对更新到 dict 里</td></tr></tbody></table><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=71849158&cid=124499610&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3集合-Python入门到精通</title>
    <link href="/Python3%E9%9B%86%E5%90%88-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E9%9B%86%E5%90%88-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p><strong>集合（set）是一个无序、不重复的元素序列。</strong></p><p>这里我们来和列表、元组对比一下：</p><ul><li>列表是一组<strong>有序</strong>的元素集合。</li><li>元组也是一组<strong>有序</strong>的元素集合，但元素<strong>不可修改</strong>。</li></ul><h2 id="集合的基本操作"><a href="#集合的基本操作" class="headerlink" title="集合的基本操作"></a>集合的基本操作</h2><h4 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h4><p>使用大括号 <code>&#123; &#125;</code> 创建集合。但不能使用 <code>&#123;&#125;</code> 创建一个空集合，因为 <code>&#123;&#125;</code> 创建的是空字典。</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">student = &#123;<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>&#125;</span><br><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">student2 = &#123;&#125;</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">type</span>(student2)</span><br>&lt;class &#x27;dict&#x27;&gt;<br></code></pre></td></tr></table></figure><p>也可以使用 <code>set()</code> 函数创建集合。 直接使用 <code>set()</code> 创建的是<strong>空集合</strong>，插入字符串、列表、元组等参数就可以创建非空集合。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; <span class="hljs-selector-tag">a</span> = <span class="hljs-built_in">set</span>((<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>))<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><br>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125;<br><br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span> = <span class="hljs-built_in">set</span>(<span class="hljs-selector-attr">[1, 2, 3, 1, 2, 3]</span>)<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><br>&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125;<br><br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span> = <span class="hljs-built_in">set</span>(<span class="hljs-string">&#x27;潘高陪你学编程&#x27;</span>)<br>&gt;&gt;&gt; <span class="hljs-selector-tag">a</span><br>&#123;<span class="hljs-string">&#x27;程&#x27;</span>, <span class="hljs-string">&#x27;潘&#x27;</span>, <span class="hljs-string">&#x27;你&#x27;</span>, <span class="hljs-string">&#x27;编&#x27;</span>, <span class="hljs-string">&#x27;学&#x27;</span>, <span class="hljs-string">&#x27;高&#x27;</span>, <span class="hljs-string">&#x27;陪&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>我们可以看到集合的两个特点：</p><ul><li>集合会自动将重复元素剔除。</li><li>元组、列表是“按顺序”打印出来的，字符串是无序的。所以，集合不一定会原样打印出来，因为集合是无序的。</li></ul><h4 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h4><ul><li><strong>s.add(x)</strong><br>将变量 <code>x</code> 看作一个整体添加到集合 <code>s</code> 中，集合只增加一个数据项。如果元素已存在，则不进行任何操作。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>student = &#123;<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>student.add(<span class="hljs-string">&#x27;Lucy&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>student<br>&#123;<span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;Lucy&#x27;</span>, <span class="hljs-string">&#x27;Tom&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>s.update(x)</strong><br>变量 <code>x</code> 可以是列表、元组、字典等，可以是多个变量，用逗号分开。将所有的变量分隔成单个字符插入集合中。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>student = &#123;<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>student.update(<span class="hljs-string">&#x27;Lucy&#x27;</span>, <span class="hljs-string">&#x27;XML&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>student<br>&#123;<span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>, <span class="hljs-string">&#x27;u&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;M&#x27;</span>, <span class="hljs-string">&#x27;L&#x27;</span>, <span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;Tom&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h4><ul><li><strong>s.remove(x)</strong><br>将元素 <code>x</code> 从集合 <code>s</code> 中移除。如果元素不存在，则报错。</li></ul><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">student = &#123;<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>&#125;</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">student.remove(<span class="hljs-string">&#x27;潘高&#x27;</span>)</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">student</span><br>&#123;&#x27;Mary&#x27;, &#x27;Tom&#x27;&#125;<br><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">student = &#123;<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>&#125;</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">student.remove(<span class="hljs-string">&#x27;Lucy&#x27;</span>)</span><br>Traceback (most recent call last):<br>  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;<br>KeyError: &#x27;Lucy&#x27;<br></code></pre></td></tr></table></figure><ul><li><strong>s.discard(x)</strong><br>将元素 <code>x</code> 从集合 <code>s</code> 中移除。即使元素不存在，也并不会报错。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>student = &#123;<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>student.discard(<span class="hljs-string">&#x27;Lucy&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>student<br>&#123;<span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;Tom&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>s.pop()</strong><br>删除集合中的一个元素，并返回删除的元素。只当集合元素是字符串类型时，并且在脚本运行（CMD）时才会随机删除，在交互式环境（IDE）中是保持删除左边第一个元素的。如果集合元素是其他数据类型时，是删除左边第一个元素的。如果删除的集合为空，就会报错。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>student = &#123;<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>student<br>&#123;<span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;Tom&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>student.pop()<br><span class="hljs-string">&#x27;潘高&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="集合间的运算"><a href="#集合间的运算" class="headerlink" title="集合间的运算"></a>集合间的运算</h4><table><thead><tr><th>表达式</th><th>含义</th></tr></thead><tbody><tr><td>a - b</td><td>集合 a 中包含而集合 b 中不包含的元素</td></tr><tr><td>a I b</td><td>集合 a 和 b 的所有元素</td></tr><tr><td>a &amp; b</td><td>集合 a 和 b 的共同元素</td></tr><tr><td>a ^ b</td><td>不同时包含于集合 a 和 b 的元素</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>s1 = &#123;<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>s2 = &#123;<span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-string">&#x27;Lucy&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>s1 - s2<br>&#123;<span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>s1 | s2<br>&#123;<span class="hljs-string">&#x27;Lucy&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;Tom&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>s1 &amp; s2<br>&#123;<span class="hljs-string">&#x27;Tom&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>s1 ^ s2<br>&#123;<span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-string">&#x27;Lucy&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=71675686&cid=124205231&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3元组-Python入门到精通</title>
    <link href="/Python3%E5%85%83%E7%BB%84-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E5%85%83%E7%BB%84-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<blockquote><p>元组，是组合的组，不是祖先的祖。那个是糕点，我们现在要介绍的是编程概念。</p></blockquote><p><img src="https://pangao1990.gitee.io/pic/Python3%E5%85%83%E7%BB%84-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A.png" alt="image"></p><h3 id="什么是元组？"><a href="#什么是元组？" class="headerlink" title="什么是元组？"></a>什么是元组？</h3><p>元组，就是一组元素。元组和我们上一章介绍的列表很类似。不同的是，元组是用小括号串起来，而列表则是用中括号。还有一个最大的区别，就是<strong>元组不能修改</strong>。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E5%85%83%E7%BB%84-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-1.png" alt="image"></p><h3 id="创建元组"><a href="#创建元组" class="headerlink" title="创建元组"></a>创建元组</h3><p>我们来看看如何创建元组。直接将一个元组赋值给变量 Tup，就完成了元组的创建。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">Tup</span> = (<span class="hljs-number">22</span>, <span class="hljs-string">&#x27;Python&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;陪你&#x27;</span>, <span class="hljs-string">&#x27;学编程&#x27;</span>)<br></code></pre></td></tr></table></figure><p>当然了，也可以不要小括号。不过我还是推荐使用小括号，这样比较容易区分。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">Tup2</span> = <span class="hljs-number">22</span>, <span class="hljs-string">&#x27;Python&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;陪你&#x27;</span>, <span class="hljs-string">&#x27;学编程&#x27;</span><br></code></pre></td></tr></table></figure><p>获取元组的元素也是和列表的操作一样。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&gt;&gt;&gt; <span class="hljs-symbol">Tup</span>[<span class="hljs-number">1</span>]<br><span class="hljs-string">&#x27;Python&#x27;</span><br>&gt;&gt;&gt; <span class="hljs-symbol">Tup</span>[<span class="hljs-number">2</span>:]<br>(<span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;陪你&#x27;</span>, <span class="hljs-string">&#x27;学编程&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="修改元组"><a href="#修改元组" class="headerlink" title="修改元组"></a>修改元组</h3><p>我们已经介绍了，元组是不能修改的。那如果强制修改会怎么样呢？</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim">Tup = (<span class="hljs-number">22</span>, <span class="hljs-string">&#x27;Python&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;陪你&#x27;</span>, <span class="hljs-string">&#x27;学编程&#x27;</span>)<br><br>&gt;&gt;&gt; Tup[<span class="hljs-number">4</span>] = <span class="hljs-string">&#x27;学Python3&#x27;</span><br>Traceback (most recent <span class="hljs-keyword">call</span> <span class="hljs-keyword">last</span>):<br>  File <span class="hljs-string">&quot;&lt;stdin&gt;&quot;</span>, <span class="hljs-built_in">line</span> <span class="hljs-number">1</span>, in <span class="hljs-symbol">&lt;module&gt;</span><br>TypeError: <span class="hljs-string">&#x27;tuple&#x27;</span> object does not support item assignment<br></code></pre></td></tr></table></figure><p>我们看到，强制修改元组的第 5 项，程序就报错了。提示元组这种数据类型无法修改数据项。</p><p>那么，元组不可修改，有什么优势呢？元组不可修改，操作比较少，由特殊构造决定了他的访问速度比列表快很多。再加上不可修改，存储就更加安全了。</p><h3 id="元组的简单操作"><a href="#元组的简单操作" class="headerlink" title="元组的简单操作"></a>元组的简单操作</h3><p>元组的操作和列表一样。</p><table><thead><tr><th>表达式</th><th>描述</th><th>结果</th></tr></thead><tbody><tr><td>(1, 2, 3) + (4, 5, 6)</td><td>组合</td><td>(1, 2, 3, 4, 5, 6)</td></tr><tr><td>(‘Python’) * 3</td><td>重复</td><td>(‘Python’, ‘Python’, ‘Python’)</td></tr><tr><td>3 in (1, 2, 3)</td><td>元素是否在元组中</td><td>True</td></tr><tr><td>Tup[-2]</td><td>倒数第几个元素</td><td>‘陪你’</td></tr><tr><td>Tup[2:]</td><td>索引 2 开始所有的元素</td><td>[‘潘高’, ‘陪你’, ‘学编程’]</td></tr><tr><td>。。。</td><td>。。。</td><td>。。。</td></tr></tbody></table><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><p>元组的常用函数和列表一样。</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>len(tuple)</td><td>元组元素个数</td></tr><tr><td>max(tuple)</td><td>返回元组元素最大值</td></tr><tr><td>min(tuple)</td><td>返回元组元素最小值</td></tr><tr><td>tuple(seq)</td><td>将列表强制转换为元组</td></tr><tr><td>。。。</td><td>。。。</td></tr></tbody></table><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=71551468&cid=123988257&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3列表-Python入门到精通</title>
    <link href="/Python3%E5%88%97%E8%A1%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E5%88%97%E8%A1%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<blockquote><p>有编程基础的小伙伴应该很好理解列表，列表就是编程语言中常见的数组。没有基础也不要紧，接下来就详细介绍一下列表。</p></blockquote><h3 id="什么是列表？"><a href="#什么是列表？" class="headerlink" title="什么是列表？"></a>什么是列表？</h3><p>简单说来，<strong>列表就是一组有序的数据</strong>。每一个数据都有其特定的位置，即索引。</p><p><strong>注意：第一个数据的索引是 0，第二是 1，依此类</strong>推。列表中的数据叫做数据项，数据项可以是任意类型数据，比如：数字、字符串、列表等等。</p><p>那我们来写一个列表。首先在第一个位置写上数字 22，（点击）第二个位置写上字符串“Python”，等等。用中括号框起来，就是一个列表。</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[<span class="hljs-name">22</span>, <span class="hljs-symbol">&#x27;Python</span>&#x27;, <span class="hljs-symbol">&#x27;潘高</span>&#x27;, <span class="hljs-symbol">&#x27;陪你</span>&#x27;, <span class="hljs-symbol">&#x27;学编程</span>&#x27;]<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/Python3%E5%88%97%E8%A1%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A.jpg" alt="image"></p><h3 id="创建列表"><a href="#创建列表" class="headerlink" title="创建列表"></a>创建列表</h3><p>直接将一个列表赋值给变量 list，就完成了列表的创建。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">List</span> = [<span class="hljs-number">22</span>, <span class="hljs-string">&#x27;Python&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;陪你&#x27;</span>, <span class="hljs-string">&#x27;学编程&#x27;</span>]<br></code></pre></td></tr></table></figure><p>接下来我们打印这个变量，可以得到这个列表的值。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">&gt;&gt;&gt; List<br><span class="hljs-selector-attr">[22, <span class="hljs-string">&#x27;Python&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;陪你&#x27;</span>, <span class="hljs-string">&#x27;学编程&#x27;</span>]</span><br></code></pre></td></tr></table></figure><p>我们也可以打印列表的数据项。比如打印第二个数据项。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&gt;&gt;&gt; <span class="hljs-symbol">List</span>[<span class="hljs-number">1</span>]<br><span class="hljs-string">&#x27;Python&#x27;</span><br></code></pre></td></tr></table></figure><p>那么，为什么不是 <code>list[2]</code> 呢？因为第二个数据项的索引是 <code>1</code> 。上面已经介绍过了，列表的索引是从 <code>0</code> 开始计算的。</p><h3 id="修改列表"><a href="#修改列表" class="headerlink" title="修改列表"></a>修改列表</h3><p>还是这个变量 list。当我们要修改某一个数据项时，直接给这个数据项赋值即可。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&gt;&gt;&gt; <span class="hljs-symbol">List</span>[<span class="hljs-number">4</span>] = <span class="hljs-string">&#x27;学Python3&#x27;</span><br>&gt;&gt;&gt; <span class="hljs-symbol">List</span><br>[<span class="hljs-number">22</span>, <span class="hljs-string">&#x27;Python&#x27;</span>, <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;陪你&#x27;</span>, <span class="hljs-string">&#x27;学Python3&#x27;</span>]<br></code></pre></td></tr></table></figure><p>当我们要删除某个数据项时，直接使用函数 <code>del</code> 。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">&gt;&gt;&gt; <span class="hljs-selector-tag">del</span> List<span class="hljs-selector-attr">[1]</span><br>&gt;&gt;&gt; List<br><span class="hljs-selector-attr">[22, <span class="hljs-string">&#x27;潘高&#x27;</span>, <span class="hljs-string">&#x27;陪你&#x27;</span>, <span class="hljs-string">&#x27;学Python3&#x27;</span>]</span><br></code></pre></td></tr></table></figure><h3 id="列表的简单操作"><a href="#列表的简单操作" class="headerlink" title="列表的简单操作"></a>列表的简单操作</h3><table><thead><tr><th>表达式</th><th>描述</th><th>结果</th></tr></thead><tbody><tr><td>[1, 2, 3] + [4, 5, 6]</td><td>组合</td><td>[1, 2, 3, 4, 5, 6]</td></tr><tr><td>[‘Python’] * 3</td><td>重复</td><td>[‘Python’, ‘Python’, ‘Python’]</td></tr><tr><td>3 in [1, 2, 3]</td><td>元素是否在列表中</td><td>True</td></tr><tr><td>List[-2]</td><td>倒数第几个元素</td><td>‘陪你’</td></tr><tr><td>List[2:]</td><td>索引 2 开始所有的元素</td><td>[‘潘高’, ‘陪你’, ‘学编程’]</td></tr><tr><td>。。。</td><td>。。。</td><td>。。。</td></tr></tbody></table><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>len(list)</td><td>列表元素个数</td></tr><tr><td>max(list)</td><td>返回列表元素最大值</td></tr><tr><td>min(list)</td><td>返回列表元素最小值</td></tr><tr><td>list(seq)</td><td>将元组强制转换为列表</td></tr><tr><td>。。。</td><td>。。。</td></tr></tbody></table><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>list.append(obj)</td><td>在列表末尾新增对象</td></tr><tr><td>list.index(obj)</td><td>从列表中找出某个值第一个匹配项的索引位置</td></tr><tr><td>list.insert(index, obj)</td><td>将对象插入列表</td></tr><tr><td>list.remove(obj)</td><td>将元组强制转换为列表</td></tr><tr><td>list.pop([index&#x3D;-1])</td><td>移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td></tr><tr><td>list.sort( key&#x3D;None, reverse&#x3D;False)</td><td>对原列表进行排序</td></tr><tr><td>list.clear()</td><td>清空列表</td></tr></tbody></table><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=71454168&cid=123812310&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3运算符-Python入门到精通</title>
    <link href="/Python3%E8%BF%90%E7%AE%97%E7%AC%A6-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E8%BF%90%E7%AE%97%E7%AC%A6-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h3 id="什么是运算符？"><a href="#什么是运算符？" class="headerlink" title="什么是运算符？"></a>什么是运算符？</h3><p>举个例子， <code>22 + 44 = 66</code>中， <code>22</code> 和 <code>44</code> 就是<strong>操作数</strong>， <code>+</code> 就是<strong>运算符</strong>。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%B2-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-1.png" alt="image"></p><p>Python 语言支持以下类型的运算符:</p><ul><li>算术运算符</li><li>比较运算符</li><li>赋值运算符</li><li>逻辑运算符</li><li>位运算符</li><li>成员运算符</li><li>身份运算符</li></ul><p><img src="https://pangao1990.gitee.io/pic/Python3%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%B2-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-2.png" alt="image"></p><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">A</span> <span class="hljs-operator">=</span> <span class="hljs-number">4</span><br><span class="hljs-attribute">B</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>+</td><td>相加</td><td>A + B 结果为 7</td></tr><tr><td>-</td><td>相减</td><td>A – B 结果为 1</td></tr><tr><td>*</td><td>相乘</td><td>A * B 结果为 12</td></tr><tr><td>&#x2F;</td><td>除以</td><td>A &#x2F; B 结果为 1.33333</td></tr><tr><td>%</td><td>取模</td><td>A % B 结果为 1</td></tr><tr><td>**</td><td>幂</td><td>A ** B 结果为 64</td></tr></tbody></table><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">A</span> <span class="hljs-operator">=</span> <span class="hljs-number">4</span><br><span class="hljs-attribute">B</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>比较对象是否相等</td><td>A &#x3D;&#x3D; B 返回 False</td></tr><tr><td>!&#x3D;</td><td>比较对象是否不等于</td><td>A !&#x3D; B 返回 True</td></tr><tr><td>&gt;</td><td>大于</td><td>A &gt; B 返回 True</td></tr><tr><td>&lt;</td><td>小于</td><td>A &lt; B 返回 False</td></tr><tr><td>&gt;&#x3D;</td><td>大于或等于</td><td>A &gt;&#x3D; B 返回 True</td></tr><tr><td>&lt;&#x3D;</td><td>小于或等于</td><td>A &lt;&#x3D; B 返回 False</td></tr></tbody></table><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">A</span> <span class="hljs-operator">=</span> <span class="hljs-number">4</span><br><span class="hljs-attribute">B</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>&#x3D;</td><td>赋值</td><td>C &#x3D; A + B</td></tr><tr><td>+&#x3D;</td><td>加法赋值</td><td>C +&#x3D; A 等效于 C &#x3D; C + A</td></tr><tr><td>-&#x3D;</td><td>减法赋值</td><td>C -&#x3D; A 等效于 C &#x3D; C - A</td></tr><tr><td>*&#x3D;</td><td>小于</td><td>C _&#x3D; A 等效于 C &#x3D; C _ A</td></tr><tr><td>&#x2F;&#x3D;</td><td>大于或等于</td><td>C &#x2F;&#x3D; A 等效于 C &#x3D; C &#x2F; A</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">A</span> = <span class="hljs-literal">True</span><br><span class="hljs-attr">B</span> = <span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>and</td><td>且</td><td>A and B 返回 False</td></tr><tr><td>or</td><td>或</td><td>A or B 返回 True</td></tr><tr><td>not</td><td>非</td><td>not A 返回 False</td></tr></tbody></table><h3 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">A</span> = <span class="hljs-string">&#x27;e&#x27;</span><br><span class="hljs-attr">B</span> = <span class="hljs-string">&#x27;Hello&#x27;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>in</td><td>如果在指定的序列中找到值返回 True，否则返回 False</td><td>A in B 返回 True</td></tr><tr><td>not in</td><td>如果在指定的序列中没有找到值返回 True，否则返回 False</td><td>A not in B 返回 False</td></tr></tbody></table><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=71349131&cid=123625189&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3数据类型之字符串-Python入门到精通</title>
    <link href="/Python3%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h3 id="什么叫字符串？"><a href="#什么叫字符串？" class="headerlink" title="什么叫字符串？"></a>什么叫字符串？</h3><p>从字面上理解，就是：一串字符。</p><p>那么，什么是字符呢？</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1234abcd 潘高陪你学编程【；。/，<br></code></pre></td></tr></table></figure><p>类似于这样，无论是数字、字母、汉字、还是标点符号都是字符。</p><p>再用引号把他们串起来，就是一个字符串。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot;1234abcd 潘高陪你学编程【；。/，&quot;</span><br></code></pre></td></tr></table></figure><p>直接把这段字符串赋值给变量 X，就创建了一个字符串型变量。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">X</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;1234abcd 潘高陪你学编程【；。/，&quot;</span><br></code></pre></td></tr></table></figure><p>注意：串起字符串的引号必须是<strong>英文</strong>，不能是中文的；可以是<strong>双引号</strong>，也可以是<strong>单引号</strong>。还可以是<strong>三引号</strong>。三引号允许一个字符串跨多行，字符串中可以包含换行符、制表符以及其他特殊字符。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-1.png" alt="image"></p><h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><p>我们创建变量，如下：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">A</span> <span class="hljs-operator">=</span> Hello<br><br><span class="hljs-attribute">B</span> <span class="hljs-operator">=</span> Python<br></code></pre></td></tr></table></figure><table><thead><tr><th>操作符</th><th>描述</th><th>表达式</th><th>结果</th></tr></thead><tbody><tr><td>+</td><td>连接字符串</td><td>A + B</td><td>HelloPython</td></tr><tr><td>*</td><td>重复输出字符串</td><td>A * 2</td><td>HelloHello</td></tr><tr><td>[]</td><td>由索引获取字符串中的字符</td><td>A[1]</td><td>e</td></tr><tr><td>[:]</td><td>截取字符串中的一部分，遵循左闭右开原则</td><td>A[1:3]</td><td>el</td></tr><tr><td>in</td><td>如果字符串中包含给定的字符，则返回 True</td><td>‘e’ in A</td><td>True</td></tr><tr><td>not in</td><td>如果字符串中不包含给定的字符，则返回 True</td><td>‘e’ not in A</td><td>True</td></tr></tbody></table><h3 id="字符串内建函数"><a href="#字符串内建函数" class="headerlink" title="字符串内建函数"></a>字符串内建函数</h3><p>Python3 的字符串常用内建函数如下：</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>find(str, beg&#x3D;0, end&#x3D;len(string))</td><td>检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1</td></tr><tr><td>rfind(str, beg&#x3D;0,end&#x3D;len(string))</td><td>类似于 find()函数，不过是从右边开始查找</td></tr><tr><td>index(str, beg&#x3D;0, end&#x3D;len(string))</td><td>跟 find()方法一样，只不过如果 str 不在字符串中会报一个异常</td></tr><tr><td>rindex( str, beg&#x3D;0, end&#x3D;len(string))</td><td>类似于 index()，不过是从右边开始</td></tr><tr><td>isalnum()</td><td>如果字符串至少有一个字符并且所有字符都是字母或数字则返 回 True,否则返回 False</td></tr><tr><td>isalpha()</td><td>如果字符串至少有一个字符并且所有字符都是字母则返回 True, 否则返回 False</td></tr><tr><td>isdigit()</td><td>如果字符串只包含数字则返回 True 否则返回 False</td></tr><tr><td>islower()</td><td>如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True，否则返回 False</td></tr><tr><td>isnumeric()</td><td>如果字符串中只包含数字字符，则返回 True，否则返回 False</td></tr><tr><td>isspace()</td><td>如果字符串中只包含空白，则返回 True，否则返回 False</td></tr><tr><td>join(seq)</td><td>以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td></tr><tr><td>len(string)</td><td>返回字符串长度</td></tr><tr><td>lower()</td><td>转换字符串中所有大写字符为小写</td></tr><tr><td>lstrip()</td><td>截掉字符串左边的空格或指定字符</td></tr><tr><td>rstrip()</td><td>删除字符串字符串末尾的空格</td></tr><tr><td>strip([chars])</td><td>在字符串上执行 lstrip()和 rstrip()</td></tr><tr><td>max(str)</td><td>返回字符串 str 中最大的字母</td></tr><tr><td>min(str)</td><td>返回字符串 str 中最小的字母</td></tr><tr><td>replace(old, new [, max])</td><td>把 将字符串中的 str1 替换成 str2,如果 max 指定，则替换不超过 max 次</td></tr><tr><td>split(str&#x3D;””, num&#x3D;string.count(str))</td><td>num&#x3D;string.count(str)) 以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串</td></tr></tbody></table><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=71250070&cid=123452642&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3数据类型之数字-Python入门到精通</title>
    <link href="/Python3%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%95%B0%E5%AD%97-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%95%B0%E5%AD%97-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<p>Python3 支持四种不同的数值类型：</p><ul><li><p><strong>整型(int)</strong><br>整型也叫 int 型，就是我们数学中认识的整数，即 1、2、3、4 这样的数。当然了，也包括负整数。Python3 整型没有大小限制，只要内存允许，可以写一个很大很大的数字。</p></li><li><p><strong>浮点型(float)</strong><br>浮点型也叫 float 型，就是我们数学中认识的小数。浮点型也可以使用科学计数法表示（如：2.5e2 &#x3D; 2.5 x 102 &#x3D; 250）。</p></li><li><p><strong>布尔型(bool)</strong><br>布尔型也叫 bool 型。有两大类，一类的值是真，一类的值是假。像数字 0 就是代表假，1、2、3、4 这样的数就代表真。</p></li><li><p><strong>复数型(complex)</strong><br>复数由实数部分和虚数部分构成，可以用 a + bj,或者 complex(a,b)表示， 复数的实部 a 和虚部 b 都是浮点型。</p></li></ul><h3 id="Python3-数字类型转换"><a href="#Python3-数字类型转换" class="headerlink" title="Python3 数字类型转换"></a>Python3 数字类型转换</h3><p>当然了，这几种数据类型是可以相互转换的。</p><ul><li><strong>int(x)</strong> 将 x 转换为一个整数。</li><li><strong>float(x)</strong> 将 x 转换到一个浮点数。</li><li><strong>complex(x, y)</strong> 将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。</li></ul><p>以下示例将浮点数强制转化为整数：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a = <span class="hljs-number">2.0</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">int</span>(a)</span><br>2<br></code></pre></td></tr></table></figure><p>对于数字类型，没啥特别难理解的地方，以下就介绍一些常用的函数供参考。</p><table><thead><tr><th>函数</th><th>返回值（描述）</th></tr></thead><tbody><tr><td>abs(x)</td><td>返回数字的绝对值，如 abs(-22) 返回 22</td></tr><tr><td>ceil(x)</td><td>函数返回一个大于或等于 x 的最小整数，如 math.ceil(2.2) 返回 3</td></tr><tr><td>random()</td><td>返回随机生成的一个实数，它在[0,1)范围内</td></tr><tr><td>shuffle(lst)</td><td>将序列的所有元素随机排序</td></tr></tbody></table><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=71138310&cid=123259057&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3解释器-Python入门到精通</title>
    <link href="/Python3%E8%A7%A3%E9%87%8A%E5%99%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E8%A7%A3%E9%87%8A%E5%99%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<p>还记得在前面的课程中我们介绍过，在计算机和 Python 程序之间有一个<code>运行环境</code>，这个运行环境就是我们今天要介绍的<strong>Python 解释器</strong>。顾名思义啊，解释器的意思就是把人写出来的 Python 语言解释给计算机看，让计算机可以识别。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E8%A7%A3%E9%87%8A%E5%99%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-1.png" alt="image"></p><p>我们知道，整个 Python 语言从规范到解释器都是开源的。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E8%A7%A3%E9%87%8A%E5%99%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-2.jpg" alt="image"></p><p>开源，不是开源节流的意思，而是开放源码的意思。</p><p>所以理论上，只要水平够高，任何人都可以编写 Python 解释器来执行 Python 代码。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E8%A7%A3%E9%87%8A%E5%99%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-3.jpeg" alt="image"></p><p>当然了，这个难度是很大的，我们至少得先学会使用解释器吧。</p><p>事实上，确实存在多种 Python 解释器。有 CPython 、IPython、PyPy 等等。当我们从 Python 官方网站下载并安装好 Python 3 后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用 C 语言开发的，所以叫 CPython。她是使用最广的 Python 解释器。本课程所有代码也都在 CPython 下执行，所以其他的解释器我就不一一介绍了。</p><p><img src="https://pangao1990.gitee.io/pic/Python3%E8%A7%A3%E9%87%8A%E5%99%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-4.png" alt="image"></p><p>有两种方式启动 Python 解释器来运行脚本，一种是交互式编程，另一种是脚本式编程。</p><h4 id="交互式编程"><a href="#交互式编程" class="headerlink" title="交互式编程"></a>交互式编程</h4><p>交互式编程的优点是方便快捷，不需要额外的编辑器辅助。</p><p>缺点就是没法保存代码，下次要使用还得重新敲代码。</p><h4 id="脚本式编程"><a href="#脚本式编程" class="headerlink" title="脚本式编程"></a>脚本式编程</h4><p>脚本式编程的优点是可以将代码保存为文本，使用时候直接调用就可以了。</p><p>缺点的话，我个人觉得没有缺点。所以我经常使用脚本式编程。</p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=71024338&cid=123061067&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3基本数据类型-Python入门到精通</title>
    <link href="/Python3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h3 id="什么是数据类型？"><a href="#什么是数据类型？" class="headerlink" title="什么是数据类型？"></a>什么是数据类型？</h3><p>数据类型在数据结构中的定义是一个值的集合以及定义在这个值集上的一组操作。</p><p>通俗来讲，我们人类可以很容易的分清数字与字符的区别，但是计算机并不能，除非你明确的告诉它，<code>1</code>是数字，<code>数</code>是文字，否则它是分不清<code>1</code>和<code>数</code>的区别的。因此，就需要对变量进行明确的划分。想让计算机进行数值运算，就传数字给它，想让他处理文字，就传字符串类型给他。</p><p>Python3 中有六个标准的数据类型，如下：</p><ul><li>Number（数字）</li><li>String（字符串）</li><li>List（列表）</li><li>Tuple（元组）</li><li>Set（集合）</li><li>Dictionary（字典）</li></ul><p>其中：</p><ul><li><strong>不可变数据类型（3 个）</strong>：<br> Number（数字）、String（字符串）、Tuple（元组）</li><li><strong>可变数据类型（3 个）</strong>：<br> List（列表）、Dictionary（字典）、Set（集合）</li></ul><h3 id="什么叫不可变数据类型？"><a href="#什么叫不可变数据类型？" class="headerlink" title="什么叫不可变数据类型？"></a>什么叫不可变数据类型？</h3><p><strong>变量所指向的内存地址处的值是不可以被改变的叫做不可变数据类型</strong>。理解起来有点费劲？请接着往下看。</p><p>在 Python 的世界里，一切皆为对象，任何变量都是对象的引用。所有的对象都是存储在内存中的，每一块儿内存都有一个唯一的“门牌号”，叫做<strong>地址</strong>。</p><p>我们定义一个整数，如 <code>22</code> ,在 Python 中用 <code>id(22)</code>来获取 <code>22</code> 在内存中的地址，如下：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(<span class="hljs-number">22</span>)</span><br>4536155600<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">x = <span class="hljs-number">22</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(x)</span><br>4536155600<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">y=<span class="hljs-number">22</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(y)</span><br>4536155600<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span><br></code></pre></td></tr></table></figure><p>如上代码所示，变量 22 的地址是 4536155600，将 22 赋值给变量 x，x 的地址也是 4536155600。同样，y 的地址也是一样的。说明，无论定义多少变量，只要值是 22，他们的地址就都一样。</p><p>那么，直接将 44 赋值给 x，x 的值不就改变了吗，不就变成 44 了吗？没错，我们接着看：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">x = <span class="hljs-number">44</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(x)</span><br>4536156304<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(<span class="hljs-number">44</span>)</span><br>4536156304<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(<span class="hljs-number">22</span>)</span><br>4536155600<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(y)</span><br>4536155600<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span><br></code></pre></td></tr></table></figure><p>我们看到执行 <code>x = 44</code> 后变量 x 的地址变成 4536156304 了，而变量 y 和 22 的地址并没有改变。</p><p>由此可见，我们说变量 x 是不可变数据类型，是指变量 x 引用的地址处的值是不能改变的，这个值只能被创建或销毁。当我们执行 <code>x = 44</code> 这个赋值操作时原地址处的值 22 并没有改变，而是新创建一个对象，这个对象的值是 44，变量 x 重新引用这个新对象。当原对象无人引用时，Python 会在适当的时候自行回收这块内存。</p><h3 id="什么叫可变数据类型？"><a href="#什么叫可变数据类型？" class="headerlink" title="什么叫可变数据类型？"></a>什么叫可变数据类型？</h3><p><strong>变量所指向的内存地址处的值是可以被改变的叫做可变数据类型</strong>。有了上面的基础，接下来我们理解就会容易很多。以列表<code>list</code>为例：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">x = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(x)</span><br>4539284688<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">x.append(<span class="hljs-number">4</span>)</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">x</span><br>[1, 2, 3, 4]<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(x)</span><br>4539284688<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span><br></code></pre></td></tr></table></figure><p>如上所示，改变变量 x 的值，但变量引用的地址依旧不变。因此可变数据类型是说对一个变量所指向的内存地址处的值是可以被变的，值的变化并不会引起新建对象，即地址是不会变的。</p><hr><h3 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h3><ul><li><p>习题 1：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-keyword">x</span> <span class="hljs-operator">=</span> y <span class="hljs-operator">=</span> <span class="hljs-number">22</span><br><span class="hljs-keyword">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">44</span><br>猜猜<span class="hljs-keyword">x</span><span class="hljs-punctuation">,</span> y的值分别是什么？<br></code></pre></td></tr></table></figure></li><li><p>习题 2：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">a</span> = <span class="hljs-selector-tag">b</span> = <span class="hljs-selector-attr">[1, 2, 3]</span><br><span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.append</span>(<span class="hljs-number">4</span>)<br>猜猜<span class="hljs-selector-tag">a</span>, b的值分别是什么？<br></code></pre></td></tr></table></figure></li></ul><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=70916629&cid=122873921&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr><h3 id="习题答案"><a href="#习题答案" class="headerlink" title="习题答案"></a>习题答案</h3><ul><li><p>习题 1：<br>x 的值为 44，y 的值为 22。<br><code>数字</code>是不可变数据类型。执行 <code>x = y = 22</code> 代码后，变量 x 和变量 y 都引用 22 这个值。当执行 <code>x = 44</code> 代码后，变量 x 引用值为 44 的新对象。变量 y 的引用值 22 不变。</p></li><li><p>习题 2:<br>a 的值为[1, 2, 3, 4]，b 的值也为[1, 2, 3, 4]。<br><code>列表</code> 是可变数据类型。执行 <code>a = b = [1, 2, 3]</code> 代码后，变量 a 和变量 b 都引用[1, 2, 3]这个列表。当执行 <code>a.append(4)</code> 代码后，变量 a 引用的值修改为[1, 2, 3, 4]。这时，引用同一块地址的变量 b 的值也是[1, 2, 3, 4]。</p></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3基础概念-Python入门到精通</title>
    <link href="/Python3%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python3%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<p>在正式开始学习写代码之前，我们先来了解一些 Python3 的基础概念。</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量是编程中最基本的存储单位。如下代码：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>其中，<code>x</code> 就是变量，它的值为 2。当然了变量也可以用汉字表示，你这么写，也是可以的。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">潘高 <span class="hljs-operator">=</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><p>语句是一条告诉计算机要做什么的指令。正如上面的代码： <code>x = 2</code> ，就是告诉计算机：将 2 这个数字赋值给变量 X 。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>井号（#）在 Python 代表注释，它右边的一切都会被计算机忽略掉，如下：</p><ul><li>人看见的<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># 将 2 这个数字赋值给变量 X</span><br><span class="hljs-attr">x</span> = <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></li><li>计算机看见的<figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h2><p>每一种计算机语言都有其特有的代码风格。如下：</p><ul><li><p>空格。如下所示的等号两边空格可加可不加，但建议加上，这样代码风格统一，简洁优雅。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">x</span> = <span class="hljs-number">2</span><br><span class="hljs-comment"># 或者</span><br><span class="hljs-attr">x</span>=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></li><li><p>单行语句。每一行只能写入一条语句，如果一定要写多行语句，在语句间加<code>;</code>也行，不过这么书写，你确定看你代码的人不会骂你？</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># 推荐的方式</span><br><span class="hljs-attr">x</span> = <span class="hljs-number">2</span><br><span class="hljs-attr">Y</span> = <span class="hljs-number">4</span><br><br><span class="hljs-comment"># 不推荐的方式</span><br><span class="hljs-attr">x</span> = <span class="hljs-number">2</span><span class="hljs-comment">; Y = 4</span><br></code></pre></td></tr></table></figure></li><li><p>缩进。for 循环等需要用到缩进表示代码块。如下所示，<code>print(i)</code> 之前有一个 <code>tab</code>键（或者四个空格键）表示 <code>print(i)</code> 属于 <code>for</code>，他们是一个整体，而不是分开的两行语句。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">for</span> <span class="hljs-variable">i</span> <span class="hljs-variable"><span class="hljs-keyword">in</span></span> <span class="hljs-function"><span class="hljs-title">range</span>(<span class="hljs-number">10</span>):</span><br><span class="hljs-function">    <span class="hljs-title">print</span>(<span class="hljs-variable">i</span>)</span><br></code></pre></td></tr></table></figure></li><li><p>空行。用以分隔两段不同功能或含义的代码，便于日后代码的维护或重构。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">x</span> = <span class="hljs-number">2</span><br><br><span class="hljs-variable">for</span> <span class="hljs-variable">i</span> <span class="hljs-variable"><span class="hljs-keyword">in</span></span> <span class="hljs-function"><span class="hljs-title">range</span>(<span class="hljs-number">10</span>):</span><br><span class="hljs-function">    <span class="hljs-title">print</span>(<span class="hljs-variable">i</span>)</span><br></code></pre></td></tr></table></figure></li></ul><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=70797773&cid=122662662&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用编辑器-Python入门到精通</title>
    <link href="/%E4%BD%BF%E7%94%A8%E7%BC%96%E8%BE%91%E5%99%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/%E4%BD%BF%E7%94%A8%E7%BC%96%E8%BE%91%E5%99%A8-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<blockquote><p>工欲善其事，必先利其器。</p></blockquote><p>正如设计师使用 Photoshop 做图，产品经理用 Axure 做原型图，程序员也有自己的编程工具。 目前编写 Python 代码使用比较广泛的编辑器是 <code>PyCharm</code> 和 <code>VSCode</code> 。</p><h4 id="PyCharm"><a href="#PyCharm" class="headerlink" title="PyCharm"></a>PyCharm</h4><p>PyCharm 是一套完整的集成开发环境，其特点为：</p><ul><li><p>包括调试</p></li><li><p>语法高亮</p></li><li><p>项目管理</p></li><li><p>代码跳转</p></li><li><p>智能提示</p></li><li><p>自动完成</p></li><li><p>单元测试</p></li><li><p>版本控制</p></li></ul><p>优点是<strong>功能齐全</strong>，缺点是<strong>软件打开较慢、内存占用太高</strong>。</p><h4 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h4><p>VSCode 是后起之秀，其特点为：</p><ul><li><p>背靠微软大厂</p></li><li><p>界面简洁</p></li><li><p>轻量</p></li><li><p>拓展性强</p></li></ul><p>优点是<strong>启动超快、内存占用低</strong>，缺点是<strong>需要手动安装插件</strong>。</p><p>两款产品各有特色，PyCharm 像个重武器一样，很多功能我一直都没用到，但它却实实在在的在占用我的内存。VSCode 更像是个百变金刚，想用什么功能，安装对应插件就可以了，非常轻盈、优雅。</p><p>因此，推荐大家使用 <code>VSCode</code> 。</p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><iframe  width="100%" height="350" src="//player.bilibili.com/player.html?aid=70697679&cid=122489885&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac上安装Python-Python入门到精通</title>
    <link href="/Mac%E4%B8%8A%E5%AE%89%E8%A3%85Python-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Mac%E4%B8%8A%E5%AE%89%E8%A3%85Python-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<p>Python 可应用于多个平台，如 <code>Windows</code> 、 <code>Linux</code> 和 <code>MacOS</code> 。</p><p>首先可以在终端窗口输入 <code>python</code> 命令来查看在本地是否已经安装 Python 以及 Python 的安装版本。</p><h2 id="Mac-平台"><a href="#Mac-平台" class="headerlink" title="Mac 平台"></a>Mac 平台</h2><p>在 <a href="https://www.python.org/downloads/windows/">官网</a> 下载安装包，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E4%B8%8A%E5%AE%89%E8%A3%85Python-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-1.png" alt="image"></p><p>双击安装包，直接点击若干个“继续”按钮，直到安装完成。</p><p>在终端中输入 <code>python3 -V</code> ，如下图则表示安装成功：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E4%B8%8A%E5%AE%89%E8%A3%85Python-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-2.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=70361756&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows上安装Python-Python入门到精通</title>
    <link href="/Windows%E4%B8%8A%E5%AE%89%E8%A3%85Python-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Windows%E4%B8%8A%E5%AE%89%E8%A3%85Python-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<p>Python 可应用于多个平台，如 <code>Windows</code> 、 <code>Linux</code> 和 <code>MacOS</code> 。</p><p>首先可以在终端窗口输入 <code>python</code> 命令来查看在本地是否已经安装 Python 以及 Python 的安装版本。</p><h2 id="Windows-平台"><a href="#Windows-平台" class="headerlink" title="Windows 平台"></a>Windows 平台</h2><p>在 <a href="https://www.python.org/downloads/windows/">官网</a> 下载安装包，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-1.png" alt="image"></p><p>在 <code>计算机</code> &#x3D;&gt; <code>系统属性</code> 查看系统类型，并以此下载对应 Python 版本，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-3.png" alt="image"></p><p>双击安装包， **注意：一定要勾选下面的 <code>Add Python 3.7 to PATH</code>**，若不选这一项，则后面需要手动配置环境变量，很麻烦。然后点击 <code>Install Now</code> ，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-4.png" alt="image"></p><p>几秒钟后，就安装成功了，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-5.png" alt="image"></p><p>在 <code>cmd</code> 终端中输入 <code>python</code> ，如下图则表示安装成功：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-6.png" alt="image"></p><p>输入 <code>exit()</code> ，即可退出 python 交互模式，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-7.png" alt="image"></p><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=70240654&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>选择Python版本-Python入门到精通</title>
    <link href="/%E9%80%89%E6%8B%A9Python%E7%89%88%E6%9C%AC-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/%E9%80%89%E6%8B%A9Python%E7%89%88%E6%9C%AC-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<ul><li>Python 3 才是 Python 的未来</li><li>Python 官方都建议直接学习 Python 3</li><li>Python 2 只维护到 2020 年</li></ul><blockquote><p>如果是为了维护已有的 Python2 程序，那么，我建议先学习 Python3，然后了解一下 Python2 与 Python3 的不同语法，就可以了。如果学习 Python 是为了做新项目，那就应该坚定不移的选择 Python3。</p></blockquote><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=70153664&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python简介-Python入门到精通</title>
    <link href="/Python%E7%AE%80%E4%BB%8B-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Python%E7%AE%80%E4%BB%8B-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Python 的创始人为荷兰人吉多·范罗苏姆（Guido van Rossum）。1989 年圣诞节期间，在阿姆斯特丹，Guido 为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，作为 ABC 语言的一种继承。之所以选中 Python（大蟒蛇的意思）作为该编程语言的名字，是取自英国 20 世纪 70 年代首播的电视喜剧《蒙提.派森的飞行马戏团》（Monty Python’s Flying Circus）。</p></blockquote><h2 id="为什么要学-Python"><a href="#为什么要学-Python" class="headerlink" title="为什么要学 Python"></a>为什么要学 Python</h2><h4 id="Python-更容易上手"><a href="#Python-更容易上手" class="headerlink" title="Python 更容易上手"></a>Python 更容易上手</h4><p>Python 的设计哲学是优雅、明确、简单。</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%AE%80%E4%BB%8B-Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A-1.png" alt="image"></p><h4 id="Python-有丰富的库模块"><a href="#Python-有丰富的库模块" class="headerlink" title="Python 有丰富的库模块"></a>Python 有丰富的库模块</h4><p>有官方的、也有第三方的。你想做的功能模块很有可能已经有人做了，你只需要调用这些模块，不需重复造轮子，这也是编程的一大特性。</p><h4 id="Python-广泛应用于工作中"><a href="#Python-广泛应用于工作中" class="headerlink" title="Python 广泛应用于工作中"></a>Python 广泛应用于工作中</h4><ul><li>在网站开发方向<br>使用 Python 搭建网站和后台服务比较容易维护。不少知名网都使用了 Python 开发。比如：Gmail、Youtube、知乎、豆瓣等。</li><li>在数据分析方向<br>现在人工智能和大数据正火，使用的语言就是 Python，在 github 上有大量优质的数据分析代码。在生物信息分析领域，Python 也是大受欢迎。</li><li>在游戏开发方向<br>一般作为游戏脚本内嵌在游戏中，只需要修改脚本内容就可以调整游戏，不需要重新编译游戏，特别方便。</li><li>在自动化运维方向<br>越来越多的运维倾向于自动化，批量处理大量的运维任务。Python 在系统管理上的优势在于强大的开发能力和完整的工具链。</li></ul><hr><p>更多编程教学请关注公众号：<strong>潘高陪你学编程</strong></p><p><img src="https://pangao1990.gitee.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></p><hr><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=70046501&cid=121363338&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python入门到精通</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python入门到精通</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>上传代码到github报Connection timed out错误</title>
    <link href="/%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E5%88%B0github%E6%8A%A5Connection_timed_out%E9%94%99%E8%AF%AF/"/>
    <url>/%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E5%88%B0github%E6%8A%A5Connection_timed_out%E9%94%99%E8%AF%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><p>好端端的，不知道为啥无法提交代码到 <code>github</code> ，报错信息如下：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E5%88%B0github%E6%8A%A5Connection_timed_out%E9%94%99%E8%AF%AF-1.png" alt="image"></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><span id="more"></span><p>在网上找了一圈解决办法，最终可行的办法如下：</p><p>1、进入存放公钥私钥( <code>id_rsa</code> 和 <code>id_rsa.pub</code> )的文件夹里，因为我是 Mac，方法如下，若是 win 系统，请自行谷歌：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/.ssh<br></code></pre></td></tr></table></figure><p>2、新建 <code>config</code> 文本：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">vi config<br></code></pre></td></tr></table></figure><p>3、写入以下内容，其中 User 为登录 github 的账号名称：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Host github<span class="hljs-selector-class">.com</span><br>User pangao1990@qq<span class="hljs-selector-class">.com</span><br>Hostname ssh<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.com</span><br>PreferredAuthentications publickey<br>IdentityFile ~/.ssh/id_rsa<br>Port <span class="hljs-number">443</span><br></code></pre></td></tr></table></figure><p>4、执行 <code>ssh -T git@github.com</code> 时，会出现提示如下，回车”yes”即可：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E5%88%B0github%E6%8A%A5Connection_timed_out%E9%94%99%E8%AF%AF-2.png" alt="image"></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>尝试了比较多的办法，就这一种成功了。但不代表你的问题也可以用这种办法解决，我只是提供一种网上的思路。</p><p>如果帮不到你，不看我的博客就是了，千万不要喷我，最近被喷怕了。</p><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP文件路径获取文件名</title>
    <link href="/PHP%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%90%8D/"/>
    <url>/PHP%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$file</span> = <span class="hljs-string">&#x27;/blog/pangao/vip/index.php&#x27;</span>;<br><br><span class="hljs-variable">$path_parts</span> = pathinfo(<span class="hljs-variable">$file</span>);<br><br>echo <span class="hljs-string">&#x27;目录名称&#x27;</span> . <span class="hljs-variable">$path_parts</span>[<span class="hljs-string">&#x27;dirname&#x27;</span>], <span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>;  <span class="hljs-regexp">//</span>  <span class="hljs-regexp">/blog/</span>pangao/vip<br><br>echo <span class="hljs-string">&#x27;文件全名&#x27;</span> . <span class="hljs-variable">$path_parts</span>[<span class="hljs-string">&#x27;basename&#x27;</span>], <span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>; <span class="hljs-regexp">//</span>  index.php<br><br>echo <span class="hljs-string">&#x27;文件后缀&#x27;</span> . <span class="hljs-variable">$path_parts</span>[<span class="hljs-string">&#x27;extension&#x27;</span>], <span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>;<span class="hljs-regexp">//</span>  php<br><br>echo <span class="hljs-string">&#x27;文件名称&#x27;</span> . <span class="hljs-variable">$path_parts</span>[<span class="hljs-string">&#x27;filename&#x27;</span>], <span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>; <span class="hljs-regexp">//</span>  index        <span class="hljs-regexp">//</span> PHP &gt;= <span class="hljs-number">5.2</span>.<span class="hljs-number">0</span><br><br>或者<br><br>echo <span class="hljs-string">&#x27;目录名称&#x27;</span> . pathinfo(<span class="hljs-variable">$file</span>, PATHINFO_DIRNAME), <span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>;  <span class="hljs-regexp">//</span>  <span class="hljs-regexp">/blog/</span>pangao/vip<br><br>echo <span class="hljs-string">&#x27;文件全名&#x27;</span> . pathinfo(<span class="hljs-variable">$file</span>, PATHINFO_BASENAME), <span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>; <span class="hljs-regexp">//</span>  index.php<br><br>echo <span class="hljs-string">&#x27;文件后缀&#x27;</span> . pathinfo(<span class="hljs-variable">$file</span>, PATHINFO_EXTENSION), <span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>;<span class="hljs-regexp">//</span>  php<br><br>echo <span class="hljs-string">&#x27;文件名称&#x27;</span> . pathinfo(<span class="hljs-variable">$file</span>, PATHINFO_FILENAME), <span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>; <span class="hljs-regexp">//</span>  index         <span class="hljs-regexp">//</span> PHP &gt;= <span class="hljs-number">5.2</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python使用pip安装包、查看是否已安装、检测是否需要更新、升级包、卸载包</title>
    <link href="/Python%E4%BD%BF%E7%94%A8pip%E5%AE%89%E8%A3%85%E5%8C%85%E3%80%81%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E5%B7%B2%E5%AE%89%E8%A3%85%E3%80%81%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E9%9C%80%E8%A6%81%E6%9B%B4%E6%96%B0%E3%80%81%E5%8D%87%E7%BA%A7%E5%8C%85%E3%80%81%E5%8D%B8%E8%BD%BD%E5%8C%85/"/>
    <url>/Python%E4%BD%BF%E7%94%A8pip%E5%AE%89%E8%A3%85%E5%8C%85%E3%80%81%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E5%B7%B2%E5%AE%89%E8%A3%85%E3%80%81%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E9%9C%80%E8%A6%81%E6%9B%B4%E6%96%B0%E3%80%81%E5%8D%87%E7%BA%A7%E5%8C%85%E3%80%81%E5%8D%B8%E8%BD%BD%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h2 id="pip安装包"><a href="#pip安装包" class="headerlink" title="pip安装包"></a>pip安装包</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">$ pip <span class="hljs-keyword">install </span>[安装包名]<br>  [...]<br>  Successfully <span class="hljs-keyword">installed </span>SomePackage    <span class="hljs-comment">#安装成功</span><br></code></pre></td></tr></table></figure><span id="more"></span><h2 id="pip查看是否已安装"><a href="#pip查看是否已安装" class="headerlink" title="pip查看是否已安装"></a>pip查看是否已安装</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$ </span>pip show --files [安装包名]<br> <span class="hljs-title class_">Name</span><span class="hljs-symbol">:SomePackage</span>    <span class="hljs-comment"># 包名</span><br> <span class="hljs-title class_">Version</span><span class="hljs-symbol">:</span><span class="hljs-number">1.0</span>         <span class="hljs-comment"># 版本号</span><br> <span class="hljs-title class_">Location</span><span class="hljs-symbol">:/my/env/lib/pythonx</span>.x/site-packages   <span class="hljs-comment"># 安装位置</span><br> <span class="hljs-title class_">Files</span>:              <span class="hljs-comment"># 包含文件等等</span><br>  ../somepackage/__init__.py<br>  [...]<br></code></pre></td></tr></table></figure><h2 id="pip检查哪些包需要更新"><a href="#pip检查哪些包需要更新" class="headerlink" title="pip检查哪些包需要更新"></a>pip检查哪些包需要更新</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">$ pip list <span class="hljs-comment">--outdated</span><br></code></pre></td></tr></table></figure><h2 id="pip升级包"><a href="#pip升级包" class="headerlink" title="pip升级包"></a>pip升级包</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">$ pip install <span class="hljs-attr">--upgrade</span> <span class="hljs-selector-attr">[要升级的包名]</span><br></code></pre></td></tr></table></figure><h2 id="pip卸载包"><a href="#pip卸载包" class="headerlink" title="pip卸载包"></a>pip卸载包</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>pip uninstall [要卸载的包名]<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python中使用os.system函数调用外部命令</title>
    <link href="/Python%E4%B8%AD%E4%BD%BF%E7%94%A8os.system%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/Python%E4%B8%AD%E4%BD%BF%E7%94%A8os.system%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p><code>system</code> 函数可以将字符串转化成命令在服务器上运行；其原理是每一条 <code>system</code> 函数执行时，其会创建一个子进程在系统上执行命令行，子进程的执行结果无法影响主进程。</p><span id="more"></span><p>执行多条语句，如下：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-keyword">import</span> os<br><br>os.<span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;cd /usr/local &amp;&amp; mkdir aaa.txt&#x27;</span>)<br># or<br>os.<span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27;cd /usr/local ; mkdir aaa.txt&#x27;</span>)<br></code></pre></td></tr></table></figure><p><code>os.system</code> 默认阻塞当前程序执行，在 <code>cmd</code> 命令前加入 <code>start</code> 可不阻塞当前程序执行。如下：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs moonscript"><span class="hljs-keyword">import</span> <span class="hljs-built_in">os</span><br><br><span class="hljs-built_in">os</span>.system(<span class="hljs-string">&#x27;start ping www.baidu.com -t&#x27;</span>)<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python命令行参数解析模块argparse</title>
    <link href="/Python%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90%E6%A8%A1%E5%9D%97argparse/"/>
    <url>/Python%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90%E6%A8%A1%E5%9D%97argparse/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>以前 <code>optparse</code> 比较火，但是在python2.7版本后，官方不再维护这个模块，转而大力支持 <code>argparse</code> 。</p></blockquote><p><code>argparse</code> 模块可以让人轻松编写用户友好的命令行接口。她可以从 <code>sys.argv</code> 中解析出参数，并自动生成帮助和使用手册，还能在传入无效参数时报出错误信息。</p><span id="more"></span><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><p>由于是标准库，所以不需要安装，直接使用：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">import argparse<br>parser = argparse.<span class="hljs-constructor">ArgumentParser()</span><br># parser.add<span class="hljs-constructor">_argument(<span class="hljs-string">&quot;-i&quot;</span>, <span class="hljs-string">&quot;--info&quot;</span>, <span class="hljs-params">action</span> = <span class="hljs-string">&quot;store&quot;</span>, <span class="hljs-params">type</span> = <span class="hljs-string">&quot;string&quot;</span>, <span class="hljs-params">dest</span> = <span class="hljs-string">&quot;sample_info&quot;</span>, <span class="hljs-params">help</span> = <span class="hljs-string">&quot;the sample information&quot;</span>)</span><br>args = parser.parse<span class="hljs-constructor">_args()</span><br># print(args.sample_info)<br></code></pre></td></tr></table></figure><p>运行以上代码，如下：</p><ul><li>不输入参数，也没有输出结果：  <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">$ <span class="hljs-keyword">python3</span> test.<span class="hljs-keyword">py</span><br></code></pre></td></tr></table></figure></li><li>输入默认参数 <code>--help</code> （也可缩写为 <code>-h</code> ），会输出自动生成的帮助信息：  <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ python3 test.py --help<br><br><span class="hljs-comment"># 输出：</span><br>usage: test.py [-h]<br><br>optional arguments:<br>  -h, --help  show this help message and <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure></li><li>输入错误参数，会输出报错信息：  <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">$ <span class="hljs-keyword">python3</span> test.<span class="hljs-keyword">py</span> -<span class="hljs-keyword">verbose</span><br><br># 输出：<br>usage: test.<span class="hljs-keyword">py</span> [-h]<br>test.<span class="hljs-keyword">py</span>: error: unrecognized arguments: --<span class="hljs-keyword">verbose</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="创建解析器"><a href="#创建解析器" class="headerlink" title="创建解析器"></a>创建解析器</h4><p>使用 <code>argparse</code> 的第一步是创建一个 <code>ArgumentParser</code> 对象，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">import argparse<br><br>parser = argparse.ArgumentParser(<span class="hljs-attribute">prog</span>=None, <span class="hljs-attribute">usage</span>=None,description=None, <br><span class="hljs-attribute">epilog</span>=None, parents=[], <span class="hljs-attribute">formatter_class</span>=argparse.HelpFormatter, <span class="hljs-attribute">prefix_chars</span>=<span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-attribute">fromfile_prefix_chars</span>=None, <br><span class="hljs-attribute">argument_default</span>=None, <span class="hljs-attribute">conflict_handler</span>=<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-attribute">add_help</span>=<span class="hljs-literal">True</span>, <span class="hljs-attribute">allow_abbrev</span>=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>创建一个新的 <code>ArgumentParser</code> 对象。所有的参数都应当作为关键字参数传入。部分参数在下面都有它更详细的描述，但简而言之，它们是：</p><ul><li><code>prog</code> - 程序的名称（默认：sys.argv[0]）</li><li><code>usage</code> - 描述程序用途的字符串（默认值：从添加到解析器的参数生成）</li><li><code>description</code> - 在参数帮助文档之前显示的文本（默认值：无）</li><li><code>epilog</code> - 在参数帮助文档之后显示的文本（默认值：无）</li><li><code>parents</code> - 一个 ArgumentParser 对象的列表，它们的参数也应包含在内</li><li><code>formatter_class</code> - 用于自定义帮助文档输出格式的类</li><li><code>prefix_chars</code> - 可选参数的前缀字符集合（默认值：’-‘）</li><li><code>fromfile_prefix_chars</code> - 当需要从文件中读取其他参数时，用于标识文件名的前缀字符集合（默认值：None）</li><li><code>argument_default</code> - 参数的全局默认值（默认值： None）</li><li><code>conflict_handler</code> - 解决冲突选项的策略（通常是不必要的）</li><li><code>add_help</code> - 为解析器添加一个 -h&#x2F;–help 选项（默认值： True）</li><li><code>allow_abbrev</code> - 如果缩写是无歧义的，则允许缩写长选项 （默认值：True）</li></ul><h6 id="prog"><a href="#prog" class="headerlink" title="prog"></a>prog</h6><p>默认情况下， <code>ArgumentParser</code> 对象在帮助消息中显示的程序名称是 <code>sys.argv[0]</code> 。若要自定义程序名，则使用 <code>prog</code> ，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=<span class="hljs-string">&#x27;myprogram&#x27;</span>)<br>&gt;&gt;&gt; parser.print_help()<br>usage: myprogram [-h]<br><br>optional arguments:<br> -h, --help  show this help message and <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><p>无论是从 <code>sys.argv[0]</code> 或是从 <code>prog=</code> 参数确定的程序名称，都可以在帮助消息里通过 <code>%(prog)s</code> 格式串来引用，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=<span class="hljs-string">&#x27;myprogram&#x27;</span>)<br>&gt;&gt;&gt; parser.add_argument(<span class="hljs-string">&#x27;--foo&#x27;</span>, help=<span class="hljs-string">&#x27;foo of the %(prog)s program&#x27;</span>)<br>&gt;&gt;&gt; parser.print_help()<br>usage: myprogram [-h] [--foo FOO]<br><br>optional arguments:<br> -h, --help  show this help message and <span class="hljs-keyword">exit</span><br> --foo FOO   foo of the myprogram program<br></code></pre></td></tr></table></figure><h6 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h6><p>构建用法消息，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&gt;&gt;&gt; parser = argparse.ArgumentParser(<span class="hljs-attribute">prog</span>=<span class="hljs-string">&#x27;PROG&#x27;</span>, <span class="hljs-attribute">usage</span>=<span class="hljs-string">&#x27;%(prog)s [options]&#x27;</span>)<br>&gt;&gt;&gt; parser.add_argument(<span class="hljs-string">&#x27;--foo&#x27;</span>, <span class="hljs-attribute">nargs</span>=<span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-attribute">help</span>=<span class="hljs-string">&#x27;foo help&#x27;</span>)<br>&gt;&gt;&gt; parser.add_argument(<span class="hljs-string">&#x27;bar&#x27;</span>, <span class="hljs-attribute">nargs</span>=<span class="hljs-string">&#x27;+&#x27;</span>, <span class="hljs-attribute">help</span>=<span class="hljs-string">&#x27;bar help&#x27;</span>)<br>&gt;&gt;&gt; parser.print_help()<br>usage: PROG [options]<br><br>positional arguments:<br> bar          bar help<br><br>optional arguments:<br> -h, --help   show this help message <span class="hljs-keyword">and</span> exit<br> --foo [FOO]  foo help<br></code></pre></td></tr></table></figure><h6 id="description"><a href="#description" class="headerlink" title="description"></a>description</h6><p>简要描述这个程度做什么以及怎么做。在帮助消息中，这个描述会显示在命令行用法字符串和各种参数的帮助消息之间，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">&gt;&gt;&gt; parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;A foo that bars&#x27;</span>)<br>&gt;&gt;&gt; parser.print_help()<br>usage: argparse.py [-h]<br><br>A foo that bars<br><br>optional arguments:<br> -h, --help  show this help message and <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><h6 id="epilog"><a href="#epilog" class="headerlink" title="epilog"></a>epilog</h6><p>一些程序喜欢在 description 参数后显示额外的对程序的描述，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">&gt;&gt;&gt; parser = argparse.ArgumentParser(<br>...     description=<span class="hljs-string">&#x27;A foo that bars&#x27;</span>,<br>...     epilog=<span class="hljs-string">&quot;And that&#x27;s how you&#x27;d foo a bar&quot;</span>)<br>&gt;&gt;&gt; parser.print_help()<br>usage: argparse.py [-h]<br><br>A foo that bars<br><br>optional arguments:<br> -h, --help  show this help message and <span class="hljs-keyword">exit</span><br><br>And that<span class="hljs-string">&#x27;s how you&#x27;</span>d foo a bar<br></code></pre></td></tr></table></figure><h6 id="add-help"><a href="#add-help" class="headerlink" title="add_help"></a>add_help</h6><p>是否关闭自动生成的帮助信息，如下：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">parser = argparse.ArgumentParser(prog=<span class="hljs-string">&#x27;PROG&#x27;</span>, add_help=<span class="hljs-literal">False</span>)</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">parser.add_argument(<span class="hljs-string">&#x27;--foo&#x27;</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;foo help&#x27;</span>)</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">parser.print_help()</span><br>usage: PROG [--foo FOO]<br><br>optional arguments:<br> --foo FOO  foo help<br></code></pre></td></tr></table></figure><h4 id="添加参数"><a href="#添加参数" class="headerlink" title="添加参数"></a>添加参数</h4><p>使用 <code>add_argument() </code> 方法添加参数。其中，部分参数在下面都有它更详细的描述，但简而言之，它们是：</p><ul><li><code>name or flags</code> - 一个命名或者一个选项字符串的列表，例如 foo 或 -f, –foo。</li><li><code>action</code> - 当参数在命令行中出现时使用的动作基本类型。</li><li><code>nargs</code> - 命令行参数应当消耗的数目。</li><li><code>const</code> - 被一些 action 和 nargs 选择所需求的常数。</li><li><code>default</code> - 当参数未在命令行中出现时使用的值。</li><li><code>type</code> - 命令行参数应当被转换成的类型。</li><li><code>choices</code> - 可用的参数的容器。</li><li><code>required</code> - 此命令行选项是否可省略 （仅选项可用）。</li><li><code>help</code> - 一个此选项作用的简单描述。</li><li><code>metavar</code> - 在使用方法消息中使用的参数值示例。</li><li><code>dest</code> - 被添加到 parse_args() 所返回对象上的属性名。</li></ul><h6 id="name-or-flags"><a href="#name-or-flags" class="headerlink" title="name or flags"></a>name or flags</h6><p>第一个传递给 <code>add_argument()</code> 的参数必须是一系列 flags 或者是一个简单的参数名，如下：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">parser.add_argument(<span class="hljs-string">&#x27;-f&#x27;</span>, <span class="hljs-string">&#x27;--foo&#x27;</span>)</span><br><br>or<br><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">parser.add_argument(<span class="hljs-string">&#x27;bar&#x27;</span>)</span><br></code></pre></td></tr></table></figure><h6 id="action"><a href="#action" class="headerlink" title="action"></a>action</h6><ul><li><p><code>store</code> - 存储参数的值。这是默认的动作。如下:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; parser = argparse<span class="hljs-selector-class">.ArgumentParser</span>()<br>&gt;&gt;&gt; parser<span class="hljs-selector-class">.add_argument</span>(<span class="hljs-string">&#x27;--foo&#x27;</span>)<br>&gt;&gt;&gt; parser<span class="hljs-selector-class">.parse_args</span>(<span class="hljs-string">&#x27;--foo 1&#x27;</span><span class="hljs-selector-class">.split</span>())<br><span class="hljs-function"><span class="hljs-title">Namespace</span><span class="hljs-params">(foo=<span class="hljs-string">&#x27;1&#x27;</span>)</span></span><br></code></pre></td></tr></table></figure></li><li><p><code>store_const</code> - 存储被 const 命名参数指定的值。 <code>store_const</code> 动作通常用在选项中来指定一些标志。如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">&gt;&gt;&gt; parser = argparse.<span class="hljs-constructor">ArgumentParser()</span><br>&gt;&gt;&gt; parser.add<span class="hljs-constructor">_argument(&#x27;--<span class="hljs-params">foo</span>&#x27;, <span class="hljs-params">action</span>=&#x27;<span class="hljs-params">store_const</span>&#x27;, <span class="hljs-params">const</span>=42)</span><br>&gt;&gt;&gt; parser.parse<span class="hljs-constructor">_args([&#x27;--<span class="hljs-params">foo</span>&#x27;])</span><br><span class="hljs-constructor">Namespace(<span class="hljs-params">foo</span>=42)</span><br></code></pre></td></tr></table></figure></li><li><p><code>store_true</code> 和 <code>store_false</code> - 这些是 <code>store_const</code> 分别用作存储 <code>True</code> 和 <code>False</code> 值的特殊用例。另外，它们的默认值分别为 <code>False</code> 和 <code>True</code>。如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&gt;&gt;&gt; parser = argparse.ArgumentParser()<br>&gt;&gt;&gt; parser.add_argument(<span class="hljs-string">&#x27;--foo&#x27;</span>, <span class="hljs-attribute">action</span>=<span class="hljs-string">&#x27;store_true&#x27;</span>)<br>&gt;&gt;&gt; parser.add_argument(<span class="hljs-string">&#x27;--bar&#x27;</span>, <span class="hljs-attribute">action</span>=<span class="hljs-string">&#x27;store_false&#x27;</span>)<br>&gt;&gt;&gt; parser.add_argument(<span class="hljs-string">&#x27;--baz&#x27;</span>, <span class="hljs-attribute">action</span>=<span class="hljs-string">&#x27;store_false&#x27;</span>)<br>&gt;&gt;&gt; parser.parse_args(<span class="hljs-string">&#x27;--foo --bar&#x27;</span>.split())<br>Namespace(<span class="hljs-attribute">foo</span>=<span class="hljs-literal">True</span>, <span class="hljs-attribute">bar</span>=<span class="hljs-literal">False</span>, <span class="hljs-attribute">baz</span>=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure></li><li><p><code>append</code> - 存储一个列表，并且将每个参数值追加到列表中。在允许多次使用选项时很有用。如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; parser = argparse<span class="hljs-selector-class">.ArgumentParser</span>()<br>&gt;&gt;&gt; parser<span class="hljs-selector-class">.add_argument</span>(<span class="hljs-string">&#x27;--foo&#x27;</span>, action=<span class="hljs-string">&#x27;append&#x27;</span>)<br>&gt;&gt;&gt; parser<span class="hljs-selector-class">.parse_args</span>(<span class="hljs-string">&#x27;--foo 1 --foo 2&#x27;</span><span class="hljs-selector-class">.split</span>())<br><span class="hljs-function"><span class="hljs-title">Namespace</span><span class="hljs-params">(foo=[<span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>])</span></span><br></code></pre></td></tr></table></figure></li><li><p><code>count</code> - 计算一个关键字参数出现的数目或次数。例如，对于一个增长的详情等级来说有用。如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;&gt;&gt; parser = argparse<span class="hljs-selector-class">.ArgumentParser</span>()<br>&gt;&gt;&gt; parser<span class="hljs-selector-class">.add_argument</span>(<span class="hljs-string">&#x27;--verbose&#x27;</span>, <span class="hljs-string">&#x27;-v&#x27;</span>, action=<span class="hljs-string">&#x27;count&#x27;</span>)<br>&gt;&gt;&gt; parser<span class="hljs-selector-class">.parse_args</span>(<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;-vvv&#x27;</span>]</span>)<br><span class="hljs-function"><span class="hljs-title">Namespace</span><span class="hljs-params">(verbose=<span class="hljs-number">3</span>)</span></span><br></code></pre></td></tr></table></figure></li><li><p><code>version</code> - 期望有一个 <code>version=</code> 命名参数在 <code>add_argument()</code> 调用中，并打印版本信息并在调用后退出。如下：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-keyword">import</span> argparse</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">parser = argparse.ArgumentParser(prog=<span class="hljs-string">&#x27;PROG&#x27;</span>)</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">parser.add_argument(<span class="hljs-string">&#x27;--version&#x27;</span>, action=<span class="hljs-string">&#x27;version&#x27;</span>, version=<span class="hljs-string">&#x27;%(prog)s 2.0&#x27;</span>)</span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">parser.parse_args([<span class="hljs-string">&#x27;--version&#x27;</span>])</span><br>PROG 2.0<br></code></pre></td></tr></table></figure></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue中引入.svg图标</title>
    <link href="/vue%E4%B8%AD%E5%BC%95%E5%85%A5.svg%E5%9B%BE%E6%A0%87/"/>
    <url>/vue%E4%B8%AD%E5%BC%95%E5%85%A5.svg%E5%9B%BE%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h2 id="创建SvgIcon组件"><a href="#创建SvgIcon组件" class="headerlink" title="创建SvgIcon组件"></a>创建SvgIcon组件</h2><p>在 <code>components</code> 文件夹下新建 <code>SvgIcon</code> 文件夹，并在 <code>SvgIcon</code> 文件夹下新建 <code>index.vue</code> 文件，内容如下：</p><span id="more"></span><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;svgClass&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">:xlink:href</span>=<span class="hljs-string">&quot;iconName&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">use</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;svg-icon&#x27;</span>,</span><br><span class="language-javascript">  <span class="hljs-attr">props</span>: &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">iconClass</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span>,</span><br><span class="language-javascript">      <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">className</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">type</span>: <span class="hljs-title class_">String</span></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;,</span><br><span class="language-javascript">  <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">iconName</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> <span class="hljs-string">`#icon-<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.iconClass&#125;</span>`</span></span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">svgClass</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">className</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;svg-icon &#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">className</span></span><br><span class="language-javascript">      &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;svg-icon&#x27;</span></span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.svg-icon</span> &#123;</span><br><span class="language-css">  <span class="hljs-attribute">width</span>: <span class="hljs-number">1em</span>;</span><br><span class="language-css">  <span class="hljs-attribute">height</span>: <span class="hljs-number">1em</span>;</span><br><span class="language-css">  <span class="hljs-attribute">vertical-align</span>: -<span class="hljs-number">0.15em</span>;</span><br><span class="language-css">  fill: currentColor;</span><br><span class="language-css">  <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="创建icons文件夹"><a href="#创建icons文件夹" class="headerlink" title="创建icons文件夹"></a>创建icons文件夹</h2><p>在 <code>src</code> 文件夹下新建 <code>icons</code> 文件夹，并在 <code>icons</code> 文件夹下新建  <code>svg</code> 文件夹和 <code>index.js</code> 文件。 <code>svg</code> 文件夹中用来存放各种扩展的.svg图标。 <code>index.js</code> 文件内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">SvgIcon</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/SvgIcon&#x27;</span><span class="hljs-comment">// svg组件</span><br><br><span class="hljs-comment">// 注册到全局</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">component</span>(<span class="hljs-string">&#x27;svg-icon&#x27;</span>, <span class="hljs-title class_">SvgIcon</span>)<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">requireAll</span> = requireContext =&gt; requireContext.<span class="hljs-title function_">keys</span>().<span class="hljs-title function_">map</span>(requireContext)<br><span class="hljs-comment">// eslint-disable-next-line</span><br><span class="hljs-keyword">const</span> req = <span class="hljs-built_in">require</span>.<span class="hljs-title function_">context</span>(<span class="hljs-string">&#x27;./svg&#x27;</span>, <span class="hljs-literal">false</span>, <span class="hljs-regexp">/\.svg$/</span>)<br>requireAll(req)<br></code></pre></td></tr></table></figure><h2 id="在main-js中引入"><a href="#在main-js中引入" class="headerlink" title="在main.js中引入"></a>在main.js中引入</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs aspectj"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./icons&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h2><p>在项目的目录下，执行命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">npm <span class="hljs-selector-tag">i</span> svg-sprite-loader <span class="hljs-attr">--save</span><br></code></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在 <code>build/webpack.base.conf.js</code> 文件中，新增：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gradle">&#123;<br>    test: <span class="hljs-regexp">/\.svg$/</span>,<br>    loader: <span class="hljs-string">&#x27;svg-sprite-loader&#x27;</span>,<br>    <span class="hljs-keyword">include</span>: [resolve(<span class="hljs-string">&#x27;src/icons&#x27;</span>)],<br>    <span class="hljs-keyword">options</span>: &#123;<br>      symbolId: <span class="hljs-string">&#x27;icon-[name]&#x27;</span><br>    &#125;<br>&#125;<br><br>和<br><br><span class="hljs-keyword">exclude</span>: [resolve(<span class="hljs-string">&#x27;src/icons&#x27;</span>)],<br></code></pre></td></tr></table></figure><p>添加后，如下代码所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs css">module: &#123;<br>    rules: [<br>      ...(config.dev.useEslint ? [<span class="hljs-built_in">createLintingRule</span>()] : []),<br>      &#123;<br>        test: /\.(png|jpe?g|gif|svg)(\?.*)?$/,<br>        loader: <span class="hljs-string">&#x27;url-loader&#x27;</span>,<br>        exclude: [<span class="hljs-built_in">resolve</span>(<span class="hljs-string">&#x27;src/icons&#x27;</span>)],<br>        options: &#123;<br>          limit: <span class="hljs-number">10000</span>,<br>          name: utils.<span class="hljs-built_in">assetsPath</span>(<span class="hljs-string">&#x27;img/[name].[hash:7].[ext]&#x27;</span>)<br>        &#125;<br>      &#125;,<br>      &#123;<br>        test: /\.svg$/,<br>        loader: <span class="hljs-string">&#x27;svg-sprite-loader&#x27;</span>,<br>        include: [<span class="hljs-built_in">resolve</span>(<span class="hljs-string">&#x27;src/icons&#x27;</span>)],<br>        options: &#123;<br>          symbolId: <span class="hljs-string">&#x27;icon-[name]&#x27;</span><br>        &#125;<br>      &#125;<br>    ]<br>  &#125;,<br></code></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">&lt;svg-<span class="hljs-keyword">icon</span> <span class="hljs-keyword">icon</span>-class=<span class="hljs-string">&quot;user&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python获取时间和日期</title>
    <link href="/Python%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%A5%E6%9C%9F/"/>
    <url>/Python%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%A5%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<p>获取以秒为单位的浮点时间 <code>time()</code> ，如下：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss">import <span class="hljs-built_in">time</span><br><br><span class="hljs-keyword">print</span>(<span class="hljs-built_in">time</span>.<span class="hljs-built_in">time</span>())<br><br><span class="hljs-meta"># 1369031293.33</span><br></code></pre></td></tr></table></figure><span id="more"></span><p>获取人可以直观理解的时间 <code>ctime()</code> ，如下：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss">import <span class="hljs-built_in">time</span><br><br><span class="hljs-keyword">print</span>(<span class="hljs-built_in">time</span>.<span class="hljs-built_in">ctime</span>())<br><br><span class="hljs-meta"># Mon May 20 14:29:30 2013</span><br></code></pre></td></tr></table></figure><p>获取格式化日期，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs perl">import <span class="hljs-keyword">time</span><br><br>st = time.strftime(<span class="hljs-string">&quot;%Y-%m-%d&quot;</span>, time.localtime())<br><br><span class="hljs-keyword">print</span>(st)<br><br><span class="hljs-comment"># 2019-04-17</span><br></code></pre></td></tr></table></figure><p>具体的参数，如下：</p><table><thead><tr><th align="center">标识</th><th align="center">含义</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">%Y</td><td align="center">完整的年</td><td align="center">2019</td></tr><tr><td align="center">%y</td><td align="center">年的后两位数，取值范围[00, 99]</td><td align="center">19</td></tr><tr><td align="center">%m</td><td align="center">十进制月份，取值范围[01, 12]</td><td align="center">04</td></tr><tr><td align="center">%B</td><td align="center">月份全写</td><td align="center">April</td></tr><tr><td align="center">%b</td><td align="center">月份简写</td><td align="center">Apr</td></tr><tr><td align="center">%d</td><td align="center">一个月的第几天，取值范围[01, 31]</td><td align="center">17</td></tr><tr><td align="center">%j</td><td align="center">一年中的第几天，取值范围[001, 366]</td><td align="center">107</td></tr><tr><td align="center">%w</td><td align="center">星期的十进制表示，取值范围 [0(星期天), 6]</td><td align="center">3</td></tr><tr><td align="center">%W</td><td align="center">这一年的星期数（星一为一个星期的第一天，开年的第一个星期一之前的天记到第0个星期）趋势范围[00, 53]</td><td align="center">15</td></tr><tr><td align="center">%U</td><td align="center">这一年的星期数（星期天为一个星期的第一天，开年的第一个星期天之前的天记到第0个星期）趋势范围[00, 53]</td><td align="center">15</td></tr><tr><td align="center">%A</td><td align="center">星期全称</td><td align="center">Wednesday</td></tr><tr><td align="center">%a</td><td align="center">星期简写</td><td align="center">Wed</td></tr><tr><td align="center">%H</td><td align="center">24小时制的小时，取值范围[00, 23]</td><td align="center">23</td></tr><tr><td align="center">%I</td><td align="center">12小时制的小时，取值范围 [01, 12]</td><td align="center">11</td></tr><tr><td align="center">%M</td><td align="center">分钟，取值范围 [00, 59]</td><td align="center">48</td></tr><tr><td align="center">%p</td><td align="center">上、下午，AM 或 PM</td><td align="center">PM</td></tr><tr><td align="center">%S</td><td align="center">秒，取值范围 [00, 59]</td><td align="center">30</td></tr><tr><td align="center">%Z</td><td align="center">时区名</td><td align="center">CST（China Standard Time）</td></tr><tr><td align="center">%c</td><td align="center">适合语言下的时间表示</td><td align="center">Wed Apr 17 23:42:49 2019</td></tr><tr><td align="center">%%</td><td align="center">%字符</td><td align="center">%</td></tr></tbody></table><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python环境搭建及模块安装</title>
    <link href="/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%A8%A1%E5%9D%97%E5%AE%89%E8%A3%85/"/>
    <url>/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E6%A8%A1%E5%9D%97%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>Python 可应用于多个平台，如 <code>Windows</code> 、 <code>Linux</code> 和 <code>MacOS</code> 。</p><p>首先可以在终端窗口输入 <code>python</code> 命令来查看在本地是否已经安装 Python 以及 Python 的安装版本。</p><span id="more"></span><h1 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h1><ul><li><h2 id="Windows-平台"><a href="#Windows-平台" class="headerlink" title="Windows 平台"></a>Windows 平台</h2></li></ul><p>在 <a href="https://www.python.org/downloads/windows/">官网</a> 下载安装包，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-1.png" alt="image"></p><p>在 <code>计算机</code> &#x3D;&gt; <code>系统属性</code> 查看系统类型，并以此下载对应 Python 版本，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-3.png" alt="image"></p><p>双击安装包， **注意：一定要勾选下面的 <code>Add Python 3.7 to PATH</code>**，若不选这一项，则后面需要手动配置环境变量，很麻烦。然后点击 <code>Install Now</code> ，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-4.png" alt="image"></p><p>几秒钟后，就安装成功了，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-5.png" alt="image"></p><p>在 <code>cmd</code> 终端中输入 <code>python</code> ，如下图则表示安装成功：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-6.png" alt="image"></p><p>输入 <code>exit()</code> ，即可退出 python 交互模式，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-7.png" alt="image"></p><ul><li><h2 id="Linux-平台"><a href="#Linux-平台" class="headerlink" title="Linux 平台"></a>Linux 平台</h2>Linux 下大部分系统默认自带 python2.x 的版本，最常见的是 python2.6 或 python2.7 版本，默认的 python 被系统很多程序所依赖，比如 centos 下的 yum 就是 python2 写的，所以默认版本不要轻易删除，否则会有一些问题，如果需要使用最新的 Python3 那么我们可以编译安装源码包到独立目录，这和系统默认环境之间是没有任何影响的，python3 和 python2 两个环境并存即可。</li></ul><p>我的 Linux 系统就自带 2.6.6 版本，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-8.png" alt="image"></p><p>但这并不影响我另外安装新版 Python，输入下载安装包命令，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://www.python.org/ftp/python/<span class="hljs-number">3</span>.<span class="hljs-number">7</span>.<span class="hljs-number">3</span>/Python-<span class="hljs-number">3</span>.<span class="hljs-number">7</span>.<span class="hljs-number">3</span>.tgz<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-9.png" alt="image"></p><p>创建安装目录，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir -p <span class="hljs-regexp">/usr/</span>local/python3<br></code></pre></td></tr></table></figure><p>解压刚才下载好的 <code>Python-3.7.3.tgz</code> 包，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zxvf Python-<span class="hljs-number">3</span>.<span class="hljs-number">7</span>.<span class="hljs-number">3</span>.tgz<br></code></pre></td></tr></table></figure><p>进入解压后的目录，编译安装，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd Python-<span class="hljs-number">3.7</span>.<span class="hljs-number">3</span><br>.<span class="hljs-regexp">/configure --prefix=/u</span>sr<span class="hljs-regexp">/local/</span>python3<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><p>如果期间报错，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-10.png" alt="image"></p><p>则需要安装一个新包 <code>libffi-devel</code> ，命令如下：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> libffi-devel -y<br></code></pre></td></tr></table></figure><p>然后重新编译 python，命令如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd Python-<span class="hljs-number">3.7</span>.<span class="hljs-number">3</span><br><br>.<span class="hljs-regexp">/configure --prefix=/u</span>sr<span class="hljs-regexp">/local/</span>python3<br><br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><p>建立 python3 的软链，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/python3/</span>bin<span class="hljs-regexp">/python3 /u</span>sr<span class="hljs-regexp">/bin/</span>python3<br></code></pre></td></tr></table></figure><p>将&#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin 加入 PATH，输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bash_profile<br></code></pre></td></tr></table></figure><p>则会打开 <code>.bash_profile</code> 文件，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-11.png" alt="image"></p><p>输入 <code>i</code> ，进入编辑模式，修改 <code>PATH</code> ，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HOME</span><span class="hljs-regexp">/bin:/u</span>sr<span class="hljs-regexp">/local/</span>python3/bin<br></code></pre></td></tr></table></figure><p>按 <code>esc</code> 键退出编辑模式，按两个大写的 <code>ZZ</code> ，退出查看文件模式。</p><p>执行下列命令，让上一步的修改生效，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bash_profile<br></code></pre></td></tr></table></figure><p>检查 Python3 和 pip3 是否正常可用，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-12.png" alt="image"></p><p>可以看到，python3 和 pip3 均已经安装成功。</p><ul><li><h2 id="MacOS-平台"><a href="#MacOS-平台" class="headerlink" title="MacOS 平台"></a>MacOS 平台</h2>苹果自带 Python2.X，要安装新版本也很容易，直接在 <a href="https://www.python.org/downloads/mac-osx/">官网</a> 下载安装包，一件傻瓜式安装即可。</li></ul><h1 id="2-模块安装"><a href="#2-模块安装" class="headerlink" title="2. 模块安装"></a>2. 模块安装</h1><p>若要安装 <code>openpyxl</code> 模块，则在终端中输入命令，回车，如下：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> openpyxl<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-13.png" alt="image"></p><p>即可。</p><h1 id="3-更新源"><a href="#3-更新源" class="headerlink" title="3. 更新源"></a>3. 更新源</h1><p>我们都知道，使用 <code>python</code> 开发时候会用到各种模块，而使用 <code>pip</code> 可以很方便的安装模块。可惜了，由于天朝独特的国情，访问不了官方的源，这时候，我们可以使用国内的 <code>python</code> 镜像源。如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">清华：https:<span class="hljs-regexp">//</span>pypi.tuna.tsinghua.edu.cn/simple<br>豆瓣：http:<span class="hljs-regexp">//</span>pypi.douban.com<span class="hljs-regexp">/simple/</span><br></code></pre></td></tr></table></figure><p>使用方法：</p><h4 id="1、临时使用"><a href="#1、临时使用" class="headerlink" title="1、临时使用"></a>1、临时使用</h4><p>只有安装 <code>openpyxl</code> 时使用指定源。如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pip3 install -i https:<span class="hljs-regexp">//</span>pypi.tuna.tsinghua.edu.cn/simple openpyxl<br></code></pre></td></tr></table></figure><h4 id="2、一劳永逸"><a href="#2、一劳永逸" class="headerlink" title="2、一劳永逸"></a>2、一劳永逸</h4><ul><li><h5 id="Linux-和-Mac-系统："><a href="#Linux-和-Mac-系统：" class="headerlink" title="Linux 和 Mac 系统："></a><code>Linux</code> 和 <code>Mac</code> 系统：</h5><ol><li><code>mkdir ~/.pip</code> 建立一个文件夹。</li><li><code>cd ~/.pip</code> 进入我们创建的文件夹中。</li><li><code>touch pip.conf</code> 创建 pip 配置文件。</li><li><code>vi pip.conf</code> 编辑 pip 配置文件，写入代码如下：<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[global]</span><br><span class="hljs-attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure></li><li><code>ZZ</code> 保存退出。</li></ol></li><li><h5 id="Windows-系统："><a href="#Windows-系统：" class="headerlink" title="Windows 系统："></a><code>Windows</code> 系统：</h5>直接在 <code>user</code> 目录中创建一个 pip 目录，如：<code>C:\Users\xx\pip</code> ，新建文件 <code>pip.ini</code> ，写入代码如下:<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[global]</span><br><span class="hljs-attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python使用POP3和SMTP协议收发邮件</title>
    <link href="/Python%E4%BD%BF%E7%94%A8POP3%E5%92%8CSMTP%E5%8D%8F%E8%AE%AE%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6/"/>
    <url>/Python%E4%BD%BF%E7%94%A8POP3%E5%92%8CSMTP%E5%8D%8F%E8%AE%AE%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>先来了解一下收&#x2F;发邮件有哪些协议：</p><ul><li><strong>SMTP 协议</strong><br> SMTP（Simple Mail Transfer Protocol），即简单邮件传输协议。相当于中转站，将邮件发送到客户端。</li><li><strong>POP3 协议</strong><br> POP3（Post Office Protocol 3），即邮局协议的第 3 个版本，是电子邮件的第一个离线协议标准。该协议把邮件下载到本地计算机，不与服务器同步，缺点是更易丢失邮件或多次下载相同的邮件。</li><li><strong>IMAP 协议</strong><br> IMAP（Internet Mail Access Protocol），即交互式邮件存取协议。该协议连接远程邮箱直接操作，与服务器内容同步。</li><li><strong>Exchange 服务</strong><br> Exchange 服务是一个设计完备的邮件服务器产品，提供了通常所需要的全部邮件服务功能。除了常规 SMTP&#x2F;POP 协议服务之外，它还支持 IMAP4 、LDAP 和 NNTP 协议。</li></ul><p>Python 内置对 SMTP&#x2F;POP3&#x2F;IMAP 的支持。更多详情请移步 <a href="https://docs.python.org/zh-cn/3/library/email.html#module-email">Python 官方教程</a></p><span id="more"></span><hr><h2 id="SMTP-发送邮件"><a href="#SMTP-发送邮件" class="headerlink" title="SMTP 发送邮件"></a>SMTP 发送邮件</h2><p>Python 对 SMTP 支持有 <code>smtplib</code> 和 <code>email</code> 两个模块，<code>email</code> 负责构造邮件，<code>smtplib</code> 负责发送邮件。</p><h4 id="构造邮件"><a href="#构造邮件" class="headerlink" title="构造邮件"></a>构造邮件</h4><p>构造最简单的纯文本邮件，如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> email.mime.text <span class="hljs-keyword">import</span> MIMEText<br><br>msg = MIMEText(<span class="hljs-string">&#x27;hello, send by Python...&#x27;</span>, <span class="hljs-string">&#x27;plain&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>)<br></code></pre></td></tr></table></figure><p>注意到构造 <code>MIMEText</code> 对象时，第一个参数就是邮件正文，第二个参数是 MIME 的 subtype，传入 <code>&#39;plain&#39;</code> 表示纯文本，最终的 MIME 就是 <code>&#39;text/plain&#39;</code>，最后一定要用 <code>utf-8</code> 编码保证多语言兼容性。</p><h4 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h4><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs axapta">import smtplib<br><br><span class="hljs-meta"># 输入Email地址和口令:</span><br>from_addr = <span class="hljs-string">&#x27;test_from_addr@qq.com&#x27;</span><br>password = <span class="hljs-string">&#x27;Password&#x27;</span><br><span class="hljs-meta"># 输入收件人地址:</span><br>to_addr = <span class="hljs-string">&#x27;test_to_addr@qq.com&#x27;</span><br><span class="hljs-meta"># 输入SMTP服务器地址:</span><br>smtp_server = smtp.qq.com<br><br><span class="hljs-keyword">server</span> = smtplib.SMTP(smtp_server, <span class="hljs-number">25</span>) <span class="hljs-meta"># SMTP协议默认端口是25</span><br><span class="hljs-meta"># server.starttls() # 如果是SSL，则用 587 端口，再加上这句代码就行了</span><br><span class="hljs-keyword">server</span>.set_debuglevel(<span class="hljs-number">1</span>)    <span class="hljs-meta"># 打印出和SMTP服务器交互的所有信息</span><br><span class="hljs-keyword">server</span>.login(from_addr, password)   <span class="hljs-meta"># 登录SMTP服务器</span><br><span class="hljs-keyword">server</span>.sendmail(from_addr, [to_addr], msg.as_string())    <span class="hljs-meta"># 发邮件</span><br><span class="hljs-keyword">server</span>.quit()<br></code></pre></td></tr></table></figure><p><code>sendmail()</code> 方法就是发邮件，由于可以一次发给多个人，所以传入一个 <code>list</code>，邮件正文是一个 <code>str</code>，<code>as_string()</code> 把 MIMEText 对象变成 <code>str</code>。</p><p><strong>注意：</strong> QQ 邮件等需要手动开通 <code>SMTP服务</code> ， 邮箱设置 &#x3D;&gt; 账号 &#x3D;&gt; POP3&#x2F;SMTP 服务，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E4%BD%BF%E7%94%A8POP3%E5%92%8CSMTP%E5%8D%8F%E8%AE%AE%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6-1.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/Python%E4%BD%BF%E7%94%A8POP3%E5%92%8CSMTP%E5%8D%8F%E8%AE%AE%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6-2.png" alt="image"></p><p>此时，我们就可以收到邮件了，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E4%BD%BF%E7%94%A8POP3%E5%92%8CSMTP%E5%8D%8F%E8%AE%AE%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6-3.png" alt="image"></p><h4 id="添加邮件标题、收-x2F-发件人"><a href="#添加邮件标题、收-x2F-发件人" class="headerlink" title="添加邮件标题、收&#x2F;发件人"></a>添加邮件标题、收&#x2F;发件人</h4><p>邮件主题、显示发件人、收件人等信息并不是通过 SMTP 协议发送的，而是包含在 <code>MIMEText</code> 对象中，如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> email <span class="hljs-keyword">import</span> encoders<br><span class="hljs-keyword">from</span> email.<span class="hljs-keyword">header</span> <span class="hljs-keyword">import</span> <span class="hljs-keyword">Header</span><br><span class="hljs-keyword">from</span> email.mime.text <span class="hljs-keyword">import</span> MIMEText<br><span class="hljs-keyword">from</span> email.utils <span class="hljs-keyword">import</span> parseaddr, formataddr<br><br><span class="hljs-keyword">import</span> smtplib<br><br>def _format_addr(s):<br>    <span class="hljs-type">name</span>, addr = parseaddr(s)<br>    <span class="hljs-keyword">return</span> formataddr((<span class="hljs-keyword">Header</span>(<span class="hljs-type">name</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>).encode(), addr))<br><br>from_addr = <span class="hljs-string">&#x27;test_from_addr@qq.com&#x27;</span><br><span class="hljs-keyword">password</span> = <span class="hljs-string">&#x27;Password&#x27;</span><br>to_addr = <span class="hljs-string">&#x27;test_to_addr@qq.com&#x27;</span><br>smtp_server = smtp.qq.com<br><br>msg = MIMEText(<span class="hljs-string">&#x27;hello, send by Python...&#x27;</span>, <span class="hljs-string">&#x27;plain&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>msg[<span class="hljs-string">&#x27;From&#x27;</span>] = _format_addr(<span class="hljs-string">&#x27;发件人昵称 &lt;%s&gt;&#x27;</span> % from_addr)<br>msg[<span class="hljs-string">&#x27;To&#x27;</span>] = _format_addr(<span class="hljs-string">&#x27;收件人昵称 &lt;%s&gt;&#x27;</span> % to_addr)<br>msg[<span class="hljs-string">&#x27;Subject&#x27;</span>] = <span class="hljs-keyword">Header</span>(<span class="hljs-string">&#x27;这是个有主题的邮件&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>).encode()<br><br><span class="hljs-keyword">server</span> = smtplib.SMTP(smtp_server, <span class="hljs-number">25</span>)<br><span class="hljs-keyword">server</span>.set_debuglevel(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">server</span>.<span class="hljs-keyword">login</span>(from_addr, <span class="hljs-keyword">password</span>)<br><span class="hljs-keyword">server</span>.sendmail(from_addr, [to_addr], msg.as_string())<br><span class="hljs-keyword">server</span>.quit()<br></code></pre></td></tr></table></figure><p>收到的邮件，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E4%BD%BF%E7%94%A8POP3%E5%92%8CSMTP%E5%8D%8F%E8%AE%AE%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6-4.png" alt="image"></p><p>收件人并不是我们设置的 “收件人昵称”，是因为很多邮件服务商在显示邮件时，会把收件人名字自动替换为用户注册的名字，这无伤大雅。</p><h4 id="添加抄送，暗送"><a href="#添加抄送，暗送" class="headerlink" title="添加抄送，暗送"></a>添加抄送，暗送</h4><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta"># ccto_list 抄送</span><br><span class="hljs-meta"># bccto_list 暗送</span><br><br>msg[<span class="hljs-string">&#x27;from&#x27;</span>] = user<br>msg[<span class="hljs-string">&#x27;to&#x27;</span>] = <span class="hljs-string">&#x27;,&#x27;</span>.<span class="hljs-keyword">join</span>(to_list)   <span class="hljs-meta">#注意，不是分号</span><br>msg[<span class="hljs-string">&#x27;cc&#x27;</span>] = <span class="hljs-string">&#x27;,&#x27;</span>.<span class="hljs-keyword">join</span>(ccto_list)<br>msg[<span class="hljs-string">&#x27;subject&#x27;</span>] = subject<br><span class="hljs-keyword">server</span>.sendmail(sender,to_list+ccto_list+bccto_list, <span class="hljs-built_in">str</span>(msg))<br></code></pre></td></tr></table></figure><h4 id="发送-HTML-邮件"><a href="#发送-HTML-邮件" class="headerlink" title="发送 HTML 邮件"></a>发送 HTML 邮件</h4><p>要发送 HTML 邮件很简单，在构造 <code>MIMEText</code> 对象时，把 HTML 字符串传进去，再把第二个参数由 <code>plain</code> 变为 <code>html</code> ，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml">msg = MIMEText(&#x27;<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>&#x27; +<br>    &#x27;<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>send by <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://blog.pangao.vip&quot;</span>&gt;</span>PanGao’s blog<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>&#x27; +<br>    &#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>&#x27;, &#x27;html&#x27;, &#x27;utf-8&#x27;)<br></code></pre></td></tr></table></figure><h4 id="发送附件"><a href="#发送附件" class="headerlink" title="发送附件"></a>发送附件</h4><p>要想发送附件，需要构造一个 <code>MIMEMultipart</code> 对象代表邮件本身，然后往里面加上一个 <code>MIMEText</code> 作为邮件正文，再继续往里面加上表示附件的 <code>MIMEBase</code> 对象，如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">from</span> email<span class="hljs-selector-class">.mime</span><span class="hljs-selector-class">.multipart</span> import MIMEMultipart<br><span class="hljs-selector-tag">from</span> email<span class="hljs-selector-class">.mime</span><span class="hljs-selector-class">.base</span> import MIMEBase<br><br># 邮件对象:<br>msg = <span class="hljs-built_in">MIMEMultipart</span>()<br>msg[<span class="hljs-string">&#x27;From&#x27;</span>] = <span class="hljs-built_in">_format_addr</span>(<span class="hljs-string">&#x27;发件人昵称 &lt;%s&gt;&#x27;</span> % from_addr)<br>msg[<span class="hljs-string">&#x27;To&#x27;</span>] = <span class="hljs-built_in">_format_addr</span>(<span class="hljs-string">&#x27;收件人昵称 &lt;%s&gt;&#x27;</span> % to_addr)<br>msg[<span class="hljs-string">&#x27;Subject&#x27;</span>] = <span class="hljs-built_in">Header</span>(<span class="hljs-string">&#x27;这是个有主题的邮件&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>).<span class="hljs-built_in">encode</span>()<br><br># 邮件正文是MIMEText:<br>msg.<span class="hljs-built_in">attach</span>(<span class="hljs-built_in">MIMEText</span>(<span class="hljs-string">&#x27;send with file...&#x27;</span>, <span class="hljs-string">&#x27;plain&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>))<br><br># 添加附件就是加上一个MIMEBase，从本地读取一个图片:<br>with <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;/Users/pangao/Downloads/test.png&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) as f:<br>    # 设置附件的MIME和文件名，这里是png类型:<br>    mime = <span class="hljs-built_in">MIMEBase</span>(<span class="hljs-string">&#x27;image&#x27;</span>, <span class="hljs-string">&#x27;png&#x27;</span>, filename=<span class="hljs-string">&#x27;test.png&#x27;</span>)<br>    # 加上必要的头信息:<br>    mime.<span class="hljs-built_in">add_header</span>(<span class="hljs-string">&#x27;Content-Disposition&#x27;</span>, <span class="hljs-string">&#x27;attachment&#x27;</span>, filename=<span class="hljs-string">&#x27;test.png&#x27;</span>)<br>    mime.<span class="hljs-built_in">add_header</span>(<span class="hljs-string">&#x27;Content-ID&#x27;</span>, <span class="hljs-string">&#x27;&lt;0&gt;&#x27;</span>)<br>    mime.<span class="hljs-built_in">add_header</span>(<span class="hljs-string">&#x27;X-Attachment-Id&#x27;</span>, <span class="hljs-string">&#x27;0&#x27;</span>)<br>    # 把附件的内容读进来:<br>    mime.<span class="hljs-built_in">set_payload</span>(f.<span class="hljs-built_in">read</span>())<br>    # 用Base64编码:<br>    encoders.<span class="hljs-built_in">encode_base64</span>(mime)<br>    # 添加到MIMEMultipart:<br>    msg.<span class="hljs-built_in">attach</span>(mime)<br></code></pre></td></tr></table></figure><p><img src="https://pangao1990.gitee.io/pic/Python%E4%BD%BF%E7%94%A8POP3%E5%92%8CSMTP%E5%8D%8F%E8%AE%AE%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6-5.png" alt="image"></p><h4 id="发送图片"><a href="#发送图片" class="headerlink" title="发送图片"></a>发送图片</h4><p>由于 <code>mac</code> 自带的邮件会自动把图片附件插入邮件正文中，所以样式很好看。但是普通邮件可能没这么便捷（抱歉，我没见过普通邮件。。。小小得瑟一下）</p><p>如果要把一个图片嵌入到邮件正文中怎么做？直接在 HTML 邮件中链接图片地址行不行？答案是，大部分邮件服务商都会自动屏蔽带有外链的图片，因为不知道这些链接是否指向恶意网站。</p><p>要把图片嵌入到邮件正文中，我们只需按照发送附件的方式，先把邮件作为附件添加进去，然后，在 HTML 中通过引用 <code>src=&quot;cid:0&quot;</code> 就可以把附件作为图片嵌入了。如果有多个图片，给它们依次编号，然后引用不同的 <code>cid:x</code> 即可。</p><p>把上面代码加入 <code>MIMEMultipart</code> 的 <code>MIMEText</code> 从 <code>plain</code> 改为 <code>html</code>，然后在适当的位置引用图片，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml">msg.attach(MIMEText(&#x27;<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>&#x27; +<br>    &#x27;<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;cid:0&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>&#x27; +<br>    &#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>&#x27;, &#x27;html&#x27;, &#x27;utf-8&#x27;))<br></code></pre></td></tr></table></figure><h4 id="同时支持-HTML-和-Plain-格式"><a href="#同时支持-HTML-和-Plain-格式" class="headerlink" title="同时支持 HTML 和 Plain 格式"></a>同时支持 HTML 和 Plain 格式</h4><p>如果我们发送 HTML 邮件，收件人通过浏览器或者 Outlook 之类的软件是可以正常浏览邮件内容的，但是，如果收件人使用的设备太古老，查看不了 HTML 邮件怎么办？</p><p>办法是在发送 HTML 的同时再附加一个纯文本，如果收件人无法查看 HTML 格式的邮件，就可以自动降级查看纯文本邮件。</p><p>利用 <code>MIMEMultipart</code> 就可以组合一个 HTML 和 Plain，要注意指定 subtype 是 <code>alternative</code>，如下：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs prolog">msg = <span class="hljs-symbol">MIMEMultipart</span>(<span class="hljs-string">&#x27;alternative&#x27;</span>)<br>msg[<span class="hljs-string">&#x27;From&#x27;</span>] = ...<br>msg[<span class="hljs-string">&#x27;To&#x27;</span>] = ...<br>msg[<span class="hljs-string">&#x27;Subject&#x27;</span>] = ...<br><br>msg.attach(<span class="hljs-symbol">MIMEText</span>(<span class="hljs-string">&#x27;hello&#x27;</span>, <span class="hljs-string">&#x27;plain&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>msg.attach(<span class="hljs-symbol">MIMEText</span>(<span class="hljs-string">&#x27;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;&#x27;</span>, <span class="hljs-string">&#x27;html&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>))<br># 正常发送msg对象...<br></code></pre></td></tr></table></figure><h4 id="加密-SMTP"><a href="#加密-SMTP" class="headerlink" title="加密 SMTP"></a>加密 SMTP</h4><p>使用标准的 25 端口连接 SMTP 服务器时，使用的是明文传输，发送邮件的整个过程可能会被窃听。要更安全地发送邮件，可以加密 SMTP 会话，实际上就是先创建 SSL 安全连接，然后再使用 SMTP 协议发送邮件。</p><p>某些邮件服务商，例如 Gmail，提供的 SMTP 服务必须要加密传输。我们来看看如何通过 Gmail 提供的安全 SMTP 发送邮件。</p><p>必须知道，Gmail 的 SMTP 端口是 587，因此，修改代码如下：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs axapta">smtp_server = <span class="hljs-string">&#x27;smtp.gmail.com&#x27;</span><br>smtp_port = <span class="hljs-number">587</span><br><span class="hljs-keyword">server</span> = smtplib.SMTP(smtp_server, smtp_port)<br><span class="hljs-keyword">server</span>.starttls()<br><span class="hljs-meta"># 剩下的代码和前面的一模一样:</span><br><span class="hljs-keyword">server</span>.set_debuglevel(<span class="hljs-number">1</span>)<br>...<br></code></pre></td></tr></table></figure><p>只需要在创建 <code>SMTP</code> 对象后，立刻调用 <code>starttls()</code> 方法，就创建了安全连接。后面的代码和前面的发送邮件代码完全一样。</p><h2 id="POP3-收取邮件"><a href="#POP3-收取邮件" class="headerlink" title="POP3 收取邮件"></a>POP3 收取邮件</h2><p>Python 内置一个 <code>poplib</code> 模块，实现了 POP3 协议，可以直接用来收邮件。</p><p>注意到 POP3 协议收取的不是一个已经可以阅读的邮件本身，而是邮件的原始文本，这和 SMTP 协议很像，SMTP 发送的也是经过编码后的一大段文本。</p><p>要把 POP3 收取的文本变成可以阅读的邮件，还需要用 email 模块提供的各种类来解析原始文本，变成可阅读的邮件对象。</p><p>所以，收取邮件分两步：</p><p>第一步：用 <code>poplib</code> 把邮件的原始文本下载到本地；</p><p>第二部：用 <code>email</code> 解析原始文本，还原为邮件对象。</p><h4 id="通过-POP3-下载邮件"><a href="#通过-POP3-下载邮件" class="headerlink" title="通过 POP3 下载邮件"></a>通过 POP3 下载邮件</h4><p>POP3 协议本身很简单，以下面的代码为例，我们来获取最新的一封邮件内容：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">from</span> email.parser import Parser<br>import poplib<br><br><span class="hljs-meta"># 输入邮件地址, 口令和POP3服务器地址:</span><br>email = <span class="hljs-string">&#x27;pangao1990@qq.com&#x27;</span><br>password = <span class="hljs-string">&#x27;Password&#x27;</span><br>pop3_server = <span class="hljs-string">&#x27;pop.qq.com&#x27;</span><br><br><span class="hljs-meta"># 连接到POP3服务器:</span><br><span class="hljs-keyword">server</span> = poplib.POP3_SSL(pop3_server)<br><span class="hljs-meta"># 可以打开或关闭调试信息:</span><br><span class="hljs-keyword">server</span>.set_debuglevel(<span class="hljs-number">1</span>)<br><br><span class="hljs-meta"># 身份认证:</span><br><span class="hljs-keyword">server</span>.user(email)<br><span class="hljs-keyword">server</span>.pass_(password)<br><br><span class="hljs-meta"># list()返回所有邮件的编号:</span><br>resp, mails, octets = <span class="hljs-keyword">server</span>.list()<br><br><span class="hljs-meta"># 获取最新一封邮件, 注意索引号从1开始:</span><br><span class="hljs-keyword">index</span> = len(mails)<br>resp, lines, octets = <span class="hljs-keyword">server</span>.retr(<span class="hljs-keyword">index</span>)<br><br><span class="hljs-meta"># lines存储了邮件的原始文本的每一行,</span><br><span class="hljs-meta"># 可以获得整个邮件的原始文本:</span><br>msg_content = b<span class="hljs-string">&#x27;\r\n&#x27;</span>.<span class="hljs-keyword">join</span>(lines).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><span class="hljs-meta"># 稍后解析出邮件:</span><br>msg = Parser().parsestr(msg_content)<br><br><span class="hljs-meta"># 可以根据邮件索引号直接从服务器删除邮件:</span><br><span class="hljs-meta"># server.dele(index)</span><br><span class="hljs-meta"># 关闭连接:</span><br><span class="hljs-keyword">server</span>.quit()<br></code></pre></td></tr></table></figure><p>但是这个 <code>Message</code> 对象本身可能是一个 <code>MIMEMultipart</code> 对象，即包含嵌套的其他 <code>MIMEBase</code> 对象，嵌套可能还不止一层。</p><p>所以我们要递归地打印出 <code>Message</code> 对象的层次结构：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> email.header <span class="hljs-keyword">import</span> decode_header<br><span class="hljs-keyword">from</span> email.utils <span class="hljs-keyword">import</span> parseaddr<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">print_info</span>(<span class="hljs-params">msg, indent=<span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> indent == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">for</span> header <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;From&#x27;</span>, <span class="hljs-string">&#x27;To&#x27;</span>, <span class="hljs-string">&#x27;Subject&#x27;</span>]:<br>            value = msg.get(header, <span class="hljs-string">&#x27;&#x27;</span>)<br>            <span class="hljs-keyword">if</span> value:<br>                <span class="hljs-keyword">if</span> header == <span class="hljs-string">&#x27;Subject&#x27;</span>:<br>                    value = decode_str(value)<br>                <span class="hljs-keyword">else</span>:<br>                    hdr, addr = parseaddr(value)<br>                    name = decode_str(hdr)<br>                    value = <span class="hljs-string">u&#x27;%s &lt;%s&gt;&#x27;</span> % (name, addr)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s%s: %s&#x27;</span> % (<span class="hljs-string">&#x27;  &#x27;</span> * indent, header, value))<br>    <span class="hljs-keyword">if</span> (msg.is_multipart()):<br>        parts = msg.get_payload()<br>        <span class="hljs-keyword">for</span> n, part <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(parts):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%spart %s&#x27;</span> % (<span class="hljs-string">&#x27;  &#x27;</span> * indent, n))<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s--------------------&#x27;</span> % (<span class="hljs-string">&#x27;  &#x27;</span> * indent))<br>            print_info(part, indent + <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">else</span>:<br>        content_type = msg.get_content_type()<br>        <span class="hljs-keyword">if</span> content_type == <span class="hljs-string">&#x27;text/plain&#x27;</span> <span class="hljs-keyword">or</span> content_type == <span class="hljs-string">&#x27;text/html&#x27;</span>:<br>            content = msg.get_payload(decode=<span class="hljs-literal">True</span>)<br>            charset = guess_charset(msg)<br>            <span class="hljs-keyword">if</span> charset:<br>                content = content.decode(charset)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%sText: %s&#x27;</span> % (<span class="hljs-string">&#x27;  &#x27;</span> * indent, content + <span class="hljs-string">&#x27;...&#x27;</span>))<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%sAttachment: %s&#x27;</span> % (<span class="hljs-string">&#x27;  &#x27;</span> * indent, content_type))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_str</span>(<span class="hljs-params">s</span>):<br>    value, charset = decode_header(s)[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">if</span> charset:<br>        value = value.decode(charset)<br>    <span class="hljs-keyword">return</span> value<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">guess_charset</span>(<span class="hljs-params">msg</span>):<br>    charset = msg.get_charset()<br>    <span class="hljs-keyword">if</span> charset <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        content_type = msg.get(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).lower()<br>        pos = content_type.find(<span class="hljs-string">&#x27;charset=&#x27;</span>)<br>        <span class="hljs-keyword">if</span> pos &gt;= <span class="hljs-number">0</span>:<br>            charset = content_type[pos + <span class="hljs-number">8</span>:].strip()<br>    <span class="hljs-keyword">return</span> charset<br><br><br>print_info(msg) <span class="hljs-comment">#解析</span><br><br><span class="hljs-comment"># From: 木叶 &lt;pangao1990@qq.com&gt;</span><br><span class="hljs-comment"># To:  &lt;mail@pangao.vip&gt;</span><br><span class="hljs-comment"># Subject: 测试主题</span><br><span class="hljs-comment"># Text: 测试内容</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ...</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python中关于++和—（自增和自减）的理解</title>
    <link href="/Python%E4%B8%AD%E5%85%B3%E4%BA%8E++%E5%92%8C%E2%80%94%EF%BC%88%E8%87%AA%E5%A2%9E%E5%92%8C%E8%87%AA%E5%87%8F%EF%BC%89%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <url>/Python%E4%B8%AD%E5%85%B3%E4%BA%8E++%E5%92%8C%E2%80%94%EF%BC%88%E8%87%AA%E5%A2%9E%E5%92%8C%E8%87%AA%E5%87%8F%EF%BC%89%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p>首先要知道的是，<code>Python</code> 中是没有 <code>++</code> 和 <code>--</code> 的。那么要实现自增和自减的话，可以使用如下操作：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-keyword">a</span> = <span class="hljs-keyword">a</span> + <span class="hljs-number">1</span><br>或<br><span class="hljs-keyword">a</span> += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><span id="more"></span><h4 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h4><p>我们知道， <strong>python中的数字类型是不可变数据</strong>。也就是数字类型数据在 <code>内存</code> 中是不会发生改变，当变量值发生改变时，会新申请一块内存赋值为新值，然后将变量指向新的内存地址。<br>实验如下：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a = <span class="hljs-number">10</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>140530470127960<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a += <span class="hljs-number">1</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>140530470129080<br></code></pre></td></tr></table></figure><p>可以看到当 <code>a</code> 的值发生改变时，<code>a</code> 指向的内存地址也发生了改变。而在C语言中，<code>a</code> 指向的内存地址并不会发生改变，而是改变内存的内容。</p><p><code>+=</code> 是改变变量，相当于重新生成一个变量，把操作后的结果赋予这个新生成的变量。<br><code>++</code> 是改变了对象本身，而不是变量本身，即改变数据地址所指向的内存中的内容。</p><p>既然 <code>Python</code> 中的数字类型是不可变的，那何来的“自增”这么一说呢？</p><p><strong>另外：</strong></p><p><code>int</code> 理论上是每次赋值都创建一个新对象的。但是由于使用频繁，为了提升性能避免浪费，所有 <code>python</code> 有个 整数池，默认 <code>[-5, 256]</code> 的数字都属于这个整数池，这些每次赋值的时候，是取得池中的整数对象。但是其他的除外，如下：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a = <span class="hljs-number">5</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">b = <span class="hljs-number">5</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(a)</span><br>140530470128360<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(b)</span><br>140530470128360<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">a <span class="hljs-keyword">is</span> b</span><br>True<br><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">c = <span class="hljs-number">257</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python">d = <span class="hljs-number">257</span></span><br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(c)</span><br>140530470136432<br><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-built_in">id</span>(d)</span><br>140530470136408<br></code></pre></td></tr></table></figure><p><strong>但：</strong></p><p>有时候在 Python 中看到存在 <code>++i</code> 这种形式，这其实不是自增，只是简单的表示正负数的正号而已。正正得正，负负得正，所以 <code>++i</code> 和 <code>--i</code> 都是 <code>i</code> 。</p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python使用内置urllib模块或第三方库requests访问网络资源</title>
    <link href="/Python%E4%BD%BF%E7%94%A8%E5%86%85%E7%BD%AEurllib%E6%A8%A1%E5%9D%97%E6%88%96%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93requests%E8%AE%BF%E9%97%AE%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/"/>
    <url>/Python%E4%BD%BF%E7%94%A8%E5%86%85%E7%BD%AEurllib%E6%A8%A1%E5%9D%97%E6%88%96%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93requests%E8%AE%BF%E9%97%AE%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<p><code>Python</code> 访问网络资源有很多方法，<code>urllib</code>, <code>urllib2</code>, <code>urllib3</code>, <code>httplib</code>, <code>httplib2</code>, <code>requests</code> ，现介绍如下两种方法：  </p><ul><li><strong>内置的 <code>urllib</code> 模块</strong><ul><li>优点：自带模块，无需额外下载第三方库</li><li>缺点：操作繁琐，缺少高级功能</li></ul></li><li><strong>第三方库 <code>requests</code></strong><ul><li>优点：处理URL资源特别方便</li><li>缺点：需要下载安装第三方库</li></ul></li></ul><hr><h2 id="内置的-urllib-模块"><a href="#内置的-urllib-模块" class="headerlink" title="内置的 urllib 模块"></a>内置的 <code>urllib</code> 模块</h2><h4 id="发起GET请求"><a href="#发起GET请求" class="headerlink" title="发起GET请求"></a>发起GET请求</h4><p>主要使用urlopen()方法来发起请求，如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">from urllib import request<br><br>resp = request<span class="hljs-selector-class">.urlopen</span>(<span class="hljs-string">&#x27;http://www.baidu.com&#x27;</span>)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(resp.read()</span></span><span class="hljs-selector-class">.decode</span>())<br></code></pre></td></tr></table></figure><p>访问的结果会是一 <code>个http.client.HTTPResponse</code> 对象，使用此对象的 <code>read()</code> 方法，则可以获取访问网页获得的数据。但是要注意的是，获得的数据会是 <code>bytes</code> 的二进制格式，所以需要 <code>decode()</code> 一下，转换成字符串格式。</p><h4 id="发起POST请求"><a href="#发起POST请求" class="headerlink" title="发起POST请求"></a>发起POST请求</h4><p><code>urlopen()</code> 默认的访问方式是GET，当在 <code>urlopen()</code> 方法中传入data参数时，则会发起POST请求。注意：传递的data数据需要为bytes格式。</p><p>设置timeout参数还可以设置超时时间，如果请求时间超出，那么就会抛出异常。如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> urllib import request<br><br>resp = request.urlopen(<span class="hljs-string">&#x27;http://www.baidu.com&#x27;</span>, <span class="hljs-attribute">data</span>=b&#x27;word=hello&#x27;, <span class="hljs-attribute">timeout</span>=10)<br><span class="hljs-built_in">print</span>(resp.read().decode())<br></code></pre></td></tr></table></figure><h4 id="添加Headers"><a href="#添加Headers" class="headerlink" title="添加Headers"></a>添加Headers</h4><p>通过 <code>urllib</code> 发起的请求会有默认的一个Headers：”User-Agent”:”Python-urllib&#x2F;3.6”，指明请求是由 <code>urllib</code> 发送的。<br>所以遇到一些验证User-Agent的网站时，我们需要自定义Headers，而这需要借助于urllib.request中的 <code>Request</code> 对象。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> urllib import request<br><br><span class="hljs-attribute">url</span> = &#x27;http://httpbin.org/get&#x27;<br><span class="hljs-attribute">headers</span> = &#123;&#x27;user-agent&#x27;: &#x27;Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Macintosh; Intel Mac OS X <span class="hljs-number">10</span>_13_5) AppleWebKit/<span class="hljs-number">537</span>.<span class="hljs-number">36</span> (KHTML, like Gecko) Chrome/<span class="hljs-number">66</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3359</span>.<span class="hljs-number">181</span> Safari/<span class="hljs-number">537</span>.<span class="hljs-number">36</span>&#x27;&#125;<br><br><span class="hljs-comment"># 需要使用url和headers生成一个Request对象，然后将其传入urlopen方法中</span><br><span class="hljs-attribute">req</span> = request.Request(url, headers=headers)<br><span class="hljs-attribute">resp</span> = request.urlopen(req)<br><span class="hljs-attribute">print</span>(resp.read().decode())<br></code></pre></td></tr></table></figure><h4 id="Request对象"><a href="#Request对象" class="headerlink" title="Request对象"></a>Request对象</h4><p>如上所示， <code>urlopen()</code> 方法中不止可以传入字符串格式的url，也可以传入一个 <code>Request</code> 对象来扩展功能，<code>Request</code> 对象如下：</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs oxygene"><span class="hljs-keyword">class</span> urllib.request.Request(url, data=None, headers=<span class="hljs-comment">&#123;&#125;</span>,<br>                                origin_req_host=None,<br>                                unverifiable=<span class="hljs-keyword">False</span>, <br>                                <span class="hljs-keyword">method</span>=<span class="hljs-title function_">None</span>)<br></code></pre></td></tr></table></figure><p>构造 <code>Request</code> 对象必须传入url参数，data数据和headers都是可选的。</p><p>最后， <code>Request</code> 方法可以使用method参数来自由选择请求的方法，如PUT，DELETE等等，默认为GET。</p><h4 id="添加Cookie"><a href="#添加Cookie" class="headerlink" title="添加Cookie"></a>添加Cookie</h4><p>为了在请求时能带上Cookie信息，我们需要重新构造一个opener。</p><p>使用request.build_opener方法来进行构造opener，将我们想要传递的cookie配置到opener中，然后使用这个opener的open方法来发起请求。如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> http <span class="hljs-keyword">import</span> cookiejar<br><span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> request<br><br>url = <span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span><br><span class="hljs-comment"># 创建一个cookiejar对象</span><br>cookie = cookiejar.CookieJar()<br><span class="hljs-comment"># 使用HTTPCookieProcessor创建cookie处理器</span><br>cookies = request.HTTPCookieProcessor(cookie)<br><span class="hljs-comment"># 并以它为参数创建Opener对象</span><br>opener = request.build_opener(cookies)<br><span class="hljs-comment"># 使用这个opener来发起请求</span><br>resp = opener.<span class="hljs-built_in">open</span>(url)<br><br><span class="hljs-comment"># 查看之前的cookie对象，则可以看到访问百度获得的cookie</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> cookie:<br>    <span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure><p>或者也可以把这个生成的opener使用install_opener方法来设置为全局的。</p><p>则之后使用urlopen方法发起请求时，都会带上这个cookie。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-comment"># 将这个opener设置为全局的opener</span><br>request.install_opener(opener)<br>resp = request.urlopen(url)<br></code></pre></td></tr></table></figure><h4 id="设置Proxy代理"><a href="#设置Proxy代理" class="headerlink" title="设置Proxy代理"></a>设置Proxy代理</h4><p>使用爬虫来爬取数据的时候，常常需要使用代理来隐藏我们的真实IP。如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> request<br><br>url = <span class="hljs-string">&#x27;http://www.baidu.com&#x27;</span><br>proxy = &#123;<span class="hljs-string">&#x27;http&#x27;</span>:<span class="hljs-string">&#x27;222.222.222.222:80&#x27;</span>,<span class="hljs-string">&#x27;https&#x27;</span>:<span class="hljs-string">&#x27;222.222.222.222:80&#x27;</span>&#125;<br><span class="hljs-comment"># 创建代理处理器</span><br>proxies = request.ProxyHandler(proxy)<br><span class="hljs-comment"># 创建opener对象</span><br>opener = request.build_opener(proxies)<br><br>resp = opener.<span class="hljs-built_in">open</span>(url)<br><span class="hljs-built_in">print</span>(resp.read().decode())<br></code></pre></td></tr></table></figure><h4 id="下载数据到本地"><a href="#下载数据到本地" class="headerlink" title="下载数据到本地"></a>下载数据到本地</h4><p>在我们进行网络请求时常常需要保存图片或音频等数据到本地，一种方法是使用python的文件操作，将read()获取的数据保存到文件中。</p><p>而urllib提供了一个urlretrieve()方法，可以简单的直接将请求获取的数据保存成文件。如下：</p><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs qml">from urllib <span class="hljs-keyword">import</span> request<br><br><span class="hljs-built_in">url</span> = <span class="hljs-string">&#x27;http://python.org/&#x27;</span><br>request.urlretrieve(<span class="hljs-built_in">url</span>, <span class="hljs-string">&#x27;python.html&#x27;</span>)<br></code></pre></td></tr></table></figure><p><code>urlretrieve()</code> 方法传入的第二个参数为文件保存的位置，以及文件名。</p><p><strong>注意：</strong><code>urlretrieve()</code> 方法是python2直接移植过来的方法，以后有可能在某个版本中弃用。</p><h2 id="第三方库-requests"><a href="#第三方库-requests" class="headerlink" title="第三方库 requests"></a>第三方库 <code>requests</code></h2><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>由于 <code>requests</code>是第三方库，所以要先安装，如下：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> requests<br></code></pre></td></tr></table></figure><h4 id="发起GET请求-1"><a href="#发起GET请求-1" class="headerlink" title="发起GET请求"></a>发起GET请求</h4><p>直接用 <code>get</code> 方法，如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import requests<br><br>r = requests<span class="hljs-selector-class">.get</span>(<span class="hljs-string">&#x27;http://www.baidu.com/&#x27;</span>)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(r.status_code)</span></span>    #状态<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(r.text)</span></span>   #内容<br></code></pre></td></tr></table></figure><p>对于带参数的URL，传入一个dict作为params参数，如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import requests<br><br>r = requests<span class="hljs-selector-class">.get</span>(<span class="hljs-string">&#x27;http://www.baidu.com/&#x27;</span>, params=&#123;<span class="hljs-string">&#x27;q&#x27;</span>: <span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;cat&#x27;</span>: <span class="hljs-string">&#x27;1001&#x27;</span>&#125;)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(r.url)</span></span>    #实际请求的URL<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(r.text)</span></span><br></code></pre></td></tr></table></figure><p>requests的方便之处还在于，对于特定类型的响应，例如JSON，可以直接获取，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">r</span> = requests.get(&#x27;https://query.yahooapis.com/v1/public/yql?q=select%<span class="hljs-number">20</span>*%<span class="hljs-number">20</span>from%<span class="hljs-number">20</span>weather.forecast%<span class="hljs-number">20</span>where%<span class="hljs-number">20</span>woeid%<span class="hljs-number">20</span>%<span class="hljs-number">3</span>D%<span class="hljs-number">202151330</span>&amp;format=json&#x27;)<br><span class="hljs-attribute">r</span>.json()<br><br><span class="hljs-comment"># &#123;&#x27;query&#x27;: &#123;&#x27;count&#x27;: 1, &#x27;created&#x27;: &#x27;2017-11-17T07:14:12Z&#x27;, ...</span><br></code></pre></td></tr></table></figure><h4 id="添加Headers-1"><a href="#添加Headers-1" class="headerlink" title="添加Headers"></a>添加Headers</h4><p>需要传入HTTP Header时，我们传入一个dict作为headers参数，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">r</span> = requests.get(<span class="hljs-string">&#x27;https://www.baidu.com/&#x27;</span>, headers=&#123;<span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit&#x27;</span>&#125;)<br></code></pre></td></tr></table></figure><p>获取响应头，如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">r.headers<br># &#123;Content-Typ<span class="hljs-string">e&#x27;: &#x27;</span><span class="hljs-type">text</span>/html; charset=utf<span class="hljs-number">-8</span><span class="hljs-string">&#x27;, &#x27;</span>Transfer-<span class="hljs-keyword">Encoding</span><span class="hljs-string">&#x27;: &#x27;</span>chunked<span class="hljs-string">&#x27;, &#x27;</span>Content-<span class="hljs-keyword">Encoding</span><span class="hljs-string">&#x27;: &#x27;</span>gzip<span class="hljs-string">&#x27;, ...&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">r.headers[&#x27;</span>Content-Typ<span class="hljs-string">e&#x27;]</span><br><span class="hljs-string"># &#x27;</span><span class="hljs-type">text</span>/html; charset=utf<span class="hljs-number">-8</span><span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="发起POST请求-1"><a href="#发起POST请求-1" class="headerlink" title="发起POST请求"></a>发起POST请求</h4><p>要发送POST请求，只需要把get()方法变成post()，然后传入data参数作为POST请求的数据，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">r</span> = requests.post(<span class="hljs-string">&#x27;https://accounts.baidu.com/login&#x27;</span>, data=&#123;<span class="hljs-string">&#x27;form_email&#x27;</span>: <span class="hljs-string">&#x27;abc@example.com&#x27;</span>, <span class="hljs-string">&#x27;form_password&#x27;</span>: <span class="hljs-string">&#x27;123456&#x27;</span>&#125;)<br></code></pre></td></tr></table></figure><p>requests默认使用application&#x2F;x-www-form-urlencoded对POST数据编码。如果要传递JSON数据，可以直接传入json参数，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">params</span> = &#123;<span class="hljs-string">&#x27;key&#x27;</span>: <span class="hljs-string">&#x27;value&#x27;</span>&#125;<br><span class="hljs-attr">r</span> = requests.post(url, json=params) <span class="hljs-comment">#内部自动序列化为JSON</span><br></code></pre></td></tr></table></figure><h4 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h4><p>上传文件需要更复杂的编码格式，但是requests把它简化成files参数，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">upload_files</span> = &#123;<span class="hljs-string">&#x27;file&#x27;</span>: open(<span class="hljs-string">&#x27;report.xls&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>)&#125;<br><span class="hljs-attr">r</span> = requests.post(url, files=upload_files)<br></code></pre></td></tr></table></figure><p>在读取文件时，注意务必使用 <code>&#39;rb&#39;</code> 即二进制模式读取，这样获取的 <code>bytes</code> 长度才是文件的长度。</p><p>把 <code>post()</code> 方法替换为 <code>put()</code> ， <code>delete()</code> 等，就可以以PUT或DELETE方式请求资源。</p><h4 id="添加Cookie-1"><a href="#添加Cookie-1" class="headerlink" title="添加Cookie"></a>添加Cookie</h4><p>在请求中传入Cookie，只需准备一个dict传入cookies参数，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">cs</span> = &#123;<span class="hljs-string">&#x27;token&#x27;</span>: <span class="hljs-string">&#x27;12345&#x27;</span>, <span class="hljs-string">&#x27;status&#x27;</span>: <span class="hljs-string">&#x27;working&#x27;</span>&#125;<br><span class="hljs-attr">r</span> = requests.get(url, cookies=cs)<br></code></pre></td></tr></table></figure><p>requests对Cookie做了特殊处理，使得我们不必解析Cookie就可以轻松获取指定的Cookie，如下：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">r.cookies[&#x27;token&#x27;]<br><span class="hljs-meta"># 12345</span><br></code></pre></td></tr></table></figure><h4 id="指定超时"><a href="#指定超时" class="headerlink" title="指定超时"></a>指定超时</h4><p>要指定超时，传入以秒为单位的timeout参数。超时分为连接超时和读取超时，如下：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment"># 3.1秒后连接超时，27秒后读取超时</span><br>    r = requests.<span class="hljs-keyword">get</span>(url, <span class="hljs-keyword">timeout</span>=(<span class="hljs-number">3.1</span>, <span class="hljs-number">27</span>))<br>except requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>    print(e)<br></code></pre></td></tr></table></figure><h4 id="超时重连"><a href="#超时重连" class="headerlink" title="超时重连"></a>超时重连</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs applescript">def gethtml(url):<br>    i = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> i &lt; <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">try</span>:<br>            html = requests.<span class="hljs-keyword">get</span>(url, <span class="hljs-keyword">timeout</span>=<span class="hljs-number">5</span>).<span class="hljs-built_in">text</span><br><span class="hljs-built_in">            return</span> html<br>        except requests.exceptions.RequestException:<br>            i += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="添加代理"><a href="#添加代理" class="headerlink" title="添加代理"></a>添加代理</h4><p>同添加headers方法，代理参数也要是一个dict，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">heads = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit&#x27;</span><br>&#125;<span class="hljs-built_in"></span><br><span class="hljs-built_in">proxy </span>= &#123;<br>    <span class="hljs-string">&#x27;http&#x27;</span>: <span class="hljs-string">&#x27;http://120.25.253.234:812&#x27;</span>,<br>    <span class="hljs-string">&#x27;https&#x27;</span> <span class="hljs-string">&#x27;https://163.125.222.244:8123&#x27;</span><br>&#125;<br>r = requests.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;https://www.baidu.com/&#x27;</span>, <span class="hljs-attribute">headers</span>=heads, <span class="hljs-attribute">proxies</span>=proxy)<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python读写文件</title>
    <link href="/Python%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/"/>
    <url>/Python%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h2><p>用 <code>open()</code> 方法打开文件，返回一个文件对象，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">f</span> = open(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br></code></pre></td></tr></table></figure><p><code>r</code> 表示文本文件，<code>rb</code> 表示二进制文件。（默认参数是 <code>r</code> ）</p><span id="more"></span><p>如果文件不存在，<code>open()</code> 函数就会抛出一个IOError的错误，并且给出错误码和详细的信息告诉你文件不存在：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">&gt;&gt;&gt; <span class="hljs-keyword">f</span>=<span class="hljs-keyword">open</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>Traceback (most recent <span class="hljs-keyword">call</span> <span class="hljs-keyword">last</span>):<br>  File <span class="hljs-string">&quot;&lt;stdin&gt;&quot;</span>, <span class="hljs-built_in">line</span> <span class="hljs-number">1</span>, in <span class="hljs-symbol">&lt;module&gt;</span><br>FileNotFoundError: [Errno <span class="hljs-number">2</span>] No such <span class="hljs-keyword">file</span> <span class="hljs-built_in">or</span> directory: <span class="hljs-string">&#x27;test.txt&#x27;</span><br></code></pre></td></tr></table></figure><p>文件使用完毕后必须关闭，因为文件对象会占用操作系统的资源，并且操作系统同一时间能打开的文件数量也是有限的。</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cos">f.<span class="hljs-keyword">close</span>()<br></code></pre></td></tr></table></figure><p>由于文件读写时都有可能产生IOError，一旦出错，后面的f.close()就不会调用。所以，为了保证无论是否出错都能正确地关闭文件，我们可以使用try … finally来实现，如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">try</span>:<br>    <span class="hljs-keyword">f</span> = <span class="hljs-keyword">open</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>)<br>    <span class="hljs-keyword">print</span>(<span class="hljs-keyword">f</span>.<span class="hljs-keyword">read</span>())<br><span class="hljs-keyword">finally</span>:<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">f</span>:<br>        <span class="hljs-keyword">f</span>.<span class="hljs-keyword">close</span>()<br></code></pre></td></tr></table></figure><p>但每次这么写很麻烦，Python引入with语句自动帮我们调用close()方法，如下：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    print(f.<span class="hljs-built_in">read</span>())<br></code></pre></td></tr></table></figure><p>python文件对象提供了三个“读”方法： <code>read()</code>、<code>readline()</code> 和 <code>readlines()</code>。每种方法可以接受一个变量以限制每次读取的数据量。</p><ul><li>read() 每次读取整个文件，它通常用于将文件内容放到一个字符串变量中。如果文件大于可用内存，为了保险起见，可以反复调用read(size)方法，每次最多读取size个字节的内容。</li><li>readlines() 之间的差异是后者一次读取整个文件，象 .read() 一样。.readlines() 自动将文件内容分析成一个行的列表，该列表可以由 Python 的 for … in … 结构进行处理。</li><li>readline() 每次只读取一行，通常比readlines() 慢得多。仅当没有足够内存可以一次读取整个文件时，才应该使用 readline()。</li></ul><p><strong>注意：</strong> 这三种方法都会把每行末尾的 <code>\n</code> 也读入，因此需要手动去除 <code>\n</code> ，如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">with <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test1.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) as f1:<br>    list1 = f1<span class="hljs-selector-class">.readlines</span>()<br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(list1)):<br>    list1<span class="hljs-selector-attr">[i]</span> = list1<span class="hljs-selector-attr">[i]</span><span class="hljs-selector-class">.rstrip</span>(<span class="hljs-string">&#x27;\n&#x27;</span>)    #去除末尾的 \n<br></code></pre></td></tr></table></figure><h2 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h2><p>写文件也是用 <code>open()</code> 函数，不同的是传入标识符 <code>w</code> <code>wb</code> <code>a</code> <code>ab</code>， 如下：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-comment"># 若是&#x27;wb&#x27;就表示写二进制文件</span><br>f.<span class="hljs-built_in">write</span>(<span class="hljs-string">&#x27;Hello, world!&#x27;</span>)<br>f.<span class="hljs-built_in">close</span>()<br></code></pre></td></tr></table></figure><ul><li><code>w</code> 是指：如果没有这个文件，就新建一个；如果有，就把原文件清空再写入新内容。</li><li><code>a</code> 是指：如果没有这个文件，就新建一个；如果有，就接在原文件的后面写入新内容。</li></ul><p><strong>注意：</strong> 我们可以反复调用write()来写入文件，但是务必要调用f.close()来关闭文件。当我们写文件时，操作系统往往不会立刻把数据写入磁盘，而是放到内存缓存起来，空闲的时候再慢慢写入。只有调用close()方法时，操作系统才保证把没有写入的数据全部写入磁盘。忘记调用close()的后果是数据可能只写了一部分到磁盘，剩下的丢失了。所以，还是用with语句来得保险：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.<span class="hljs-built_in">write</span>(<span class="hljs-string">&#x27;Hello, world!&#x27;</span>)<br></code></pre></td></tr></table></figure><p>python文件对象提供了两个“写”方法： write() 和 writelines()。</p><ul><li>write()方法和read()、readline()方法对应，是将字符串写入到文件中。</li><li>writelines()方法和readlines()方法对应，也是针对列表的操作。它接收一个字符串列表作为参数，将他们写入到文件中，换行符不会自动的加入，因此，需要显式的加入换行符。<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">f1 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test1.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>f1.writelines([<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;3&quot;</span>])<br><span class="hljs-comment">#    此时test1.txt的内容为:123</span><br><br>f1 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test1.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>f1.writelines([<span class="hljs-string">&quot;1\n&quot;</span>, <span class="hljs-string">&quot;2\n&quot;</span>, <span class="hljs-string">&quot;3\n&quot;</span>])<br><span class="hljs-comment">#    此时test1.txt的内容为:</span><br><span class="hljs-comment">#    1</span><br><span class="hljs-comment">#    2        </span><br><span class="hljs-comment">#    3</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="关于open-的mode参数："><a href="#关于open-的mode参数：" class="headerlink" title="关于open()的mode参数："></a>关于open()的mode参数：</h4><ul><li><p>‘r’：读</p></li><li><p>‘w’：写</p></li><li><p>‘a’：追加</p></li><li><p>‘r+’ &#x3D;&#x3D; r+w（可读可写，文件若不存在就报错(IOError)）</p></li><li><p>‘w+’ &#x3D;&#x3D; w+r（可读可写，文件若不存在就创建）</p></li><li><p>‘a+’ &#x3D;&#x3D;a+r（可追加可写，文件若不存在就创建）</p></li></ul><p>对应的，如果是二进制文件，就都加一个b就好了：<br>‘rb’　　‘wb’　　‘ab’　　‘rb+’　　‘wb+’　　‘ab+’</p><h4 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h4><p>默认情况下是读取 <code>UTF-8</code> 编码的文本文件，如果要读取其他编码，需要给open()函数传入encoding参数，例如，读取GBK编码的文件：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">f</span> = open(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;gbk&#x27;</span>)<br></code></pre></td></tr></table></figure><p>遇到有些编码不规范的文件，你可能会遇到UnicodeDecodeError，因为在文本文件中可能夹杂了一些非法编码的字符。遇到这种情况，open()函数还接收一个errors参数，表示如果遇到编码错误后如何处理。最简单的方式是直接忽略：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">f = open(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-attribute">encoding</span>=<span class="hljs-string">&#x27;gbk&#x27;</span>, <span class="hljs-attribute">errors</span>=<span class="hljs-string">&#x27;ignore&#x27;</span>)<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python操作目录，如：获取当前工作目录，获取执行命令的位置，路径拼接，路径拆分，文件重命名，删除文件，复制文件</title>
    <link href="/Python%E6%93%8D%E4%BD%9C%E7%9B%AE%E5%BD%95%EF%BC%8C%E5%A6%82%EF%BC%9A%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95%EF%BC%8C%E8%8E%B7%E5%8F%96%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%8C%E8%B7%AF%E5%BE%84%E6%8B%BC%E6%8E%A5%EF%BC%8C%E8%B7%AF%E5%BE%84%E6%8B%86%E5%88%86%EF%BC%8C%E6%96%87%E4%BB%B6%E9%87%8D%E5%91%BD%E5%90%8D%EF%BC%8C%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%EF%BC%8C%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6/"/>
    <url>/Python%E6%93%8D%E4%BD%9C%E7%9B%AE%E5%BD%95%EF%BC%8C%E5%A6%82%EF%BC%9A%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95%EF%BC%8C%E8%8E%B7%E5%8F%96%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%8C%E8%B7%AF%E5%BE%84%E6%8B%BC%E6%8E%A5%EF%BC%8C%E8%B7%AF%E5%BE%84%E6%8B%86%E5%88%86%EF%BC%8C%E6%96%87%E4%BB%B6%E9%87%8D%E5%91%BD%E5%90%8D%EF%BC%8C%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%EF%BC%8C%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<ul><li>获取当前工作目录</li><li>获取执行命令的位置</li><li>路径拼接</li><li>路径拆分</li><li>文件重命名</li><li>删除文件</li><li>复制文件</li><li>遍历文件夹下的文件</li><li>判断文件是否存在</li><li>判断目录是否存在</li></ul><span id="more"></span><h2 id="获取当前工作目录"><a href="#获取当前工作目录" class="headerlink" title="获取当前工作目录"></a>获取当前工作目录</h2><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-built_in">print</span>(sys.path[<span class="hljs-number">0</span>])  <span class="hljs-comment"># 获取当前工作目录</span><br></code></pre></td></tr></table></figure><h2 id="获取当前脚本名"><a href="#获取当前脚本名" class="headerlink" title="获取当前脚本名"></a>获取当前脚本名</h2><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-built_in">print</span>(sys.argv[<span class="hljs-number">0</span>])  <span class="hljs-comment"># 当前脚本名</span><br></code></pre></td></tr></table></figure><h2 id="获取执行命令的位置"><a href="#获取执行命令的位置" class="headerlink" title="获取执行命令的位置"></a>获取执行命令的位置</h2><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs moonscript"><span class="hljs-keyword">import</span> <span class="hljs-built_in">os</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">os</span>.getcwd())  # 获取执行命令的位置<br></code></pre></td></tr></table></figure><h2 id="获取路径的目录"><a href="#获取路径的目录" class="headerlink" title="获取路径的目录"></a>获取路径的目录</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">os</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">os</span>.<span class="hljs-built_in">path</span>.dirname(<span class="hljs-built_in">path</span>))  # 去掉文件名，返回目录<br></code></pre></td></tr></table></figure><h2 id="路径拼接"><a href="#路径拼接" class="headerlink" title="路径拼接"></a>路径拼接</h2><p>由于不同的操作系统的路径分隔符不同，因此在做路径拼接时不要直接拼接字符串，而是通过 <code>os.path.join()</code> 函数，如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">import</span> os<br><br>os.path.<span class="hljs-keyword">join</span>(<span class="hljs-string">&#x27;/Users/pangao&#x27;</span>, <span class="hljs-string">&#x27;test.txt&#x27;</span>)<br><br># <span class="hljs-regexp">/Users/</span>pangao/test.txt<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="路径拼接分割符"><a href="#路径拼接分割符" class="headerlink" title="路径拼接分割符"></a>路径拼接分割符</h2><p>由于不同的操作系统的路径分隔符不同，而 <code>os.sep</code> 可以表示不同操作系统的路径分隔符。如下：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs moonscript"><span class="hljs-keyword">import</span> <span class="hljs-built_in">os</span><br><br><span class="hljs-string">&#x27;hello&#x27;</span> + <span class="hljs-built_in">os</span>.sep + <span class="hljs-string">&#x27;world&#x27;</span><br># <span class="hljs-keyword">or</span><br><span class="hljs-built_in">os</span>.sep.join(<span class="hljs-string">&#x27;hello&#x27;</span>, <span class="hljs-string">&#x27;world&#x27;</span>) <br><br># hello/world<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="路径拆分"><a href="#路径拆分" class="headerlink" title="路径拆分"></a>路径拆分</h2><p>同理，使用 <code>os.path.split()</code> 函数拆分路径，如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">os</span><br><br><span class="hljs-built_in">os</span>.<span class="hljs-built_in">path</span>.split(<span class="hljs-string">&#x27;/Users/pangao/test.txt&#x27;</span>)<br><br># (<span class="hljs-string">&#x27;/Users/pangao/&#x27;</span>, <span class="hljs-string">&#x27;test.txt&#x27;</span>)<br></code></pre></td></tr></table></figure><p><code>os.path.splitext()</code> 可以直接获取文件扩展名，很方便，如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">os</span><br><br><span class="hljs-built_in">os</span>.<span class="hljs-built_in">path</span>.splitext(<span class="hljs-string">&#x27;/Users/pangao/test.txt&#x27;</span>)<br><br># (<span class="hljs-string">&#x27;/Users/pangao/test&#x27;</span>, <span class="hljs-string">&#x27;.txt&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>这些合并、拆分路径的函数并不会检测目录和文件是否真实存在，他们仅仅是对字符串进行操作。</strong></p><h2 id="文件重命名"><a href="#文件重命名" class="headerlink" title="文件重命名"></a>文件重命名</h2><p>假定当前目录下有一个 <code>test.txt</code> 文件，如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">os</span><br><br><span class="hljs-built_in">os</span>.<span class="hljs-built_in">rename</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-string">&#x27;test.py&#x27;</span>)    #重命名<br></code></pre></td></tr></table></figure><h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><p>假定当前目录下有一个 <code>test.txt</code> 文件，如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">os</span><br><br><span class="hljs-built_in">os</span>.<span class="hljs-built_in">remove</span>(<span class="hljs-string">&#x27;test.txt&#x27;</span>)    #删除<br></code></pre></td></tr></table></figure><h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><p><code>os</code> 模块中没有复制函数，幸运的是shutil模块提供了copyfile()的函数，你还可以在shutil模块中找到很多实用函数，它们可以看做是os模块的补充，如下：</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sml">import shutil<br><br>shutil.copyfile(<span class="hljs-symbol">&#x27;test</span>.txt&#x27;, <span class="hljs-symbol">&#x27;test</span>.py&#x27;)<br></code></pre></td></tr></table></figure><h2 id="遍历文件夹下的文件"><a href="#遍历文件夹下的文件" class="headerlink" title="遍历文件夹下的文件"></a>遍历文件夹下的文件</h2><ul><li><p>方法1：<br>使用 <code>os.listdir</code> 获取当前目录下的文件和文件夹，如下：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs moonscript"><span class="hljs-keyword">import</span> <span class="hljs-built_in">os</span><br><br><span class="hljs-keyword">for</span> filename <span class="hljs-keyword">in</span> <span class="hljs-built_in">os</span>.listdir(<span class="hljs-string">&#x27;./&#x27;</span>):<br>    <span class="hljs-built_in">print</span>(filename)<br></code></pre></td></tr></table></figure></li><li><p>方法2：<br>使用 <code>glob</code> 模块，可以设置文件过滤，如下：</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tcl">import <span class="hljs-keyword">glob</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-keyword">filename</span> in <span class="hljs-keyword">glob</span>.<span class="hljs-keyword">glob</span>(&#x27;*.py&#x27;):<br>    print(<span class="hljs-keyword">filename</span>)<br></code></pre></td></tr></table></figure></li><li><p>方法3：<br>通过 <code>os.walk</code> ，可以访问子文件夹，如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">os</span><br><br><span class="hljs-keyword">for</span> fpathe, dirs, fs <span class="hljs-keyword">in</span> <span class="hljs-built_in">os</span>.walk(<span class="hljs-string">&#x27;./&#x27;</span>):<br>    <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> fs:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">os</span>.<span class="hljs-built_in">path</span>.join(fpathe, f))<br></code></pre></td></tr></table></figure></li></ul><h2 id="判断文件是否存在"><a href="#判断文件是否存在" class="headerlink" title="判断文件是否存在"></a>判断文件是否存在</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-keyword">import</span> os<br><br>os.path.isfile(<span class="hljs-string">&#x27;test.txt&#x27;</span>) # 如果不存在就返回<span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><h2 id="判断目录是否存在"><a href="#判断目录是否存在" class="headerlink" title="判断目录是否存在"></a>判断目录是否存在</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> os<br><br>os.path.<span class="hljs-keyword">exists</span>(directory) #如果目录不存在就返回<span class="hljs-keyword">False</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python中用OpenPyXL处理Excel表格</title>
    <link href="/Python%E4%B8%AD%E7%94%A8OpenPyXL%E5%A4%84%E7%90%86Excel%E8%A1%A8%E6%A0%BC/"/>
    <url>/Python%E4%B8%AD%E7%94%A8OpenPyXL%E5%A4%84%E7%90%86Excel%E8%A1%A8%E6%A0%BC/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>用 <code>Python</code> 处理 Excel 表格的几个常规库：</p><ul><li><a href="http://xlrd.readthedocs.io/en/latest/">xlrd</a> 用来读</li><li><a href="http://xlwt.readthedocs.io/en/latest/">xlwt</a> 用来写</li><li><a href="http://xlutils.readthedocs.io/en/latest/">xlutils</a> 用于做复制、筛选等针对文档文件的操作</li></ul><p>这些库都不如 <a href="https://openpyxl.readthedocs.io/en/stable/">OpenPyXL</a> 强大，<code>OpenPyXL</code> 即可以读也可以写 <code>Excel 2010+</code> 的 <code>xlsx</code> <code>xlsm</code> <code>xltx</code> <code>xltm</code> 文件。不过， <code>OpenPyXL</code> 库也是比较吃内存的，大约是原始文件的 50 倍左右。例如，一个 50M 大小的 Excel 文件，需要 2.5G 大小的内存运行。关于以上几个库的性能比对，请移步 <a href="https://openpyxl.readthedocs.io/en/stable/performance.html">OpenPyXL 性能测试</a>。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在终端中输入命令，如下：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> openpyxl<br></code></pre></td></tr></table></figure><p><code>openpyxl</code> 在保存 Excel 表格时候会丢失原文件的图片和图表。如果要操作图片，则需要 <code>pillow</code> 库，安装如下：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> pillow<br></code></pre></td></tr></table></figure><p>由于最近军运会要在天朝举行，因此必须翻-墙才能安装。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="新建-Excel-表格"><a href="#新建-Excel-表格" class="headerlink" title="新建 Excel 表格"></a>新建 Excel 表格</h3><p>新建 Excel 表格，默认有一个名为 <code>Sheet</code> 的表格，如下：</p><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs capnproto"><span class="hljs-keyword">from</span> openpyxl <span class="hljs-keyword">import</span> Workbook<br><br>wb = Workbook() <span class="hljs-comment">#创建文件对象</span><br>ws = wb.active  <span class="hljs-comment">#获取默认sheet</span><br><br>wb.save(<span class="hljs-string">&quot;sample.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="打开已有的-Excel-表格"><a href="#打开已有的-Excel-表格" class="headerlink" title="打开已有的 Excel 表格"></a>打开已有的 Excel 表格</h3><p>对已有的 Excel 表格进行操作，如下：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-keyword">from</span> openpyxl <span class="hljs-keyword">import</span> Workbook, load_workbook<br><br>wb = load_workbook(<span class="hljs-string">&#x27;sample.xlsx&#x27;</span>)<br><br>wb.save(<span class="hljs-string">&quot;sample.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="新建-x2F-获取-Sheet-表格"><a href="#新建-x2F-获取-Sheet-表格" class="headerlink" title="新建&#x2F;获取 Sheet 表格"></a>新建&#x2F;获取 Sheet 表格</h3><p>使用 <code>Workbook.create_sheet()</code> 方法新建 Sheet 表格。第一个参数是 sheet 名称，若不填，则默认以 <code>Sheet1</code> <code>Sheet2</code> <code>Sheet3</code> …方式命名；第二个参数是插入 Sheet 表格的位置，以 <code>0</code> 为第一个位置，若不填，则置于最后。如下：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs makefile">ws1 = wb.create_sheet(<span class="hljs-string">&quot;Mysheet&quot;</span>) <span class="hljs-comment">#默认在最后插入</span><br><br>ws2 = wb.create_sheet(<span class="hljs-string">&quot;Mysheet&quot;</span>, 0) <span class="hljs-comment">#在第一个位置插入</span><br><br>wb.remove(ws1) <span class="hljs-comment">#删除sheet</span><br></code></pre></td></tr></table></figure><p>也可以后期随时修改 sheet 的名字，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">ws.title</span> = <span class="hljs-string">&quot;New Title&quot;</span><br></code></pre></td></tr></table></figure><p>修改 sheet 标签颜色，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">ws.sheet_properties.tabColor</span> = <span class="hljs-string">&quot;1072BA&quot;</span><br></code></pre></td></tr></table></figure><p>若知道 sheet 的名字，可以用如下方式获取 sheet ：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">ws</span> <span class="hljs-operator">=</span> wb.get_sheet_by_name(<span class="hljs-string">&quot;New Title&quot;</span>)<br><br><br><span class="hljs-attribute">ws</span> <span class="hljs-operator">=</span> wb[<span class="hljs-string">&quot;New Title&quot;</span>]<br></code></pre></td></tr></table></figure><p>也可获取全部 sheet 的名字，遍历 sheet 名字，如下：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sheets </span>= wb.<span class="hljs-keyword">sheetnames</span><br><span class="hljs-keyword"></span>for <span class="hljs-keyword">sheet </span>in <span class="hljs-keyword">sheets:</span><br><span class="hljs-keyword"></span>   print(<span class="hljs-keyword">sheets)</span><br><span class="hljs-keyword"></span><br><br>for <span class="hljs-keyword">sheet </span>in wb:<br>   print <span class="hljs-keyword">sheet.title</span><br><span class="hljs-keyword"></span><br><br>[<span class="hljs-string">&#x27;Sheet1&#x27;</span>, <span class="hljs-string">&#x27;New Title&#x27;</span>, <span class="hljs-string">&#x27;Sheet2&#x27;</span>]<br></code></pre></td></tr></table></figure><p>也可以定位到相应 sheet 页,[0]为 sheet 页索引，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">sheet_names</span> = wb.sheetnames  <span class="hljs-comment"># 获取所有sheet页名字</span><br><span class="hljs-attr">ws</span> = wb[sheet_names[<span class="hljs-number">0</span>]]<br></code></pre></td></tr></table></figure><h3 id="复制-Sheet-表格"><a href="#复制-Sheet-表格" class="headerlink" title="复制 Sheet 表格"></a>复制 Sheet 表格</h3><p>仅能复制 <code>单元格的值</code> <code>样式</code> <code>超链接</code> <code>注释块</code> 等，而 <code>图片</code> 和 <code>表格</code> 等是无法复制的，如下：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">source</span> <span class="hljs-operator">=</span> wb.active<br><span class="hljs-attribute">target</span> <span class="hljs-operator">=</span> wb.copy_worksheet(source)<br></code></pre></td></tr></table></figure><h3 id="操作单元格"><a href="#操作单元格" class="headerlink" title="操作单元格"></a>操作单元格</h3><p>由 <code>worksheet</code> 获取单元格，或直接给单元格赋值，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cell</span> = ws[&#x27;A4&#x27;] #获取第<span class="hljs-number">4</span>行第A列的单元格<br><br><span class="hljs-attribute">ws</span>[&#x27;A4&#x27;] = <span class="hljs-number">4</span> #给第<span class="hljs-number">4</span>行第A列的单元格赋值为<span class="hljs-number">4</span><br><br><span class="hljs-attribute">ws</span>.cell(row=<span class="hljs-number">4</span>, column=<span class="hljs-number">2</span>, value=<span class="hljs-number">10</span>) #给第<span class="hljs-number">4</span>行第<span class="hljs-number">2</span>列的单元格赋值为<span class="hljs-number">10</span><br><span class="hljs-attribute">ws</span>.cell(<span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>) #同上<br></code></pre></td></tr></table></figure><p>获取区域内的单元格，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">cell_range</span> = ws[<span class="hljs-string">&#x27;A1&#x27;</span>:<span class="hljs-string">&#x27;C2&#x27;</span>]  <span class="hljs-comment">#获取A1-C2内的区域</span><br><br><span class="hljs-attr">colC</span> = ws[<span class="hljs-string">&#x27;C&#x27;</span>]  <span class="hljs-comment">#获取第C列</span><br><span class="hljs-attr">col_range</span> = ws[<span class="hljs-string">&#x27;C:D&#x27;</span>]  <span class="hljs-comment">#获取第C-D列</span><br><span class="hljs-attr">row10</span> = ws[<span class="hljs-number">10</span>]  <span class="hljs-comment">#获取第10列</span><br><span class="hljs-attr">row_range</span> = ws[<span class="hljs-number">5</span>:<span class="hljs-number">10</span>]  <span class="hljs-comment">#获取第5-10列</span><br></code></pre></td></tr></table></figure><p>如果得到单元格，可以赋值，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">cell.value = <span class="hljs-string">&#x27;hello, world&#x27;</span><br>或<br>cell = ws.cell(<span class="hljs-attribute">row</span>=i, <span class="hljs-attribute">column</span>=j, <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;金额&quot;</span>)<br></code></pre></td></tr></table></figure><p>获取单元格的值，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">cellValue = ws.cell(<span class="hljs-attribute">row</span>=i, <span class="hljs-attribute">column</span>=j).value<br></code></pre></td></tr></table></figure><p>获取行列数，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">row</span> = ws.max_row <span class="hljs-comment">#最大行数</span><br><span class="hljs-attr">column</span> = ws.max_column <span class="hljs-comment">#最大列数</span><br></code></pre></td></tr></table></figure><p>一行行的获取数据，如下：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs excel">&gt;&gt;&gt; for <span class="hljs-built_in">row</span> in ws.iter_rows(min_row=<span class="hljs-number">1</span>, max_col=<span class="hljs-number">3</span>, max_row=<span class="hljs-number">2</span>)<span class="hljs-symbol">:</span><br>...    for <span class="hljs-built_in">cell</span> in r<span class="hljs-symbol">ow:</span><br>...        print(<span class="hljs-built_in">cell</span>)<br><br>&lt;<span class="hljs-built_in">Cell</span> Sheet1.<span class="hljs-symbol">A1</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> Sheet1.<span class="hljs-symbol">B1</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> Sheet1.<span class="hljs-symbol">C1</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> Sheet1.<span class="hljs-symbol">A2</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> Sheet1.<span class="hljs-symbol">B2</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> Sheet1.<span class="hljs-symbol">C2</span>&gt;<br></code></pre></td></tr></table></figure><p>一列列的获取数据，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&gt;&gt;&gt; <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> ws.iter_cols(<span class="hljs-attribute">min_row</span>=1, <span class="hljs-attribute">max_col</span>=3, <span class="hljs-attribute">max_row</span>=2):<br><span class="hljs-built_in">..</span>.     <span class="hljs-keyword">for</span> cell <span class="hljs-keyword">in</span> col:<br><span class="hljs-built_in">..</span>.         <span class="hljs-built_in">print</span>(cell)<br>&lt;Cell Sheet1.A1&gt;<br>&lt;Cell Sheet1.A2&gt;<br>&lt;Cell Sheet1.B1&gt;<br>&lt;Cell Sheet1.B2&gt;<br>&lt;Cell Sheet1.C1&gt;<br>&lt;Cell Sheet1.C2&gt;<br></code></pre></td></tr></table></figure><p>因为性能的原因， <code>Worksheet.iter_cols()</code> 方法不能在只读模式下使用。</p><p>获取所有的列或行，如下：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">rows</span> <span class="hljs-operator">=</span> ws.rows<br><br><span class="hljs-attribute">columns</span> <span class="hljs-operator">=</span> ws.columns<br></code></pre></td></tr></table></figure><p>因为性能的原因， <code>Worksheet.columns</code> 方法不能在只读模式下使用。</p><p>如果只想从 worksheet 中获取值，可以使用 <code>Worksheet.values</code> 属性，如下：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-keyword">for</span> <span class="hljs-built_in">row</span> <span class="hljs-keyword">in</span> ws.<span class="hljs-built_in">values</span>:<br>   <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-built_in">row</span>:<br>     <span class="hljs-built_in">print</span>(value)<br></code></pre></td></tr></table></figure><p><code>Worksheet.iter_rows()</code> 和 <code>Worksheet.iter_cols()</code> 方法都可以添加 <code>values_only</code> 参数来达到仅获取值的目的，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> ws.iter_rows(<span class="hljs-attribute">min_row</span>=1, <span class="hljs-attribute">max_col</span>=3, <span class="hljs-attribute">max_row</span>=2, <span class="hljs-attribute">values_only</span>=<span class="hljs-literal">True</span>):<br>    <span class="hljs-built_in">print</span>(row)<br></code></pre></td></tr></table></figure><h3 id="保存文件"><a href="#保存文件" class="headerlink" title="保存文件"></a>保存文件</h3><p>使用 <code>Workbook.save()</code> 方法保存 workbook，这个方法会不加提示的覆盖原文件，如下：</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">wb</span> = <span class="hljs-function"><span class="hljs-title">Workbook</span>()</span><br><span class="hljs-variable">wb.save</span>(<span class="hljs-string">&#x27;balances.xlsx&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="获取单元格类型"><a href="#获取单元格类型" class="headerlink" title="获取单元格类型"></a>获取单元格类型</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> openpyxl import Workbook, load_workbook<br>import datetime<br><br>wb = load_workbook(<span class="hljs-string">&#x27;sample.xlsx&#x27;</span>)<br><br><span class="hljs-attribute">ws</span>=wb.active<br>wb.guess_types = <span class="hljs-literal">True</span>   #开启获取单元格类型<br><br>ws[<span class="hljs-string">&quot;A1&quot;</span>]=datetime.datetime(2010, 7, 21)<br><span class="hljs-built_in">print</span> ws[<span class="hljs-string">&quot;A1&quot;</span>].number_format<br><br>ws[<span class="hljs-string">&quot;A2&quot;</span>]=<span class="hljs-string">&quot;12%&quot;</span><br><span class="hljs-built_in">print</span> ws[<span class="hljs-string">&quot;A2&quot;</span>].number_format<br><br>ws[<span class="hljs-string">&quot;A3&quot;</span>]= 1.1<br><span class="hljs-built_in">print</span> ws[<span class="hljs-string">&quot;A4&quot;</span>].number_format<br><br>ws[<span class="hljs-string">&quot;A4&quot;</span>]= <span class="hljs-string">&quot;中国&quot;</span><br><span class="hljs-built_in">print</span> ws[<span class="hljs-string">&quot;A5&quot;</span>].number_format<br><br>wb.save(<span class="hljs-string">&quot;sample.xlsx&quot;</span>)<br><br><span class="hljs-comment"># 执行结果：</span><br><span class="hljs-comment"># yyyy-mm-dd h:mm:ss</span><br><span class="hljs-comment"># 0%</span><br><span class="hljs-comment"># General</span><br><span class="hljs-comment"># General</span><br><span class="hljs-comment"># 如果是常规，显示general,如果是数字，显示&#x27;0.00_ &#x27;，如果是百分数显示0%</span><br><span class="hljs-comment"># 数字需要在Excel中设置数字类型，直接写入的数字是常规类型</span><br></code></pre></td></tr></table></figure><h3 id="使用公式"><a href="#使用公式" class="headerlink" title="使用公式"></a>使用公式</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs stylus">from openpyxl import Workbook, load_workbook<br><br>wb = <span class="hljs-built_in">load_workbook</span>(<span class="hljs-string">&#x27;sample.xlsx&#x27;</span>)<br>ws1=wb<span class="hljs-selector-class">.active</span><br><br>ws1<span class="hljs-selector-attr">[<span class="hljs-string">&quot;A1&quot;</span>]</span>=<span class="hljs-number">1</span><br>ws1<span class="hljs-selector-attr">[<span class="hljs-string">&quot;A2&quot;</span>]</span>=<span class="hljs-number">2</span><br>ws1<span class="hljs-selector-attr">[<span class="hljs-string">&quot;A3&quot;</span>]</span>=<span class="hljs-number">3</span><br><br>ws1<span class="hljs-selector-attr">[<span class="hljs-string">&quot;A4&quot;</span>]</span> = <span class="hljs-string">&quot;=SUM(1, 1)&quot;</span><br>ws1<span class="hljs-selector-attr">[<span class="hljs-string">&quot;A5&quot;</span>]</span> = <span class="hljs-string">&quot;=SUM(A1:A3)&quot;</span><br><br>print ws1<span class="hljs-selector-attr">[<span class="hljs-string">&quot;A4&quot;</span>]</span><span class="hljs-selector-class">.value</span>  #打印的是公式内容，不是公式计算后的值,程序无法取到计算后的值<br>print ws1<span class="hljs-selector-attr">[<span class="hljs-string">&quot;A5&quot;</span>]</span><span class="hljs-selector-class">.value</span>  #打印的是公式内容，不是公式计算后的值,程序无法取到计算后的值<br><br>wb<span class="hljs-selector-class">.save</span>(<span class="hljs-string">&quot;sample.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">from openpyxl import Workbook, load_workbook<br><br>wb = load<span class="hljs-constructor">_workbook(&#x27;<span class="hljs-params">sample</span>.<span class="hljs-params">xlsx</span>&#x27;)</span><br>ws1=wb.active<br><br>ws.merge<span class="hljs-constructor">_cells(&#x27;A2:D2&#x27;)</span><br>ws.unmerge<span class="hljs-constructor">_cells(&#x27;A2:D2&#x27;)</span>  #合并后的单元格，脚本单独执行拆分操作会报错，需要重新执行合并操作再拆分<br><br># <span class="hljs-keyword">or</span> equivalently<br>ws.merge<span class="hljs-constructor">_cells(<span class="hljs-params">start_row</span>=2,<span class="hljs-params">start_column</span>=1,<span class="hljs-params">end_row</span>=2,<span class="hljs-params">end_column</span>=4)</span><br>ws.unmerge<span class="hljs-constructor">_cells(<span class="hljs-params">start_row</span>=2,<span class="hljs-params">start_column</span>=1,<span class="hljs-params">end_row</span>=2,<span class="hljs-params">end_column</span>=4)</span><br><br>wb.save(<span class="hljs-string">&quot;sample.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="插入一个图片"><a href="#插入一个图片" class="headerlink" title="插入一个图片"></a>插入一个图片</h3><p>需要 <code>pillow</code> 库，安装如下：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> pillow<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus">from openpyxl import load_workbook<br>from openpyxl<span class="hljs-selector-class">.drawing</span><span class="hljs-selector-class">.image</span> import Image<br><br>wb = <span class="hljs-built_in">load_workbook</span>(<span class="hljs-string">&#x27;sample.xlsx&#x27;</span>)<br>ws1=wb<span class="hljs-selector-class">.active</span><br><br><span class="hljs-selector-tag">img</span> = <span class="hljs-built_in">Image</span>(<span class="hljs-string">&#x27;1.png&#x27;</span>)<br>ws1<span class="hljs-selector-class">.add_image</span>(<span class="hljs-selector-tag">img</span>, <span class="hljs-string">&#x27;A1&#x27;</span>)<br><br>wb<span class="hljs-selector-class">.save</span>(<span class="hljs-string">&quot;sample.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="隐藏单元格"><a href="#隐藏单元格" class="headerlink" title="隐藏单元格"></a>隐藏单元格</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-keyword">from</span> openpyxl <span class="hljs-keyword">import</span> load_workbook<br><br>wb = load_workbook(<span class="hljs-string">&#x27;sample.xlsx&#x27;</span>)<br>ws = wb.active<br><br>ws.column_dimensions.group(<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>, hidden=<span class="hljs-literal">True</span>)    # 隐藏A到D列<br><br>ws.row_dimensions.group(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>, hidden=<span class="hljs-literal">True</span>)    # 隐藏<span class="hljs-number">1</span>到<span class="hljs-number">10</span>行<br><br>ws.row_dimensions[<span class="hljs-number">2</span>].hidden # 获取第二行是否隐藏了<br><br>wb.save(<span class="hljs-string">&quot;sample.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="优化模式"><a href="#优化模式" class="headerlink" title="优化模式"></a>优化模式</h3><p>在处理非常大的 <code>XLSX</code> 文件时，<code>openpyxl</code> 的常规模式无法处理这种负载。幸运的是，有两种模式可以在(几乎)恒定内存消耗的情况下读写无限量的数据。</p><h4 id="只读模式"><a href="#只读模式" class="headerlink" title="只读模式"></a>只读模式</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> openpyxl import load_workbook<br>wb = load_workbook(<span class="hljs-attribute">filename</span>=<span class="hljs-string">&#x27;large_file.xlsx&#x27;</span>, <span class="hljs-attribute">read_only</span>=<span class="hljs-literal">True</span>)<br>ws = wb[<span class="hljs-string">&#x27;big_data&#x27;</span>]<br><br><span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> ws.rows:<br>    <span class="hljs-keyword">for</span> cell <span class="hljs-keyword">in</span> row:<br>        <span class="hljs-built_in">print</span>(cell.value)<br></code></pre></td></tr></table></figure><h4 id="只写模式"><a href="#只写模式" class="headerlink" title="只写模式"></a>只写模式</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> openpyxl <span class="hljs-keyword">import</span> Workbook<br>wb = Workbook(write_only=<span class="hljs-keyword">True</span>)<br>ws = wb.create_sheet()<br><br># now w<span class="hljs-string">e&#x27;ll fill it with 100 rows x 200 columns</span><br><span class="hljs-string"></span><br><span class="hljs-string">for irow in range(100):</span><br><span class="hljs-string">...  ws.append([&#x27;</span>%d<span class="hljs-string">&#x27; % i for i in range(200)])</span><br><span class="hljs-string"># save the file</span><br><span class="hljs-string">wb.save(&#x27;</span>new_big_file.xlsx<span class="hljs-string">&#x27;) # doctest: +SKIP</span><br></code></pre></td></tr></table></figure><ul><li>与普通工作簿不同，新创建的只写工作簿不包含任何工作表；必须使用 <code>create_sheet()</code> 方法专门创建工作表。</li><li>在只写的工作簿中，只能使用 <code>append()</code> 添加行。使用 <code>cell()</code> 或 <code>iter_rows()</code> 在任意位置写(或读)单元格是不可能的。</li><li>它能够导出无限数量的数据(甚至比 Excel 实际能够处理的更多)，同时将内存使用量保持在 10Mb 以下。</li></ul><h3 id="插入-x2F-删除行-x2F-列，移动区域单元格"><a href="#插入-x2F-删除行-x2F-列，移动区域单元格" class="headerlink" title="插入&#x2F;删除行&#x2F;列，移动区域单元格"></a>插入&#x2F;删除行&#x2F;列，移动区域单元格</h3><h4 id="插入行-x2F-列"><a href="#插入行-x2F-列" class="headerlink" title="插入行&#x2F;列"></a>插入行&#x2F;列</h4><p>在第 7 行之上插入一行，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ws</span>.insert_rows(<span class="hljs-number">7</span>)<br></code></pre></td></tr></table></figure><p>在第 7 列的左边插入一列，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ws</span>.insert_cols(<span class="hljs-number">7</span>)<br></code></pre></td></tr></table></figure><h4 id="删除行-x2F-列"><a href="#删除行-x2F-列" class="headerlink" title="删除行&#x2F;列"></a>删除行&#x2F;列</h4><p>从第 6 列开始，删除 3 列，即删除 6、7、8 列，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ws</span>.delete_cols(<span class="hljs-number">6</span>, <span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><h4 id="移动区域单元格"><a href="#移动区域单元格" class="headerlink" title="移动区域单元格"></a>移动区域单元格</h4><p>将 <code>D4:F10</code> 区域向上移动一行向右移动 2 列，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ws.move_range(<span class="hljs-string">&quot;D4:F10&quot;</span>, <span class="hljs-attribute">rows</span>=-1, <span class="hljs-attribute">cols</span>=2)<br></code></pre></td></tr></table></figure><p>如果区域内包含 <code>公式</code> ，则如下方法可以连同公式一起挪动：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ws.move_range(<span class="hljs-string">&quot;G4:H10&quot;</span>, <span class="hljs-attribute">rows</span>=1, <span class="hljs-attribute">cols</span>=1, <span class="hljs-attribute">translate</span>=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><h3 id="使用-Pandas-和-NumPy"><a href="#使用-Pandas-和-NumPy" class="headerlink" title="使用 Pandas 和 NumPy"></a>使用 Pandas 和 NumPy</h3><p>详情请移步 <a href="https://openpyxl.readthedocs.io/en/stable/pandas.html">Working with Pandas and NumPy</a></p><h3 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h3><p>图表由至少一个系列的一个或多个单元格区域数据点组成。更多内容请移步 <a href="https://openpyxl.readthedocs.io/en/stable/charts/introduction.html">图表介绍</a></p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p><code>openpyxl</code> 可读&#x2F;写注释，但格式信息会被丢失。在 <code>只读模式</code> 下不支持操作注释。注释必须包括 <code>内容</code> 和 <code>作者</code> 。</p><p>读注释，如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">comment</span> = ws[&quot;A1&quot;].<span class="hljs-keyword">comment</span><br><span class="hljs-keyword">comment</span>.text # 注释内容<br><span class="hljs-keyword">comment</span>.author # 注释作者<br></code></pre></td></tr></table></figure><p>写注释，如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">comment</span> = <span class="hljs-keyword">Comment</span>(&quot;Text&quot;, &quot;Author&quot;)<br><span class="hljs-keyword">comment</span>.width = <span class="hljs-number">300</span> # 设置宽度<br><span class="hljs-keyword">comment</span>.height = <span class="hljs-number">50</span> # 设置高度<br>ws[&quot;A1&quot;].<span class="hljs-keyword">comment</span> = <span class="hljs-keyword">comment</span><br>ws[&quot;B2&quot;].<span class="hljs-keyword">comment</span> = <span class="hljs-keyword">comment</span><br></code></pre></td></tr></table></figure><h3 id="表格样式"><a href="#表格样式" class="headerlink" title="表格样式"></a>表格样式</h3><h4 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h4><p>字体名称、字体大小、字体颜色、加粗、斜体、纵向对齐方式（有三种：<code>baseline</code>，<code>superscript</code>， <code>subscript</code>）、下划线、删除线，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> openpyxl.styles import Font<br><br>font = Font(<span class="hljs-attribute">name</span>=<span class="hljs-string">&#x27;Calibri&#x27;</span>,<br>            <span class="hljs-attribute">size</span>=11,<br>            <span class="hljs-attribute">color</span>=<span class="hljs-string">&#x27;FF000000&#x27;</span>,<br>            <span class="hljs-attribute">bold</span>=<span class="hljs-literal">False</span>,<br>            <span class="hljs-attribute">italic</span>=<span class="hljs-literal">False</span>,<br>            <span class="hljs-attribute">vertAlign</span>=None,<br>            <span class="hljs-attribute">underline</span>=<span class="hljs-string">&#x27;none&#x27;</span>,<br>            <span class="hljs-attribute">strike</span>=<span class="hljs-literal">False</span>)<br><br>ws[<span class="hljs-string">&#x27;A1&#x27;</span>].font = font<br><br>cell2.font = Font(<span class="hljs-attribute">name</span>=cell1.font.name, <span class="hljs-attribute">sz</span>=cell1.font.sz, <span class="hljs-attribute">b</span>=cell1.font.b, <span class="hljs-attribute">i</span>=cell1.font.i)<br></code></pre></td></tr></table></figure><p>字体颜色可以用 <code>RGB</code> 或 <code>aRGB</code> ，如下：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">font</span> <span class="hljs-operator">=</span> Font(color<span class="hljs-operator">=</span><span class="hljs-string">&quot;FFBB00&quot;</span>)<br><br><span class="hljs-attribute">font</span> <span class="hljs-operator">=</span> Font(color<span class="hljs-operator">=</span><span class="hljs-string">&quot;FFFFBB00&quot;</span>)<br></code></pre></td></tr></table></figure><p>继承并重写样式，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">ft1</span> = Font(name=<span class="hljs-string">&#x27;Arial&#x27;</span>, size=<span class="hljs-number">14</span>)<br><span class="hljs-attr">ft2</span> = copy(ft1)<br><span class="hljs-attr">ft2.name</span> = <span class="hljs-string">&quot;Tahoma&quot;</span><br></code></pre></td></tr></table></figure><h4 id="填充样式"><a href="#填充样式" class="headerlink" title="填充样式"></a>填充样式</h4><p>详情请移步 <a href="https://openpyxl.readthedocs.io/en/stable/api/openpyxl.styles.fills.html">填充样式</a></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">from openpyxl.styles import PatternFill<br><br># fill_type 的样式为 None 或 solid<br>cell2.fill = <span class="hljs-constructor">PatternFill(<span class="hljs-params">fill_type</span>=<span class="hljs-params">cell1</span>.<span class="hljs-params">fill</span>.<span class="hljs-params">fill_type</span>, <span class="hljs-params">fgColor</span>=<span class="hljs-params">cell1</span>.<span class="hljs-params">fill</span>.<span class="hljs-params">fgColor</span>)</span><br></code></pre></td></tr></table></figure><h4 id="边框样式"><a href="#边框样式" class="headerlink" title="边框样式"></a>边框样式</h4><p>详情请移步 <a href="https://openpyxl.readthedocs.io/en/stable/api/openpyxl.styles.borders.html">边框样式</a></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> openpyxl.styles import Border, Side<br><br>border = Border(<span class="hljs-attribute">left</span>=Side(border_style=None, <span class="hljs-attribute">color</span>=<span class="hljs-string">&#x27;FF000000&#x27;</span>),<br>                <span class="hljs-attribute">right</span>=Side(border_style=None, <span class="hljs-attribute">color</span>=<span class="hljs-string">&#x27;FF000000&#x27;</span>),<br>                <span class="hljs-attribute">top</span>=Side(border_style=None, <span class="hljs-attribute">color</span>=<span class="hljs-string">&#x27;FF000000&#x27;</span>),<br>                <span class="hljs-attribute">bottom</span>=Side(border_style=None, <span class="hljs-attribute">color</span>=<span class="hljs-string">&#x27;FF000000&#x27;</span>),<br>                <span class="hljs-attribute">diagonal</span>=Side(border_style=None, <span class="hljs-attribute">color</span>=<span class="hljs-string">&#x27;FF000000&#x27;</span>),<br>                <span class="hljs-attribute">diagonal_direction</span>=0,<br>                <span class="hljs-attribute">outline</span>=Side(border_style=None, <span class="hljs-attribute">color</span>=<span class="hljs-string">&#x27;FF000000&#x27;</span>),<br>                <span class="hljs-attribute">vertical</span>=Side(border_style=None, <span class="hljs-attribute">color</span>=<span class="hljs-string">&#x27;FF000000&#x27;</span>),<br>                <span class="hljs-attribute">horizontal</span>=Side(border_style=None, <span class="hljs-attribute">color</span>=<span class="hljs-string">&#x27;FF000000&#x27;</span>)<br>)<br></code></pre></td></tr></table></figure><h4 id="对齐样式"><a href="#对齐样式" class="headerlink" title="对齐样式"></a>对齐样式</h4><p>horizontal 的值有：<code>distributed</code>, <code>justify</code>, <code>center</code>, <code>left</code>, <code>fill</code>, <code>centerContinuous</code>, <code>right</code>, <code>general</code><br>vertical 的值有：<code>bottom</code>, <code>distributed</code>, <code>justify</code>, <code>center</code>, <code>top</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> openpyxl.styles import Alignment<br><br><span class="hljs-attribute">alignment</span>=Alignment(horizontal=&#x27;general&#x27;,<br>                    <span class="hljs-attribute">vertical</span>=<span class="hljs-string">&#x27;bottom&#x27;</span>,<br>                    <span class="hljs-attribute">text_rotation</span>=0,<br>                    <span class="hljs-attribute">wrap_text</span>=<span class="hljs-literal">False</span>,<br>                    <span class="hljs-attribute">shrink_to_fit</span>=<span class="hljs-literal">False</span>,<br>                    <span class="hljs-attribute">indent</span>=0)<br></code></pre></td></tr></table></figure><h4 id="保护样式"><a href="#保护样式" class="headerlink" title="保护样式"></a>保护样式</h4><p>锁定、隐藏</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> openpyxl.styles import Protection<br><br>protection = Protection(<span class="hljs-attribute">locked</span>=<span class="hljs-literal">True</span>, <span class="hljs-attribute">hidden</span>=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><h4 id="整行或整列应用样式"><a href="#整行或整列应用样式" class="headerlink" title="整行或整列应用样式"></a>整行或整列应用样式</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">col</span> = ws.column_dimensions[<span class="hljs-string">&#x27;A&#x27;</span>]<br><span class="hljs-attr">col.font</span> = Font(bold=<span class="hljs-literal">True</span>)<br><span class="hljs-attr">row</span> = ws.row_dimensions[<span class="hljs-number">1</span>]<br><span class="hljs-attr">row.font</span> = Font(underline=<span class="hljs-string">&quot;single&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="更改合并的单元格样式"><a href="#更改合并的单元格样式" class="headerlink" title="更改合并的单元格样式"></a>更改合并的单元格样式</h4><p>合并的单元格可以想想成为左上角的那个单元格来操作。</p><h3 id="筛选和排序"><a href="#筛选和排序" class="headerlink" title="筛选和排序"></a>筛选和排序</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs prolog">from openpyxl import <span class="hljs-symbol">Workbook</span><br><br>wb = <span class="hljs-symbol">Workbook</span>()<br>ws = wb.active<br><br>data = [<br>    [<span class="hljs-string">&quot;Fruit&quot;</span>, <span class="hljs-string">&quot;Quantity&quot;</span>],<br>    [<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Grape&quot;</span>, <span class="hljs-number">15</span>],<br>    [<span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Peach&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Pomegranate&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Pear&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Tangerine&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Blueberry&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Mango&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Watermelon&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Blackberry&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Orange&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Raspberry&quot;</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-string">&quot;Banana&quot;</span>, <span class="hljs-number">3</span>]<br>]<br><br>for r in data:<br>    ws.append(r)<br><br>ws.auto_filter.ref = <span class="hljs-string">&quot;A1:B15&quot;</span><br>ws.auto_filter.add_filter_column(<span class="hljs-number">0</span>, [<span class="hljs-string">&quot;Kiwi&quot;</span>, <span class="hljs-string">&quot;Apple&quot;</span>, <span class="hljs-string">&quot;Mango&quot;</span>])<br>ws.auto_filter.add_sort_condition(<span class="hljs-string">&quot;B2:B15&quot;</span>)<br><br>wb.save(<span class="hljs-string">&quot;filtered.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><p>生成的 Excel 表格，有筛选排序的操作，但是没有实际表现出效果，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E4%B8%AD%E7%94%A8OpenPyXL%E5%A4%84%E7%90%86Excel%E8%A1%A8%E6%A0%BC-1.png" alt="image"></p><p>需要手动点击 <code>重写应用</code> 才能显示出效果，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/Python%E4%B8%AD%E7%94%A8OpenPyXL%E5%A4%84%E7%90%86Excel%E8%A1%A8%E6%A0%BC-2.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/Python%E4%B8%AD%E7%94%A8OpenPyXL%E5%A4%84%E7%90%86Excel%E8%A1%A8%E6%A0%BC-3.png" alt="image"></p><h3 id="密码保护"><a href="#密码保护" class="headerlink" title="密码保护"></a>密码保护</h3><p>该功能仅能提供一个很基础的密码保护，没有进行加密处理，网上普通的破解软件都可以破解密码。不过，日常使用还是可以的。</p><p>该功能仅可用于新建 excel 表格，不能用于已存在的 excel 表格。</p><h4 id="workbook-工作薄保护"><a href="#workbook-工作薄保护" class="headerlink" title="workbook 工作薄保护"></a>workbook 工作薄保护</h4><p>防止查看隐藏 sheet，避免增加、移动、删除、隐藏或重命名 sheet 等操作，可以保护 workbook 的结构，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">wb.security.workbookPassword</span> = <span class="hljs-string">&#x27;...&#x27;</span><br><span class="hljs-attr">wb.security.lockStructure</span> = <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure><h4 id="worksheet-保护"><a href="#worksheet-保护" class="headerlink" title="worksheet 保护"></a>worksheet 保护</h4><p>worksheet 保护不需要密码，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">ws</span> = wb.active<br><span class="hljs-attr">wb.protection.sheet</span> = <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure><h2 id="openpyxl-包文件"><a href="#openpyxl-包文件" class="headerlink" title="openpyxl 包文件"></a>openpyxl 包文件</h2><p>更多详情请移步 <a href="https://openpyxl.readthedocs.io/en/stable/api/openpyxl.html">openpyxl package</a></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Excel</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决MacOS系统升级时显示安装所选更新时发生错误的问题</title>
    <link href="/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<blockquote><p>注意！若是融合磁盘的 Mac 请不要使用此方法，因为 <code>csrutil enable</code> 命令会格式化融合磁盘。届时，电脑上的资料会全部被清空，无法恢复。</p></blockquote><blockquote><p>注意！若是融合磁盘的 Mac 请不要使用此方法，因为 <code>csrutil enable</code> 命令会格式化融合磁盘。届时，电脑上的资料会全部被清空，无法恢复。</p></blockquote><blockquote><p>注意！若是融合磁盘的 Mac 请不要使用此方法，因为 <code>csrutil enable</code> 命令会格式化融合磁盘。届时，电脑上的资料会全部被清空，无法恢复。</p></blockquote><p>如下图所示，若是 <code>闪存</code> 的 Mac 则可以使用以下方法。</p><p><img src="https://pangao1990.gitee.io/pic/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98-8.png" alt="image"> <img src="https://pangao1990.gitee.io/pic/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98-9.png" alt="image"></p><p>按照 Mac 提示系统更新，若提示 <code>安装所选更新时发生错误</code> 如下：</p><p><img src="https://pangao1990.gitee.io/pic/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98-1.png" alt="image"></p><span id="more"></span><p>这是由于 Mac SIP 系统完整性保护机制导致的，那么现在就关闭这个机制，来升级系统。</p><ul><li><h4 id="关闭保护机制"><a href="#关闭保护机制" class="headerlink" title="关闭保护机制"></a>关闭保护机制</h4><ol><li>先关机</li><li>再按住 <code>command</code> + <code>R</code> 不要松开，接着按 <code>开机键</code> (然后松开 <code>开机键</code> ，但是 <code>command</code> + <code>R</code> 不要松)</li><li>待看到系统加载进度时，也不要松开 <code>command</code> + <code>R</code></li><li>直到进入 <code>恢复模式</code> ，如下：</li></ol><p><img src="https://pangao1990.gitee.io/pic/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98-2.png" alt="image"></p><ol start="5"><li>打开 <code>终端</code> ，输入 <code>csrutil disable</code>，然后重启系统，如下：</li></ol><p><img src="https://pangao1990.gitee.io/pic/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98-3.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98-4.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98-5.png" alt="image"></p></li><li><h4 id="重新下载更新"><a href="#重新下载更新" class="headerlink" title="重新下载更新"></a>重新下载更新</h4><p>重新下载更新，之后提示安装，如下：</p></li></ul><p><img src="https://pangao1990.gitee.io/pic/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98-6.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E8%A7%A3%E5%86%B3MacOS%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%97%B6%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%89%80%E9%80%89%E6%9B%B4%E6%96%B0%E6%97%B6%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98-7.png" alt="image"></p><ul><li><h4 id="重开保护机制"><a href="#重开保护机制" class="headerlink" title="重开保护机制"></a>重开保护机制</h4>系统安装好后，重开保护机制。方法和关闭保护机制一样，不同的是，输入 <code>csrutil enable</code> 。</li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>IT实用技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python-docx处理word文档</title>
    <link href="/python-docx%E5%A4%84%E7%90%86word%E6%96%87%E6%A1%A3/"/>
    <url>/python-docx%E5%A4%84%E7%90%86word%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>全网找了一番，用python创建和更新word(.docx)文档，还是 <a href="https://python-docx.readthedocs.io/en/latest/">python-docx</a> 包比较好用。</p><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li>Python 2.6, 2.7, 3.3, or 3.4</li><li>lxml &gt;&#x3D; 2.3.2</li></ul><span id="more"></span><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><ul><li>由于 <code>python-docx</code> 已经提交给 <a href="https://pypi.org/">PyPI</a> 仓库，所以可以使用 <code>pip</code> 安装，如下：  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> python-docx<br></code></pre></td></tr></table></figure>  如果同时安装了 <code>python2</code> 和 <code>python3</code> 那么 <code>pip</code> 可能不能用，可以使用 <code>pip3</code> 来安装，如下：  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> python-docx<br></code></pre></td></tr></table></figure></li><li><code>python-docx</code> 也可以使用 <code>easy_install</code> 来安装，如下： <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">easy_install python-docx</span><br></code></pre></td></tr></table></figure></li><li>如果不能使用 <code>pip</code> 和 <code>easy_install</code> ，可以在 <code>PyPI</code> 下载包、解压、运行 <code>setup.py</code> ，如下：  <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">tar xvzf <span class="hljs-keyword">python</span>-docx-&#123;<span class="hljs-keyword">version</span>&#125;.tar.gz<br><span class="hljs-keyword">cd</span> <span class="hljs-keyword">python</span>-docx-&#123;<span class="hljs-keyword">version</span>&#125;<br><span class="hljs-keyword">python</span> setup.<span class="hljs-keyword">py</span> install<br></code></pre></td></tr></table></figure>  <code>python-docx</code> 还依赖 <code>lxml</code> 包 ，使用前2种方法会自动安装所需依赖包，第三种方法需要自己手动安装。</li></ul><h2 id="处理word文档"><a href="#处理word文档" class="headerlink" title="处理word文档"></a>处理word文档</h2><h4 id="新建文档类"><a href="#新建文档类" class="headerlink" title="新建文档类"></a>新建文档类</h4><p>首先新建一个空白文档类 <a href="https://python-docx.readthedocs.io/en/latest/api/document.html">Document</a> ，如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">from</span> docx <span class="hljs-keyword">import</span> <span class="hljs-title class_">Document</span><br><br><span class="hljs-variable language_">document</span> = <span class="hljs-title class_">Document</span>()<br></code></pre></td></tr></table></figure><h4 id="编辑已存在的word文档"><a href="#编辑已存在的word文档" class="headerlink" title="编辑已存在的word文档"></a>编辑已存在的word文档</h4><p><a href="https://python-docx.readthedocs.io/en/latest/">python-docx</a> 不仅可以创建word文档，还可以编辑已存在的word文档。<br>其实吧，这玩意儿只能编辑已存在的word文档，之所以有个“创建空白文档”的功能，只不过是拷贝一份空白word文档到工作区间，再在空白文档上编辑，看起来似乎是“创建空白文档”罢了。本质上还是编辑已存在的word文档，捂脸中…<br>打开一个word文档，编辑完后，一定要记得保存。如果保存文件名和原文件名不一样，则会另存为一份word文档；若文件名一样，则会不加提示的保存修改内容。如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">from</span> docx <span class="hljs-keyword">import</span> <span class="hljs-title class_">Document</span><br><br><span class="hljs-variable language_">document</span> = <span class="hljs-title class_">Document</span>(<span class="hljs-string">&#x27;existing-document-file.docx&#x27;</span>)<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">save</span>(<span class="hljs-string">&#x27;new-file-name.docx&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="新增段落"><a href="#新增段落" class="headerlink" title="新增段落"></a>新增段落</h4><p>在word中 <code>段落</code> 是最常见的，创建段落 <a href="https://python-docx.readthedocs.io/en/latest/api/text.html">paragraph</a> 的操作如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">paragraph</span> = document.add_paragraph(<span class="hljs-string">&#x27;这是个段落。&#x27;</span>)<br></code></pre></td></tr></table></figure><p>在此段落之前插入一个段落，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">prior_paragraph</span> = paragraph.insert_paragraph_before(<span class="hljs-string">&#x27;这是前面的段落。&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="新增标题"><a href="#新增标题" class="headerlink" title="新增标题"></a>新增标题</h4><p>新增标题代码如下：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-built_in">document</span>.add_heading(<span class="hljs-string">&#x27;这是个标题&#x27;</span>)<br></code></pre></td></tr></table></figure><p>修改标题大小，有1-9种规格，如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">document.add<span class="hljs-constructor">_heading(&#x27;The <span class="hljs-params">role</span> <span class="hljs-params">of</span> <span class="hljs-params">dolphins</span>&#x27;, <span class="hljs-params">level</span>=2)</span><br></code></pre></td></tr></table></figure><p>如果使用 <code>level=0</code> ，则会新增一个带有下划线样式的标题。</p><h4 id="新增分页符"><a href="#新增分页符" class="headerlink" title="新增分页符"></a>新增分页符</h4><p>代码如下：</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ceylon">document.add<span class="hljs-number">_p</span>age<span class="hljs-number">_</span><span class="hljs-keyword">break</span>()<br></code></pre></td></tr></table></figure><h4 id="新增表格"><a href="#新增表格" class="headerlink" title="新增表格"></a>新增表格</h4><p>创建一个2行2列的表格 <a href="https://python-docx.readthedocs.io/en/latest/api/table.html">Table</a>，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">table = document.add_table(<span class="hljs-attribute">rows</span>=2, <span class="hljs-attribute">cols</span>=2)<br></code></pre></td></tr></table></figure><p>获取第一行第二列的单元格类，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cell</span> = table.cell(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>写入数据，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">cell.text</span> = <span class="hljs-string">&#x27;这是第一行第二列的单元格&#x27;</span><br></code></pre></td></tr></table></figure><p>不仅如此，还能以数组的形式获取整个行或列，如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">row = <span class="hljs-selector-tag">table</span><span class="hljs-selector-class">.rows</span><span class="hljs-selector-attr">[1]</span><br>row<span class="hljs-selector-class">.cells</span><span class="hljs-selector-attr">[0]</span><span class="hljs-selector-class">.text</span> = <span class="hljs-string">&#x27;第二行第一列&#x27;</span><br>row<span class="hljs-selector-class">.cells</span><span class="hljs-selector-attr">[1]</span><span class="hljs-selector-class">.text</span> = <span class="hljs-string">&#x27;第二行第二列&#x27;</span><br></code></pre></td></tr></table></figure><p>或循环操作，如下：</p><figure class="highlight stan"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stan"><span class="hljs-keyword">for</span> <span class="hljs-built_in">row</span> <span class="hljs-keyword">in</span> table.<span class="hljs-built_in">rows</span>:<br>    <span class="hljs-keyword">for</span> cell <span class="hljs-keyword">in</span> <span class="hljs-built_in">row</span>.cells:<br>        <span class="hljs-built_in">print</span>(cell.text)<br></code></pre></td></tr></table></figure><p>用 <code>len()</code> 方法获取行数或列数，如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-built_in">row_count</span> = len(<span class="hljs-keyword">table</span>.<span class="hljs-keyword">rows</span>)<br>col_count = len(<span class="hljs-keyword">table</span>.<span class="hljs-keyword">columns</span>)<br></code></pre></td></tr></table></figure><p>增加行，如下：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">row</span> <span class="hljs-operator">=</span> table.add_row()<br></code></pre></td></tr></table></figure><p>设置表格样式，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">table.style</span> = <span class="hljs-string">&#x27;LightShading-Accent1&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><p>插入本地图片，如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">document.add<span class="hljs-constructor">_picture(&#x27;<span class="hljs-params">demo</span>.<span class="hljs-params">png</span>&#x27;)</span><br></code></pre></td></tr></table></figure><p>默认情况下，图片大小往往不尽如人意，调整图片大小，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> docx.shared import Inches<br><br>document.add_picture(<span class="hljs-string">&#x27;demo.png&#x27;</span>, <span class="hljs-attribute">width</span>=Inches(1.0), <span class="hljs-attribute">height</span>=Inches(1.0))<br></code></pre></td></tr></table></figure><p>若同时定义宽度和高度，则图片会被拉伸或压缩到指定大小；若仅定义宽度或高度，则图会自适应调整大小。所以，建议仅定义宽度即可。</p><h4 id="段落操作"><a href="#段落操作" class="headerlink" title="段落操作"></a>段落操作</h4><h5 id="设置段落样式"><a href="#设置段落样式" class="headerlink" title="设置段落样式"></a>设置段落样式</h5><p>设置段落样式，如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">document.add_paragraph(<span class="hljs-string">&#x27;这是一个样式为 ListBullet 的段落&#x27;</span>, <span class="hljs-attribute">style</span>=<span class="hljs-string">&#x27;ListBullet&#x27;</span>)<br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">paragraph</span> = document.add_paragraph(<span class="hljs-string">&#x27;这是一个样式为 ListBullet 的段落&#x27;</span>)<br><span class="hljs-attr">paragraph.style</span> = <span class="hljs-string">&#x27;List Bullet&#x27;</span><br></code></pre></td></tr></table></figure><h5 id="设置段落对齐方式"><a href="#设置段落对齐方式" class="headerlink" title="设置段落对齐方式"></a>设置段落对齐方式</h5><p>段落对齐方式有 <code>左对齐</code> 、 <code>文字居中</code> 、 <code>右对齐</code> 、 <code>文本两端对齐</code>等，更多对齐方式请移步 <a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdAlignParagraph.html#wdparagraphalignment">WD_ALIGN_PARAGRAPH</a></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">from</span> docx.enum.<span class="hljs-built_in">text</span> import WD_ALIGN_PARAGRAPH<br><br><span class="hljs-comment"># LEFT      =&gt;  左对齐</span><br><span class="hljs-comment"># CENTER    =&gt;  文字居中</span><br><span class="hljs-comment"># RIGHT     =&gt;  右对齐</span><br><span class="hljs-comment"># JUSTIFY   =&gt;  文本两端对齐</span><br><br><span class="hljs-built_in">paragraph</span> = document.add_paragraph(<span class="hljs-string">&quot;你说啥&quot;</span>)<br>paragraph_format = <span class="hljs-built_in">paragraph</span>.paragraph_format<br>paragraph_format.alignment = WD_ALIGN_PARAGRAPH.CENTER<br></code></pre></td></tr></table></figure><h5 id="设置段落缩进"><a href="#设置段落缩进" class="headerlink" title="设置段落缩进"></a>设置段落缩进</h5><p>设置段落缩进，可为负值，如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">from docx<span class="hljs-selector-class">.shared</span> import Inches<br><br>paragraph = document<span class="hljs-selector-class">.add_paragraph</span>(<span class="hljs-string">&quot;你说啥&quot;</span>)<br>paragraph_format = paragraph<span class="hljs-selector-class">.paragraph_format</span><br>paragraph_format<span class="hljs-selector-class">.left_indent</span> = <span class="hljs-built_in">Inches</span>(<span class="hljs-number">0.5</span>)<br></code></pre></td></tr></table></figure><p>也可以设置首行缩进，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">paragraph_format</span>.first_line_indent = Inches(-<span class="hljs-number">0</span>.<span class="hljs-number">25</span>)<br></code></pre></td></tr></table></figure><h5 id="设置段落制表符"><a href="#设置段落制表符" class="headerlink" title="设置段落制表符"></a>设置段落制表符</h5><p>详情请移步 <a href="https://python-docx.readthedocs.io/en/latest/api/text.html#docx.text.tabstops.TabStops">TabStops</a></p><h5 id="设置段落间距"><a href="#设置段落间距" class="headerlink" title="设置段落间距"></a>设置段落间距</h5><p>分为 <code>段前</code> 和 <code>段后</code> ，设置值用 <code>Pt</code> 单位是 <code>磅</code> ，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">paragraph_format.space_before</span> = Pt(<span class="hljs-number">18</span>)<br><span class="hljs-attr">paragraph_format.space_after</span> = Pt(<span class="hljs-number">12</span>)<br></code></pre></td></tr></table></figure><h5 id="设置段落行距"><a href="#设置段落行距" class="headerlink" title="设置段落行距"></a>设置段落行距</h5><p>当行距为 <code>最小值</code> 和 <code>固定值</code> 时，设置值单位为 <code>磅</code> ，需要用 <code>Pt</code> ；当行距为 <code>多倍行距</code> 时，设置值为数值，如下：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">from</span> docx.shared import Length<br><br><span class="hljs-comment">#SINGLE         =&gt;  单倍行距（默认）</span><br><span class="hljs-comment">#ONE_POINT_FIVE =&gt;  1.5倍行距</span><br><span class="hljs-comment">#DOUBLE2        =&gt;  倍行距</span><br><span class="hljs-comment">#AT_LEAST       =&gt;  最小值</span><br><span class="hljs-comment">#EXACTLY        =&gt;  固定值</span><br><span class="hljs-comment">#MULTIPLE       =&gt;  多倍行距</span><br><br><span class="hljs-built_in">paragraph</span>.line_spacing_rule = WD_LINE_SPACING.EXACTLY <span class="hljs-comment">#固定值</span><br>paragraph_format.line_spacing = Pt(<span class="hljs-number">18</span>) <span class="hljs-comment"># 固定值18磅</span><br><span class="hljs-built_in">paragraph</span>.line_spacing_rule = WD_LINE_SPACING.MULTIPLE <span class="hljs-comment">#多倍行距</span><br>paragraph_format.line_spacing = <span class="hljs-number">1.75</span> <span class="hljs-comment"># 1.75倍行间距</span><br></code></pre></td></tr></table></figure><h5 id="设置段落分页"><a href="#设置段落分页" class="headerlink" title="设置段落分页"></a>设置段落分页</h5><ul><li>孤行控制<br>防止在页面顶端单独打印段落末行或在页面底端单独打印段落首行。</li><li>与下段同页<br>防止在选中段落与后面一段间插入分页符。</li><li>段中不分页<br>防止在段落中出现分页符。</li><li>段前分页<br>在选中段落前插入分页符。<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment">#widow_control      =&gt;  孤行控制</span><br><span class="hljs-comment">#keep_with_next     =&gt;  与下段同页</span><br><span class="hljs-comment">#page_break_before  =&gt;  段前分页</span><br><span class="hljs-comment">#keep_together      =&gt;  段中不分页</span><br><br><span class="hljs-attr">paragraph_format.keep_with_next</span> = <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="字体操作"><a href="#字体操作" class="headerlink" title="字体操作"></a>字体操作</h4><h5 id="设置粗体和斜体"><a href="#设置粗体和斜体" class="headerlink" title="设置粗体和斜体"></a>设置粗体和斜体</h5><p>在设置粗体和斜体之前，我们先简单了解一下 <code>段落</code> 里的运行机制。段落包含很多块级的格式，比如缩进、行高、制表符等。每一个小片段叫做一个 <a href="https://python-docx.readthedocs.io/en/latest/api/text.html#docx.text.run.Run">run</a> ，可以对 <code>run</code> 设置粗体和斜体等属性。<br>我们可以设置如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">paragraph = document<span class="hljs-selector-class">.add_paragraph</span>()<br>paragraph<span class="hljs-selector-class">.add_run</span>(<span class="hljs-string">&#x27;这是一个带有&#x27;</span>)<br>paragraph<span class="hljs-selector-class">.add_run</span>(<span class="hljs-string">&#x27;粗体&#x27;</span>)<span class="hljs-selector-class">.bold</span> = True<br>paragraph<span class="hljs-selector-class">.add_run</span>(<span class="hljs-string">&#x27;和&#x27;</span>)<br>paragraph<span class="hljs-selector-class">.add_run</span>(<span class="hljs-string">&#x27;斜体&#x27;</span>)<span class="hljs-selector-class">.italic</span> = True<br>paragraph<span class="hljs-selector-class">.add_run</span>(<span class="hljs-string">&#x27;的段落。&#x27;</span>)<br></code></pre></td></tr></table></figure><h5 id="设置字体属性"><a href="#设置字体属性" class="headerlink" title="设置字体属性"></a>设置字体属性</h5><p>对 <code>run</code> 设置字体、大小、颜色下划线等，更多属性请移步 <a href="https://python-docx.readthedocs.io/en/latest/api/text.html#docx.text.run.Font">Font</a> ，如下：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-built_in">from</span> docx.shared import RGBColor,Pt<br><br><span class="hljs-comment">#all_caps       =&gt;  全部大写字母</span><br><span class="hljs-comment">#bold           =&gt;  加粗</span><br><span class="hljs-comment">#color          =&gt;  字体颜色</span><br><span class="hljs-comment">#complex_script =&gt;  是否为“复杂代码”</span><br><span class="hljs-comment">#cs_bold        =&gt;  “复杂代码”加粗</span><br><span class="hljs-comment">#cs_italic      =&gt;  “复杂代码”斜体</span><br><span class="hljs-comment">#double_strike  =&gt;  双删除线</span><br><span class="hljs-comment">#emboss         =&gt;  文本以凸出页面的方式出现</span><br><span class="hljs-comment">#hidden         =&gt;  隐藏</span><br><span class="hljs-comment">#imprint        =&gt;  印记</span><br><span class="hljs-comment">#italic         =&gt;  斜体</span><br><span class="hljs-comment">#name           =&gt;  字体</span><br><span class="hljs-comment">#no_proof       =&gt;  不验证语法错误</span><br><span class="hljs-comment">#outline        =&gt;  显示字符的轮廓</span><br><span class="hljs-comment">#shadow         =&gt;  阴影</span><br><span class="hljs-comment">#small_caps     =&gt;  小型大写字母</span><br><span class="hljs-comment">#snap_to_grid   =&gt;  定义文档网格时对齐网络</span><br><span class="hljs-comment">#strike         =&gt;  删除线</span><br><span class="hljs-comment">#subscript      =&gt;  下标</span><br><span class="hljs-comment">#superscript    =&gt;  上标</span><br><span class="hljs-comment">#underline      =&gt;  下划线</span><br><br><span class="hljs-keyword">paragraph</span> = document.add_paragraph()<br><span class="hljs-keyword">paragraph</span>.add_run(<span class="hljs-string">&#x27;这是一个带有&#x27;</span>)<br><span class="hljs-keyword">paragraph</span>.add_run(<span class="hljs-string">&#x27;颜色&#x27;</span>).font.color.rgb = RGBColor(<span class="hljs-number">54</span>, <span class="hljs-number">95</span>, <span class="hljs-number">145</span>)<br><span class="hljs-keyword">paragraph</span>.add_run(<span class="hljs-string">&#x27;的&#x27;</span>)<br><span class="hljs-keyword">paragraph</span>.add_run(<span class="hljs-string">&#x27;大字&#x27;</span>).font.size = Pt(<span class="hljs-number">36</span>)  <span class="hljs-comment"># 字体大小设置，和word里面的字号相对应</span><br></code></pre></td></tr></table></figure><h4 id="设置字符样式"><a href="#设置字符样式" class="headerlink" title="设置字符样式"></a>设置字符样式</h4><p>除了设置段落样式外，还可以设置一组字符样式，比如字体、大小、颜色、粗体、斜体等，如下：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment"># 自定义样式 Emphasis</span><br><br><span class="hljs-keyword">paragraph</span> = document.add_paragraph(<span class="hljs-string">&#x27;这是一个带有&#x27;</span>)<br><span class="hljs-keyword">paragraph</span>.add_run(<span class="hljs-string">&#x27;自定义样式&#x27;</span>, <span class="hljs-string">&#x27;Emphasis&#x27;</span>)<br><span class="hljs-keyword">paragraph</span>.add_run(<span class="hljs-string">&#x27;的段落&#x27;</span>)<br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">paragraph = document<span class="hljs-selector-class">.add_paragraph</span>(<span class="hljs-string">&#x27;这是一个带有 &#x27;</span>)<br>run = paragraph<span class="hljs-selector-class">.add_run</span>(<span class="hljs-string">&#x27;自定义样式&#x27;</span>)<br>run<span class="hljs-selector-class">.style</span> = <span class="hljs-string">&#x27;Emphasis&#x27;</span><br>paragraph<span class="hljs-selector-class">.add_run</span>(<span class="hljs-string">&#x27;的段落&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="页眉和页脚"><a href="#页眉和页脚" class="headerlink" title="页眉和页脚"></a>页眉和页脚</h4><p>更多内容请移步 <a href="https://python-docx.readthedocs.io/en/latest/user/hdrftr.html">Working with Headers and Footers</a></p><h4 id="枚举的文档"><a href="#枚举的文档" class="headerlink" title="枚举的文档"></a>枚举的文档</h4><ul><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/MsoColorType.html">MSO_COLOR_TYPE</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/MsoThemeColorIndex.html">MSO_THEME_COLOR_INDEX</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdAlignParagraph.html">WD_PARAGRAPH_ALIGNMENT</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdBuiltinStyle.html">WD_BUILTIN_STYLE</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdCellVerticalAlignment.html">WD_CELL_VERTICAL_ALIGNMENT</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdColorIndex.html">WD_COLOR_INDEX</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdLineSpacing.html">WD_LINE_SPACING</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdOrientation.html">WD_ORIENTATION</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdRowAlignment.html">WD_TABLE_ALIGNMENT</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdRowHeightRule.html">WD_ROW_HEIGHT_RULE</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdSectionStart.html">WD_SECTION_START</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdStyleType.html">WD_STYLE_TYPE</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdTabAlignment.html">WD_TAB_ALIGNMENT</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdTabLeader.html">WD_TAB_LEADER</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdTableDirection.html">WD_TABLE_DIRECTION</a></li><li><a href="https://python-docx.readthedocs.io/en/latest/api/enum/WdUnderline.html">WD_UNDERLINE</a></li></ul><h4 id="名称解释"><a href="#名称解释" class="headerlink" title="名称解释"></a>名称解释</h4><p><a href="https://python-docx.readthedocs.io/en/latest/dev/analysis/index.html">官网解释</a></p><hr>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Word</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>perl处理Excel(跨平台)</title>
    <link href="/perl%E5%A4%84%E7%90%86Excel(%E8%B7%A8%E5%B9%B3%E5%8F%B0)/"/>
    <url>/perl%E5%A4%84%E7%90%86Excel(%E8%B7%A8%E5%B9%B3%E5%8F%B0)/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>用 perl 处理 excel 有两种流行的模块：一种是 <code>win32:OLE</code> 模块，优点是功能强大，在 excel 上能做的事情用这个模块都能做，缺点是无法跨平台，必须在 win 系统上使用且必须安装 office 软件；另一种是 <code>Spreadsheet</code> 模块，优点是跨平台，不依赖系统和软件，缺点是功能不是很多，但基本功能都能实现。</p><p>如果在 win 平台处理 excel，建议使用 <code>win32:OLE</code> 模块（<a href="https://pangao1990.gitee.io/Perl%E5%A4%84%E7%90%86Excel/">教程传送门</a>），本文主要讲解 <code>Spreadsheet</code> 模块的使用方法。</p><h2 id="了解"><a href="#了解" class="headerlink" title="了解"></a>了解</h2><p>从 <a href="https://metacpan.org/pod/Spreadsheet::ParseExcel">Spreadsheet::ParseExcel</a> 和 <a href="https://metacpan.org/pod/Spreadsheet::WriteExcel">Spreadsheet::WriteExcel</a> 的官方资料中我们可以知道：</p><h5 id="Spreadsheet-ParseExcel"><a href="#Spreadsheet-ParseExcel" class="headerlink" title="Spreadsheet::ParseExcel"></a>Spreadsheet::ParseExcel</h5><ul><li>是用于提取 excel 信息</li><li>仅支持 Excel 95-2003 格式</li></ul><h5 id="Spreadsheet-WriteExcel"><a href="#Spreadsheet-WriteExcel" class="headerlink" title="Spreadsheet::WriteExcel"></a>Spreadsheet::WriteExcel</h5><ul><li>是用于新建 excel 信息</li><li>仅支持 Excel 97-2007 格式</li></ul><p>也就是说，如果想更好的支持 <code>xlsx</code> 格式的 excel 需要用到 <a href="https://metacpan.org/pod/Spreadsheet::ParseXLSX">Spreadsheet::ParseXLSX</a> 和 <a href="https://metacpan.org/pod/Excel::Writer::XLSX">Excel::Writer::XLSX</a> 模块。</p><blockquote><p>另外， <a href="https://metacpan.org/pod/Spreadsheet::ParseExcel::SaveParser">Spreadsheet::ParseExcel::SaveParser</a> 可以支持在已存在的 <code>xls</code> 表中修改数据，但是支持效果远没有 <code>win32:OLE</code> 模块强大，修改之后的表格会丢失部分不支持的宏命令和表格等，最遗憾的是仅支持 <code>xls</code> ，并不支持 <code>xlsx</code> 。</p></blockquote><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><p>在终端中输入 <code>sudo perl -MCPAN -e &quot;install &#39;Spreadsheet::ParseExcel&#39;&quot;</code> ，回车，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/perl%E5%A4%84%E7%90%86Excel(%E8%B7%A8%E5%B9%B3%E5%8F%B0)-1.png" alt="image"></p><p>若出现如下图，则安装成功：</p><p><img src="https://pangao1990.gitee.io/pic/perl%E5%A4%84%E7%90%86Excel(%E8%B7%A8%E5%B9%B3%E5%8F%B0)-2.png" alt="image"></p><h2 id="使用方法-提取-Excel"><a href="#使用方法-提取-Excel" class="headerlink" title="使用方法 - 提取 Excel"></a>使用方法 - 提取 Excel</h2><p>引用 <code>use Spreadsheet::ParseExcel;</code> 类，如下：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-keyword">use</span> <span class="hljs-title class_">Spreadsheet</span>::<span class="hljs-title class_">ParseExcel</span>;<br></code></pre></td></tr></table></figure><h4 id="Parser"><a href="#Parser" class="headerlink" title="Parser"></a>Parser</h4><h6 id="new"><a href="#new" class="headerlink" title="new()"></a>new()</h6><p>new()方法可以新建一个提取类，如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">my <span class="hljs-variable">$parser</span> = <span class="hljs-title class_">Spreadsheet</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:ParseExcel-&gt;new</span>(); <span class="hljs-comment">#新建提取类</span><br></code></pre></td></tr></table></figure><p>若是 2007 版以上的 excel，则需要用到 <a href="https://metacpan.org/pod/Spreadsheet::ParseXLSX">Spreadsheet::ParseXLSX</a> ，如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">use <span class="hljs-title class_">Spreadsheet</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:ParseXLSX</span>; <span class="hljs-comment">#引用</span><br>my <span class="hljs-variable">$parser</span> = <span class="hljs-title class_">Spreadsheet</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:ParseXLSX-&gt;new</span>(); <span class="hljs-comment">#新建xlsx提取类</span><br></code></pre></td></tr></table></figure><p>若 excel 需要密码才能打开，则新建密码提取类，如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$parser</span> = <span class="hljs-title class_">Spreadsheet</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:ParseExcel-&gt;new</span>( <span class="hljs-title class_">Password</span> =&gt; <span class="hljs-string">&#x27;secret&#x27;</span> ); <span class="hljs-comment">#若excel需要密码才能打开，则新建密码提取类</span><br></code></pre></td></tr></table></figure><h6 id="parse-filename"><a href="#parse-filename" class="headerlink" title="parse($filename)"></a>parse($filename)</h6><p>获取 excel 表的工作薄，若无则返回 <code>under</code></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $workbook = $parser-&gt;parse(<span class="hljs-string">&#x27;Book1.xls&#x27;</span>); <span class="hljs-comment">#获取excel表的工作薄，若无则返回 `under`</span><br></code></pre></td></tr></table></figure><h6 id="error"><a href="#error" class="headerlink" title="error()"></a>error()</h6><p>判断是否存在该 excel 表格</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># error_code() =&gt; error()</span><br><span class="hljs-meta"># ============    =======</span><br><span class="hljs-meta"># 0 =&gt; <span class="hljs-string">&#x27;&#x27;</span></span><br><span class="hljs-meta"># 1 =&gt; <span class="hljs-string">&#x27;文件没有找到&#x27;</span></span><br><span class="hljs-meta"># 2 =&gt; <span class="hljs-string">&#x27;该文件不是标准的excel格式文档&#x27;</span></span><br><span class="hljs-meta"># 3 =&gt; <span class="hljs-string">&#x27;文件加密了&#x27;</span></span><br><br><span class="hljs-keyword">if</span> ( !defined $workbook ) &#123; <span class="hljs-meta">#一般需要判断是否存在该excel表格</span><br>    die $parser-&gt;error_code(), $parser-&gt;error(), <span class="hljs-string">&quot;.\n&quot;</span><span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Workbook"><a href="#Workbook" class="headerlink" title="Workbook"></a>Workbook</h4><p><code>Spreadsheet::ParseExcel::Workbook</code> 是由 <code>Spreadsheet::ParseExcel</code> 的 <code>parse()</code> 方法获得，有如下几种常用方法（<a href="https://metacpan.org/pod/Spreadsheet::ParseExcel::Worksheet">完整方法使用传送门</a>）：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$workbook</span>-&gt;worksheets()</span><br><span class="hljs-meta"><span class="hljs-keyword">$workbook</span>-&gt;worksheet()</span><br><span class="hljs-meta"><span class="hljs-keyword">$workbook</span>-&gt;worksheet_count()</span><br><span class="hljs-meta"><span class="hljs-keyword">$workbook</span>-&gt;get_filename()</span><br></code></pre></td></tr></table></figure><h6 id="worksheets"><a href="#worksheets" class="headerlink" title="worksheets()"></a>worksheets()</h6><p>循环获取所有的 sheet 表，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">for</span> <span class="hljs-keyword">my</span> $worksheet ( $workbook-&gt;worksheets() ) &#123;<br>    <span class="hljs-comment">#循环获取所有的sheet表</span><br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="worksheet"><a href="#worksheet" class="headerlink" title="worksheet()"></a>worksheet()</h6><p>通过 sheet 表名或表索引获取单一 sheet 表，若无则返回 <code>under</code> ，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$worksheet</span> = <span class="hljs-variable">$workbook</span>-&gt;worksheet(<span class="hljs-string">&#x27;Sheet1&#x27;</span>); <span class="hljs-comment">#获取名为&quot;Sheet1&quot;的sheet表</span><br><span class="hljs-variable">$worksheet</span> = <span class="hljs-variable">$workbook</span>-&gt;worksheet(<span class="hljs-number">0</span>); <span class="hljs-comment">#获取第一张sheet表</span><br></code></pre></td></tr></table></figure><h6 id="worksheet-count"><a href="#worksheet-count" class="headerlink" title="worksheet_count()"></a>worksheet_count()</h6><p>获取 sheet 表的个数，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $worksheet_count = $workbook-&gt;worksheet_count(); <span class="hljs-comment">#获取sheet表的个数</span><br></code></pre></td></tr></table></figure><h6 id="get-filename"><a href="#get-filename" class="headerlink" title="get_filename()"></a>get_filename()</h6><p>获取 excel 表的全路径+名称，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $filename = $workbook-&gt;get_filename(); <span class="hljs-comment">#获取excel表的全路径+名称</span><br></code></pre></td></tr></table></figure><h4 id="Worksheet"><a href="#Worksheet" class="headerlink" title="Worksheet"></a>Worksheet</h4><p><code>Spreadsheet::ParseExcel::Worksheet</code> 是由 <code>worksheets()</code> 或 <code>worksheet()</code> 方法获得，有如下几种常用方法（<a href="https://metacpan.org/pod/Spreadsheet::ParseExcel::Worksheet">完整方法使用传送门</a>）：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$worksheet</span>-&gt;get_cell()</span><br><span class="hljs-meta"><span class="hljs-keyword">$worksheet</span>-&gt;row_range()</span><br><span class="hljs-meta"><span class="hljs-keyword">$worksheet</span>-&gt;col_range()</span><br><span class="hljs-meta"><span class="hljs-keyword">$worksheet</span>-&gt;get_name()</span><br></code></pre></td></tr></table></figure><h6 id="get-cell-row-col"><a href="#get-cell-row-col" class="headerlink" title="get_cell($row, $col)"></a>get_cell($row, $col)</h6><p>由指定行和列获取单元格，若不存在则返回 <code>under</code> ，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $cell = $worksheet-&gt;get_cell($row, $col); <span class="hljs-comment">#由指定行和列获取单元格</span><br></code></pre></td></tr></table></figure><h6 id="row-range"><a href="#row-range" class="headerlink" title="row_range()"></a>row_range()</h6><p>返回一个二元列表 <code>($min, $max)</code> ，表示行数的最小值和最大值，如下图：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> ( $row_min, $row_max ) = $worksheet-&gt;row_range(); <span class="hljs-comment">#行数的最小值和最大值</span><br></code></pre></td></tr></table></figure><h6 id="col-range"><a href="#col-range" class="headerlink" title="col_range()"></a>col_range()</h6><p>返回一个二元列表 <code>($min, $max)</code> ，表示列数的最小值和最大值，如下图：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> ( $col_min, $col_max ) = $worksheet-&gt;col_range(); <span class="hljs-comment">#列数的最小值和最大值</span><br></code></pre></td></tr></table></figure><h6 id="get-name"><a href="#get-name" class="headerlink" title="get_name()"></a>get_name()</h6><p>获取 sheet 的名称，如下图：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $name = $worksheet-&gt;get_name(); <span class="hljs-comment">#获取sheet的名称</span><br></code></pre></td></tr></table></figure><h4 id="Cell"><a href="#Cell" class="headerlink" title="Cell"></a>Cell</h4><p><code>Spreadsheet::ParseExcel::Cell</code> 有如下几种常用方法（<a href="https://metacpan.org/pod/Spreadsheet::ParseExcel::Cell">完整方法使用传送门</a>）：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$cell</span>-&gt;value()</span><br><span class="hljs-meta"><span class="hljs-keyword">$cell</span>-&gt;unformatted()</span><br></code></pre></td></tr></table></figure><h6 id="value"><a href="#value" class="headerlink" title="value()"></a>value()</h6><p>获取单元格的值(有格式)。例如，在单元格中输入数字 <code>123</code> ，单元格显示为 <code>123.00</code> ， 方法<code>value()</code> 的返回值为 <code>123.00</code> 。如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $value = $cell-&gt;value(); <span class="hljs-comment">#获取单元格的值(有格式)</span><br></code></pre></td></tr></table></figure><h6 id="unformatted"><a href="#unformatted" class="headerlink" title="unformatted()"></a>unformatted()</h6><p>获取单元格的值(无格式)。例如，在单元格中输入数字 <code>123</code> ，单元格显示为 <code>123.00</code> ，方法 <code>unformatted()</code> 的返回值为 <code>123</code> 。如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $value = $cell-&gt;unformatted(); <span class="hljs-comment">#获取单元格的值(有格式)</span><br></code></pre></td></tr></table></figure><h2 id="高级方法-提取-Excel"><a href="#高级方法-提取-Excel" class="headerlink" title="高级方法 - 提取 Excel"></a>高级方法 - 提取 Excel</h2><h4 id="Format"><a href="#Format" class="headerlink" title="Format"></a>Format</h4><p>获取 <code>单元格格式</code> ，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $format = $cell-&gt;get_format(); <span class="hljs-comment">#获取单元格格式</span><br></code></pre></td></tr></table></figure><p><code>Spreadsheet::ParseExcel::Format</code> 类有如下方法：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;Font&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;AlignH&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;AlignV&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;Indent&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;Wrap&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;Shrink&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;Rotate&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;JustLast&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;ReadDir&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;BdrStyle&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;BdrColor&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;BdrDiag&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;Fill&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;Lock&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;Hidden&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;&#123;Style&#125;</span><br></code></pre></td></tr></table></figure><h6 id="format-gt-Font"><a href="#format-gt-Font" class="headerlink" title="$format-&gt;{Font}"></a>$format-&gt;{Font}</h6><p>获取单元格的 <code>字体</code> ，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $font = $format-&gt;&#123;Font&#125;<br></code></pre></td></tr></table></figure><h6 id="format-gt-AlignH"><a href="#format-gt-AlignH" class="headerlink" title="$format-&gt;{AlignH}"></a>$format-&gt;{AlignH}</h6><p>获取单元格的 <code>水平对齐方式</code> ，返回值如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>=&gt; 常规<br><span class="hljs-symbol">1 </span>=&gt; 靠左<br><span class="hljs-symbol">2 </span>=&gt; 居中<br><span class="hljs-symbol">3 </span>=&gt; 靠右<br><span class="hljs-symbol">4 </span>=&gt; 填充<br><span class="hljs-symbol">5 </span>=&gt; 两端对齐<br><span class="hljs-symbol">6 </span>=&gt; 跨列居中<br><span class="hljs-symbol">7 </span>=&gt; 分散对齐<br></code></pre></td></tr></table></figure><h6 id="format-gt-Indent"><a href="#format-gt-Indent" class="headerlink" title="$format-&gt;{Indent}"></a>$format-&gt;{Indent}</h6><p>获取单元格的 <code>水平对齐方式</code> 中 <code>靠左</code> 的缩进值</p><h6 id="format-gt-AlignV"><a href="#format-gt-AlignV" class="headerlink" title="$format-&gt;{AlignV}"></a>$format-&gt;{AlignV}</h6><p>获取单元格的 <code>垂直对齐方式</code> ，返回值如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>=&gt; 靠上<br><span class="hljs-symbol">1 </span>=&gt; 居中<br><span class="hljs-symbol">2 </span>=&gt; 靠下<br><span class="hljs-symbol">3 </span>=&gt; 两端对齐<br><span class="hljs-symbol">4 </span>=&gt; 分散对齐<br></code></pre></td></tr></table></figure><h6 id="format-gt-Wrap"><a href="#format-gt-Wrap" class="headerlink" title="$format-&gt;{Wrap}"></a>$format-&gt;{Wrap}</h6><p>是否选择了 <code>文本控制</code> 中的 <code>自动换行</code></p><h6 id="format-gt-Shrink"><a href="#format-gt-Shrink" class="headerlink" title="$format-&gt;{Shrink}"></a>$format-&gt;{Shrink}</h6><p>是否选择了 <code>文本控制</code> 中的 <code>缩小字体填充</code></p><h6 id="format-gt-Rotate"><a href="#format-gt-Rotate" class="headerlink" title="$format-&gt;{Rotate}"></a>$format-&gt;{Rotate}</h6><p>获取 <code>字体旋转方向</code> ，如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>=&gt; 无<br><span class="hljs-symbol">1 </span>=&gt; 垂直<br><span class="hljs-symbol">2 </span>=&gt; 逆时针<span class="hljs-number">90</span>度<br><span class="hljs-symbol">3 </span>=&gt; 顺时针<span class="hljs-number">90</span>度<br></code></pre></td></tr></table></figure><h6 id="format-gt-JustLast"><a href="#format-gt-JustLast" class="headerlink" title="$format-&gt;{JustLast}"></a>$format-&gt;{JustLast}</h6><p>是否选择了 <code>两端分散对齐</code></p><h6 id="format-gt-ReadDir"><a href="#format-gt-ReadDir" class="headerlink" title="$format-&gt;{ReadDir}"></a>$format-&gt;{ReadDir}</h6><p>获取 <code>文本阅读方向</code></p><h6 id="format-gt-BdrStyle"><a href="#format-gt-BdrStyle" class="headerlink" title="$format-&gt;{BdrStyle}"></a>$format-&gt;{BdrStyle}</h6><p>获取 <code>边框线型</code> ，如下数组：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[ $left, $right, $top, $bottom ]<br></code></pre></td></tr></table></figure><h6 id="format-gt-BdrColor"><a href="#format-gt-BdrColor" class="headerlink" title="$format-&gt;{BdrColor}"></a>$format-&gt;{BdrColor}</h6><p>获取 <code>边框颜色</code> ，如下数组：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[ $left, $right, $top, $bottom ]<br></code></pre></td></tr></table></figure><h6 id="format-gt-BdrDiag"><a href="#format-gt-BdrDiag" class="headerlink" title="$format-&gt;{BdrDiag}"></a>$format-&gt;{BdrDiag}</h6><p>获取 <code>对角线边框种类、线型、颜色</code> ，如下数组：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[$kind, $style, $color ]<br></code></pre></td></tr></table></figure><p>边框种类如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>=&gt; 无<br><span class="hljs-symbol">1 </span>=&gt; 右上对角线<br><span class="hljs-symbol">2 </span>=&gt; 右下对角线<br><span class="hljs-symbol">3 </span>=&gt; 全部<br></code></pre></td></tr></table></figure><h6 id="format-gt-Fill"><a href="#format-gt-Fill" class="headerlink" title="$format-&gt;{Fill}"></a>$format-&gt;{Fill}</h6><p>获取 <code>填充</code> 的 <code>图案样式</code> 、 <code>图案颜色</code> 、 <code>背景色</code> ，如下：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[ $pattern, $front_color, $back_color ]<br></code></pre></td></tr></table></figure><h6 id="format-gt-Lock"><a href="#format-gt-Lock" class="headerlink" title="$format-&gt;{Lock}"></a>$format-&gt;{Lock}</h6><p>获取是否 <code>锁定</code> 单元格</p><h6 id="format-gt-Hidden"><a href="#format-gt-Hidden" class="headerlink" title="$format-&gt;{Hidden}"></a>$format-&gt;{Hidden}</h6><p>获取是否 <code>隐藏</code> 公式</p><h4 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h4><p>获取单元格的 <code>字体</code> ，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $font = $format-&gt;&#123;Font&#125;<br></code></pre></td></tr></table></figure><p><code>Spreadsheet::ParseExcel::Font</code> 类有如下方法：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$font</span>-&gt;&#123;Name&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$font</span>-&gt;&#123;Bold&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$font</span>-&gt;&#123;Italic&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$font</span>-&gt;&#123;Height&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$font</span>-&gt;&#123;Underline&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$font</span>-&gt;&#123;UnderlineStyle&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$font</span>-&gt;&#123;Color&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$font</span>-&gt;&#123;Strikeout&#125;</span><br><span class="hljs-meta"><span class="hljs-keyword">$font</span>-&gt;&#123;Super&#125;</span><br></code></pre></td></tr></table></figure><h6 id="font-gt-Name"><a href="#font-gt-Name" class="headerlink" title="$font-&gt;{Name}"></a>$font-&gt;{Name}</h6><p>获取 <code>字体名称</code> ，如 <code>Arial</code></p><h6 id="font-gt-Bold"><a href="#font-gt-Bold" class="headerlink" title="$font-&gt;{Bold}"></a>$font-&gt;{Bold}</h6><p>获取字体是否 <code>加粗</code></p><h6 id="font-gt-Italic"><a href="#font-gt-Italic" class="headerlink" title="$font-&gt;{Italic}"></a>$font-&gt;{Italic}</h6><p>获取字体是否 <code>斜体</code></p><h6 id="font-gt-Height"><a href="#font-gt-Height" class="headerlink" title="$font-&gt;{Height}"></a>$font-&gt;{Height}</h6><p>获取字体 <code>大小</code></p><h6 id="font-gt-Underline"><a href="#font-gt-Underline" class="headerlink" title="$font-&gt;{Underline}"></a>$font-&gt;{Underline}</h6><p>获取字体是否开启 <code>下划线</code></p><h6 id="font-gt-UnderlineStyle"><a href="#font-gt-UnderlineStyle" class="headerlink" title="$font-&gt;{UnderlineStyle}"></a>$font-&gt;{UnderlineStyle}</h6><p>获取字体 <code>下划线样式</code> ，如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"> <span class="hljs-attr">0</span> =&gt; 无<br> <span class="hljs-attr">1</span> =&gt; 下划线<br> <span class="hljs-attr">2</span> =&gt; 双下划线<br><span class="hljs-attr">33</span> =&gt; Single accounting<br><span class="hljs-attr">34</span> =&gt; Double accounting<br></code></pre></td></tr></table></figure><h6 id="font-gt-Color"><a href="#font-gt-Color" class="headerlink" title="$font-&gt;{Color}"></a>$font-&gt;{Color}</h6><p>获取 <code>字体颜色</code></p><h6 id="font-gt-Strikeout"><a href="#font-gt-Strikeout" class="headerlink" title="$font-&gt;{Strikeout}"></a>$font-&gt;{Strikeout}</h6><p>获取字体是否添加 <code>删除线</code></p><h6 id="font-gt-Super"><a href="#font-gt-Super" class="headerlink" title="$font-&gt;{Super}"></a>$font-&gt;{Super}</h6><p>获取字体是 <code>上标</code> 还是 <code>下标</code> ，如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>=&gt; 无<br><span class="hljs-symbol">1 </span>=&gt; 上标<br><span class="hljs-symbol">2 </span>=&gt; 下标<br></code></pre></td></tr></table></figure><h2 id="使用方法-新建-Excel"><a href="#使用方法-新建-Excel" class="headerlink" title="使用方法 - 新建 Excel"></a>使用方法 - 新建 Excel</h2><p>引用 <code>use Spreadsheet::WriteExcel;</code> 类，如下：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-keyword">use</span> <span class="hljs-title class_">Spreadsheet</span>::<span class="hljs-title class_">WriteExcel</span>;<br></code></pre></td></tr></table></figure><h4 id="workbook"><a href="#workbook" class="headerlink" title="workbook"></a>workbook</h4><h6 id="new-1"><a href="#new-1" class="headerlink" title="new()"></a>new()</h6><p>new()方法可以基于文件名新建一个 excel 表，如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">my <span class="hljs-variable">$workbook</span>  = <span class="hljs-title class_">Spreadsheet</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:WriteExcel-&gt;new</span>(<span class="hljs-string">&#x27;filename.xls&#x27;</span>); <span class="hljs-comment">#新建xls表</span><br></code></pre></td></tr></table></figure><p>若是新建 2007 版以上的 excel，则需要用到 <a href="https://metacpan.org/pod/Excel::Writer::XLSX">Excel::Writer::XLSX</a> ，如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">use <span class="hljs-title class_">Excel</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:Writer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:XLSX</span>; <span class="hljs-comment">#引用</span><br>my <span class="hljs-variable">$workbook</span> = <span class="hljs-title class_">Excel</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:Writer</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:XLSX-&gt;new</span>( <span class="hljs-string">&#x27;perl.xlsx&#x27;</span> ); <span class="hljs-comment">#新建xlsx表</span><br></code></pre></td></tr></table></figure><p>若创建失败，则返回 under，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">die</span> <span class="hljs-string">&quot;Problems creating new Excel file: $!&quot;</span> <span class="hljs-keyword">unless</span> <span class="hljs-keyword">defined</span> $workbook;<br></code></pre></td></tr></table></figure><h6 id="compatibility-mode"><a href="#compatibility-mode" class="headerlink" title="compatibility_mode()"></a>compatibility_mode()</h6><p>用于增强兼容性，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$workbook</span>-&gt;compatibility_mode(); <span class="hljs-comment">#用于增强兼容性</span><br></code></pre></td></tr></table></figure><h6 id="add-worksheet-sheetname"><a href="#add-worksheet-sheetname" class="headerlink" title="add_worksheet($sheetname)"></a>add_worksheet($sheetname)</h6><p>新增一个 sheet，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$worksheet1</span> = <span class="hljs-variable">$workbook</span>-&gt;add_worksheet();           <span class="hljs-comment"># Sheet1</span><br><span class="hljs-variable">$worksheet2</span> = <span class="hljs-variable">$workbook</span>-&gt;add_worksheet(<span class="hljs-string">&#x27;自定义名称&#x27;</span>);  <span class="hljs-comment"># 自定义名称</span><br><span class="hljs-variable">$worksheet3</span> = <span class="hljs-variable">$workbook</span>-&gt;add_worksheet();           <span class="hljs-comment"># Sheet3</span><br></code></pre></td></tr></table></figure><h6 id="add-chart-properties"><a href="#add-chart-properties" class="headerlink" title="add_chart(%properties)"></a>add_chart(%properties)</h6><p>更多详细请移步 <a href="https://metacpan.org/pod/Spreadsheet::WriteExcel::Chart">Spreadsheet::WriteExcel::Chart</a></p><h6 id="close"><a href="#close" class="headerlink" title="close()"></a>close()</h6><p>一般情况下，excel 文件会自动关闭，但使用 <code>close()</code> 可以确定关闭 excel 文件，如下：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">$workbook-&gt;<span class="hljs-keyword">close() </span><span class="hljs-keyword">or </span><span class="hljs-keyword">die </span><span class="hljs-string">&quot;Error closing file: $!&quot;</span><span class="hljs-comment">; #关闭excel文件</span><br></code></pre></td></tr></table></figure><h6 id="set-properties"><a href="#set-properties" class="headerlink" title="set_properties()"></a>set_properties()</h6><p>设置 excel 表附加信息，如下：</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sml">#设置excel表附加信息<br>$workbook-&gt;set_properties(<br>    title    =&gt; <span class="hljs-symbol">&#x27;This</span> is an example spreadsheet&#x27;,<br>    author   =&gt; <span class="hljs-symbol">&#x27;John</span> <span class="hljs-type">McNamara&#x27;</span>,<br>    comments =&gt; <span class="hljs-symbol">&#x27;Created</span> <span class="hljs-keyword">with</span> <span class="hljs-type">Perl</span> <span class="hljs-keyword">and</span> <span class="hljs-type">Spreadsheet</span>::<span class="hljs-type">WriteExcel&#x27;</span>,<br>);<br></code></pre></td></tr></table></figure><p>可设置的信息如下：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">title</span><br>subject<br>author<br>manager<br>company<br>category<br>keywords<br>comments<br></code></pre></td></tr></table></figure><h4 id="worksheet-1"><a href="#worksheet-1" class="headerlink" title="worksheet"></a>worksheet</h4><h6 id="write-row-column-token-format"><a href="#write-row-column-token-format" class="headerlink" title="write($row, $column, $token, $format)"></a>write($row, $column, $token, $format)</h6><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs perl">$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Hello&#x27;</span>                ); <span class="hljs-comment"># write_string()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;One&#x27;</span>                  ); <span class="hljs-comment"># write_string()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">2</span>, <span class="hljs-number">0</span>,  <span class="hljs-number">2</span>                     ); <span class="hljs-comment"># write_number()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">3</span>, <span class="hljs-number">0</span>,  <span class="hljs-number">3.00001</span>               ); <span class="hljs-comment"># write_number()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">4</span>, <span class="hljs-number">0</span>,  <span class="hljs-string">&quot;&quot;</span>                    ); <span class="hljs-comment"># write_blank()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>,  <span class="hljs-string">&#x27;&#x27;</span>                    ); <span class="hljs-comment"># write_blank()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">6</span>, <span class="hljs-number">0</span>,  <span class="hljs-keyword">undef</span>                 ); <span class="hljs-comment"># write_blank()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">7</span>, <span class="hljs-number">0</span>                         ); <span class="hljs-comment"># write_blank()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">8</span>, <span class="hljs-number">0</span>,  <span class="hljs-string">&#x27;http://www.perl.com/&#x27;</span>); <span class="hljs-comment"># write_url()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A9&#x27;</span>,  <span class="hljs-string">&#x27;ftp://ftp.cpan.org/&#x27;</span> ); <span class="hljs-comment"># write_url()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A10&#x27;</span>, <span class="hljs-string">&#x27;internal:Sheet1!A1&#x27;</span>  ); <span class="hljs-comment"># write_url()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A11&#x27;</span>, <span class="hljs-string">&#x27;external:c:\foo.xls&#x27;</span> ); <span class="hljs-comment"># write_url()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A12&#x27;</span>, <span class="hljs-string">&#x27;=A3 + 3*A4&#x27;</span>          ); <span class="hljs-comment"># write_formula()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A13&#x27;</span>, <span class="hljs-string">&#x27;=SIN(PI()/4)&#x27;</span>        ); <span class="hljs-comment"># write_formula()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A14&#x27;</span>, \@array               ); <span class="hljs-comment"># write_row()</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A15&#x27;</span>, [\@array]             ); <span class="hljs-comment"># write_col()</span><br></code></pre></td></tr></table></figure><p><code>$format</code> 参数是可选的，用于定义单元格的格式，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $format = $workbook-&gt;add_format();<br>$format-&gt;set_bold(); <span class="hljs-comment">#加粗</span><br>$format-&gt;set_color(<span class="hljs-string">&#x27;red&#x27;</span>); <span class="hljs-comment">#字体红色</span><br>$format-&gt;set_align(<span class="hljs-string">&#x27;center&#x27;</span>); <span class="hljs-comment">#居中</span><br><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Hello&#x27;</span>, $format);<br></code></pre></td></tr></table></figure><p>单元格坐标的确认使用格式如下：</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scheme">(<span class="hljs-name">0</span>, <span class="hljs-number">0</span>)<br>(<span class="hljs-symbol">&#x27;A1</span>&#x27;)<br></code></pre></td></tr></table></figure><p>互换使用方法如下：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-keyword">use</span> <span class="hljs-title class_">Spreadsheet</span>::<span class="hljs-title class_">WriteExcel</span>::<span class="hljs-title class_">Utility</span>;<br><br>(<span class="hljs-variable">$row</span>, <span class="hljs-variable">$col</span>) = xl_cell_to_rowcol(<span class="hljs-string">&#x27;C2&#x27;</span>);  <span class="hljs-comment"># (1, 2)</span><br><span class="hljs-variable">$str</span> = xl_rowcol_to_cell(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);  <span class="hljs-comment"># C2</span><br></code></pre></td></tr></table></figure><h6 id="keep-leading-zeros"><a href="#keep-leading-zeros" class="headerlink" title="keep_leading_zeros()"></a>keep_leading_zeros()</h6><p>excel 会将类似于数字的内容转换成数字，例如输入 <code>0123</code> ，excel 会将它转化为 <code>123</code> ，如果想呈现出 <code>0123</code> ，则做如下处理：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment"># 如下，结果是 1209</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A1&#x27;</span>, <span class="hljs-string">&#x27;01209&#x27;</span>);<br><br><span class="hljs-comment"># 设置格式，结果是 01209</span><br><span class="hljs-keyword">my</span> $format1 = $workbook-&gt;add_format(<span class="hljs-string">num_format =&gt;</span> <span class="hljs-string">&#x27;00000&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A2&#x27;</span>, <span class="hljs-string">&#x27;01209&#x27;</span>, $format1);<br><br><span class="hljs-comment"># 使用字符串格式，结果是 01209</span><br>$worksheet-&gt;write_string(<span class="hljs-string">&#x27;A3&#x27;</span>, <span class="hljs-string">&#x27;01209&#x27;</span>);<br><br><span class="hljs-comment"># 使用keep_leading_zeros()方法，结果是 01209</span><br>$worksheet-&gt;keep_leading_zeros();<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A4&#x27;</span>, <span class="hljs-string">&#x27;01209&#x27;</span>);<br></code></pre></td></tr></table></figure><p>以上操作呈现出的效果如下：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"> -----------------------------------------------------------<br>|<span class="hljs-string">   </span>|<span class="hljs-string">     A     </span>|<span class="hljs-string">     B     </span>|<span class="hljs-string">     C     </span>|<span class="hljs-string">     D     </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"> -----------------------------------------------------------</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 1 </span>|<span class="hljs-string">      1209 </span>|<span class="hljs-string">           </span>|<span class="hljs-string">           </span>|<span class="hljs-string">           </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 2 </span>|<span class="hljs-string">     01209 </span>|<span class="hljs-string">           </span>|<span class="hljs-string">           </span>|<span class="hljs-string">           </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 3 </span>|<span class="hljs-string"> 01209     </span>|<span class="hljs-string">           </span>|<span class="hljs-string">           </span>|<span class="hljs-string">           </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 4 </span>|<span class="hljs-string"> 01209     </span>|<span class="hljs-string">           </span>|<span class="hljs-string">           </span>|<span class="hljs-string">           </span>|<span class="hljs-string"> ...</span><br></code></pre></td></tr></table></figure><p>write_row($row, $column, $array_ref, $format) 写入数组数据，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs perl">@array      = (<span class="hljs-string">&#x27;awk&#x27;</span>, <span class="hljs-string">&#x27;gawk&#x27;</span>, <span class="hljs-string">&#x27;mawk&#x27;</span>);<br>$array_ref  = \@array;<br><br>$worksheet-&gt;write_row(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, $array_ref);<br><br><span class="hljs-comment"># 以上代码等价于</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, $array[<span class="hljs-number">0</span>]);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, $array[<span class="hljs-number">1</span>]);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, $array[<span class="hljs-number">2</span>]);<br></code></pre></td></tr></table></figure><p>若是二维数组，如下：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-symbol">@eec</span> =  (<br>            [<span class="hljs-string">&#x27;maggie&#x27;</span>, <span class="hljs-string">&#x27;milly&#x27;</span>, <span class="hljs-string">&#x27;molly&#x27;</span>, <span class="hljs-string">&#x27;may&#x27;</span>  ],<br>            [<span class="hljs-number">13</span>,       <span class="hljs-number">14</span>,      <span class="hljs-number">15</span>,      <span class="hljs-number">16</span>     ],<br>            [<span class="hljs-string">&#x27;shell&#x27;</span>,  <span class="hljs-string">&#x27;star&#x27;</span>,  <span class="hljs-string">&#x27;crab&#x27;</span>,  <span class="hljs-string">&#x27;stone&#x27;</span>]<br>        )<span class="hljs-comment">;</span><br><br>$worksheet-&gt;write_row(<span class="hljs-string">&#x27;A1&#x27;</span>, \<span class="hljs-symbol">@eec</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>呈现出的效果，如下：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"> -----------------------------------------------------------<br>|<span class="hljs-string">   </span>|<span class="hljs-string">    A    </span>|<span class="hljs-string">    B    </span>|<span class="hljs-string">    C    </span>|<span class="hljs-string">    D    </span>|<span class="hljs-string">    E    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"> -----------------------------------------------------------</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 1 </span>|<span class="hljs-string"> maggie  </span>|<span class="hljs-string"> 13      </span>|<span class="hljs-string"> shell   </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 2 </span>|<span class="hljs-string"> milly   </span>|<span class="hljs-string"> 14      </span>|<span class="hljs-string"> star    </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 3 </span>|<span class="hljs-string"> molly   </span>|<span class="hljs-string"> 15      </span>|<span class="hljs-string"> crab    </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 4 </span>|<span class="hljs-string"> may     </span>|<span class="hljs-string"> 16      </span>|<span class="hljs-string"> stone   </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 5 </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 6 </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br></code></pre></td></tr></table></figure><p>write_col($row, $column, $array_ref, $format) 写入数组数据，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs perl">@array      = (<span class="hljs-string">&#x27;awk&#x27;</span>, <span class="hljs-string">&#x27;gawk&#x27;</span>, <span class="hljs-string">&#x27;mawk&#x27;</span>);<br>$array_ref  = \@array;<br><br>$worksheet-&gt;write_col(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, $array_ref);<br><br><span class="hljs-comment"># 以上代码等价于</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, $array[<span class="hljs-number">0</span>]);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, $array[<span class="hljs-number">1</span>]);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, $array[<span class="hljs-number">2</span>]);<br></code></pre></td></tr></table></figure><p>若是二维数组，如下：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-symbol">@eec</span> =  (<br>            [<span class="hljs-string">&#x27;maggie&#x27;</span>, <span class="hljs-string">&#x27;milly&#x27;</span>, <span class="hljs-string">&#x27;molly&#x27;</span>, <span class="hljs-string">&#x27;may&#x27;</span>  ],<br>            [<span class="hljs-number">13</span>,       <span class="hljs-number">14</span>,      <span class="hljs-number">15</span>,      <span class="hljs-number">16</span>     ],<br>            [<span class="hljs-string">&#x27;shell&#x27;</span>,  <span class="hljs-string">&#x27;star&#x27;</span>,  <span class="hljs-string">&#x27;crab&#x27;</span>,  <span class="hljs-string">&#x27;stone&#x27;</span>]<br>        )<span class="hljs-comment">;</span><br><br>$worksheet-&gt;write_col(<span class="hljs-string">&#x27;A1&#x27;</span>, \<span class="hljs-symbol">@eec</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>呈现出的效果，如下：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">  -----------------------------------------------------------<br>|<span class="hljs-string">   </span>|<span class="hljs-string">    A    </span>|<span class="hljs-string">    B    </span>|<span class="hljs-string">    C    </span>|<span class="hljs-string">    D    </span>|<span class="hljs-string">    E    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"> -----------------------------------------------------------</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 1 </span>|<span class="hljs-string"> maggie  </span>|<span class="hljs-string"> milly   </span>|<span class="hljs-string"> molly   </span>|<span class="hljs-string"> may     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 2 </span>|<span class="hljs-string"> 13      </span>|<span class="hljs-string"> 14      </span>|<span class="hljs-string"> 15      </span>|<span class="hljs-string"> 16      </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 3 </span>|<span class="hljs-string"> shell   </span>|<span class="hljs-string"> star    </span>|<span class="hljs-string"> crab    </span>|<span class="hljs-string"> stone   </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 4 </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 5 </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br><span class="hljs-string"></span>|<span class="hljs-string"> 6 </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string"> ...     </span>|<span class="hljs-string">  ...    </span>|<span class="hljs-string"> ...</span><br></code></pre></td></tr></table></figure><h6 id="write-url-row-col-url-label-format"><a href="#write-url-row-col-url-label-format" class="headerlink" title="write_url($row, $col, $url, $label, $format)"></a>write_url($row, $col, $url, $label, $format)</h6><p>写入超链接，如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">$worksheet-&gt;write<span class="hljs-constructor">_url(0, 0,  &#x27;<span class="hljs-params">ftp</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">www</span>.<span class="hljs-params">perl</span>.<span class="hljs-params">org</span><span class="hljs-operator">/</span>&#x27;                  )</span>;<br>$worksheet-&gt;write<span class="hljs-constructor">_url(1, 0,  &#x27;<span class="hljs-params">http</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">www</span>.<span class="hljs-params">perl</span>.<span class="hljs-params">com</span><span class="hljs-operator">/</span>&#x27;, &#x27;Perl <span class="hljs-params">home</span>&#x27;    )</span>;<br>$worksheet-&gt;write<span class="hljs-constructor">_url(&#x27;A3&#x27;,  &#x27;<span class="hljs-params">http</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">www</span>.<span class="hljs-params">perl</span>.<span class="hljs-params">com</span><span class="hljs-operator">/</span>&#x27;, $<span class="hljs-params">format</span>        )</span>;<br>$worksheet-&gt;write<span class="hljs-constructor">_url(&#x27;A4&#x27;,  &#x27;<span class="hljs-params">http</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">www</span>.<span class="hljs-params">perl</span>.<span class="hljs-params">com</span><span class="hljs-operator">/</span>&#x27;, &#x27;Perl&#x27;, $<span class="hljs-params">format</span>)</span>;<br>$worksheet-&gt;write<span class="hljs-constructor">_url(&#x27;A5&#x27;,  &#x27;<span class="hljs-params">mailto</span>:<span class="hljs-params">jmcnamara</span>@<span class="hljs-params">cpan</span>.<span class="hljs-params">org</span>&#x27;            )</span>;<br></code></pre></td></tr></table></figure><h6 id="write-url-range-row1-col1-row2-col2-url-string-format"><a href="#write-url-range-row1-col1-row2-col2-url-string-format" class="headerlink" title="write_url_range($row1, $col1, $row2, $col2, $url, $string, $format)"></a>write_url_range($row1, $col1, $row2, $col2, $url, $string, $format)</h6><p>在一块区域内写入超链接，如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">$worksheet-&gt;write<span class="hljs-constructor">_url(0, 0, 0, 3, &#x27;<span class="hljs-params">ftp</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">www</span>.<span class="hljs-params">perl</span>.<span class="hljs-params">org</span><span class="hljs-operator">/</span>&#x27;              )</span>;<br>$worksheet-&gt;write<span class="hljs-constructor">_url(1, 0, 0, 3, &#x27;<span class="hljs-params">http</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">www</span>.<span class="hljs-params">perl</span>.<span class="hljs-params">com</span><span class="hljs-operator">/</span>&#x27;, &#x27;Perl <span class="hljs-params">home</span>&#x27;)</span>;<br>$worksheet-&gt;write<span class="hljs-constructor">_url(&#x27;A3:D3&#x27;,    &#x27;<span class="hljs-params">internal</span>:Sheet2!A1&#x27;               )</span>;<br>$worksheet-&gt;write<span class="hljs-constructor">_url(&#x27;A4:D4&#x27;,    &#x27;<span class="hljs-params">external</span>:<span class="hljs-params">c</span>:\<span class="hljs-params">temp</span>\<span class="hljs-params">foo</span>.<span class="hljs-params">xls</span>&#x27;         )</span>;<br><br></code></pre></td></tr></table></figure><h6 id="write-formula-row-column-formula-format-value"><a href="#write-formula-row-column-formula-format-value" class="headerlink" title="write_formula($row, $column, $formula, $format, $value)"></a>write_formula($row, $column, $formula, $format, $value)</h6><p>写入公式，如下：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xl">$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>write_formula(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;=$B$3 + B4&#x27;</span>  );<br>$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>write_formula(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;=SIN(PI()/4)&#x27;</span>);<br>$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>write_formula(<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;=SUM(B1:B5)&#x27;</span> );<br>$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>write_formula(<span class="hljs-string">&#x27;A4&#x27;</span>, <span class="hljs-string">&#x27;=IF(A3&gt;1,&quot;Yes&quot;, &quot;No&quot;)&#x27;</span>   );<br>$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>write_formula(<span class="hljs-string">&#x27;A5&#x27;</span>, <span class="hljs-string">&#x27;=AVERAGE(1, 2, 3, 4)&#x27;</span>    );<br>$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>write_formula(<span class="hljs-string">&#x27;A6&#x27;</span>, <span class="hljs-string">&#x27;=DATEVALUE(&quot;1-Jan-2001&quot;)&#x27;</span>);<br></code></pre></td></tr></table></figure><h6 id="write-comment-row-column-string-…"><a href="#write-comment-row-column-string-…" class="headerlink" title="write_comment($row, $column, $string, …)"></a>write_comment($row, $column, $string, …)</h6><p>增加批注，如下：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>write        (<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;Hello&#x27;</span>);<br>$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>write_comment(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;这是个批注&#x27;</span>);<br></code></pre></td></tr></table></figure><p>还可以增加信息如下：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-comment"># encoding =&gt; 若为1，则表明使用UTF-16BE编码</span><br><span class="hljs-comment"># author =&gt; 批注的作者</span><br><span class="hljs-comment"># author_encoding =&gt; 作者字符串是否用UTF-16BE编码</span><br><span class="hljs-comment"># visible =&gt; 是否设置开启excel时批注可见。1为可见；0为不可见</span><br><span class="hljs-comment"># x_scale =&gt; 设置批注框宽度的压缩比</span><br><span class="hljs-comment"># width =&gt; 设置批注框宽度</span><br><span class="hljs-comment"># y_scale =&gt; 设置批注框高度的压缩比</span><br><span class="hljs-comment"># height =&gt; 设置批注框高度</span><br><span class="hljs-comment"># color =&gt; 设置批注框背景色</span><br><span class="hljs-comment"># start_cell =&gt; 设置批注框出现的位置，如“E2”</span><br><span class="hljs-comment"># start_row =&gt; 设置批注框出现的行位置</span><br><span class="hljs-comment"># start_col =&gt; 设置批注框出现的列位置</span><br><br>$worksheet-&gt;write_comment(<span class="hljs-string">&#x27;C3&#x27;</span>, <span class="hljs-string">&#x27;Hello&#x27;</span>, visible =&gt; <span class="hljs-number">1</span>, author =&gt; <span class="hljs-string">&#x27;Perl&#x27;</span>);<br></code></pre></td></tr></table></figure><h6 id="insert-image-row-col-filename-x-y-scale-x-scale-y"><a href="#insert-image-row-col-filename-x-y-scale-x-scale-y" class="headerlink" title="insert_image($row, $col, $filename, $x, $y, $scale_x, $scale_y)"></a>insert_image($row, $col, $filename, $x, $y, $scale_x, $scale_y)</h6><p>在 sheet 中插入一个 png、jpeg 或 bmp 格式的图片， <code>$x</code> 和 <code>$y</code> 表示在单元格中图片靠左和靠上的距离， <code>$scale_x</code> 和 <code>$scale_y</code> 表示缩放比例，如下：</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sml">$worksheet-&gt;insert_image(<span class="hljs-symbol">&#x27;A1&#x27;</span>, <span class="hljs-symbol">&#x27;perl</span>.bmp&#x27;, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0.8</span>);<br></code></pre></td></tr></table></figure><h6 id="insert-chart-row-col-chart-x-y-scale-x-scale-y"><a href="#insert-chart-row-col-chart-x-y-scale-x-scale-y" class="headerlink" title="insert_chart($row, $col, $chart, $x, $y, $scale_x, $scale_y)"></a>insert_chart($row, $col, $chart, $x, $y, $scale_x, $scale_y)</h6><p>插入表格，详情请移步 <a href="https://metacpan.org/pod/Spreadsheet::WriteExcel::Chart">Spreadsheet::WriteExcel::Chart</a></p><h6 id="data-validation"><a href="#data-validation" class="headerlink" title="data_validation()"></a>data_validation()</h6><p>下拉选项，如下：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-comment">#仅能输入大于100的数字</span><br>$worksheet-&gt;data_validation(<span class="hljs-string">&#x27;B3&#x27;</span>,<br>    &#123;<br>        validate =&gt; <span class="hljs-string">&#x27;integer&#x27;</span>,<br>        criteria =&gt; <span class="hljs-string">&#x27;&gt;&#x27;</span>,<br>        value    =&gt; <span class="hljs-number">100</span>,<br>    &#125;);<br><br><span class="hljs-comment">#在下拉选项中选择值</span><br>$worksheet-&gt;data_validation(<span class="hljs-string">&#x27;B5:B9&#x27;</span>,<br>    &#123;<br>        validate =&gt; <span class="hljs-string">&#x27;list&#x27;</span>,<br>        value    =&gt; [<span class="hljs-string">&#x27;open&#x27;</span>, <span class="hljs-string">&#x27;high&#x27;</span>, <span class="hljs-string">&#x27;close&#x27;</span>],<br>    &#125;);<br></code></pre></td></tr></table></figure><h6 id="get-name-1"><a href="#get-name-1" class="headerlink" title="get_name()"></a>get_name()</h6><p>获取 sheet 表的名称，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $sheet ($workbook-&gt;sheets()) &#123;<br>    <span class="hljs-keyword">print</span> $sheet-&gt;get_name();<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="activate"><a href="#activate" class="headerlink" title="activate()"></a>activate()</h6><p>设置默认展示的 sheet 表，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$worksheet1</span> = <span class="hljs-variable">$workbook</span>-&gt;add_worksheet(<span class="hljs-string">&#x27;To&#x27;</span>);<br><span class="hljs-variable">$worksheet2</span> = <span class="hljs-variable">$workbook</span>-&gt;add_worksheet(<span class="hljs-string">&#x27;the&#x27;</span>);<br><span class="hljs-variable">$worksheet3</span> = <span class="hljs-variable">$workbook</span>-&gt;add_worksheet(<span class="hljs-string">&#x27;wind&#x27;</span>);<br><br><span class="hljs-variable">$worksheet3</span>-&gt;activate(); <span class="hljs-comment">#默认展示wind表</span><br></code></pre></td></tr></table></figure><h6 id="select"><a href="#select" class="headerlink" title="select()"></a>select()</h6><p>选中 sheet 表，如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$worksheet1</span>-&gt;activate();</span><br><span class="hljs-meta"><span class="hljs-keyword">$worksheet2</span>-&gt;select();</span><br><span class="hljs-meta"><span class="hljs-keyword">$worksheet3</span>-&gt;select();</span><br></code></pre></td></tr></table></figure><h6 id="hide"><a href="#hide" class="headerlink" title="hide()"></a>hide()</h6><p>隐藏 sheet 表，如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$worksheet2</span>-&gt;hide();</span><br></code></pre></td></tr></table></figure><h6 id="set-first-sheet"><a href="#set-first-sheet" class="headerlink" title="set_first_sheet()"></a>set_first_sheet()</h6><p>设置为第一个 sheet，如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-function"><span class="hljs-title">for</span></span> (<span class="hljs-number">1.</span><span class="hljs-number">.20</span>) &#123;<br>    <span class="hljs-symbol">$</span>workbook-&gt;add_worksheet;<br>&#125;<br><br><span class="hljs-meta"><span class="hljs-keyword">$worksheet21</span> = $workbook-&gt;add_worksheet();</span><br><span class="hljs-meta"><span class="hljs-keyword">$worksheet22</span> = $workbook-&gt;add_worksheet();</span><br><br><span class="hljs-meta"><span class="hljs-keyword">$worksheet21</span>-&gt;set_first_sheet(); #设置为第一个sheet</span><br><span class="hljs-meta"><span class="hljs-keyword">$worksheet22</span>-&gt;activate();</span><br></code></pre></td></tr></table></figure><h6 id="protect-password"><a href="#protect-password" class="headerlink" title="protect($password)"></a>protect($password)</h6><p>开启保护，密码可选，如下：</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lasso">$worksheet-&gt;<span class="hljs-keyword">protect</span>();<br><span class="hljs-literal">or</span><br>$worksheet-&gt;<span class="hljs-keyword">protect</span>(<span class="hljs-string">&#x27;drowssap&#x27;</span>);<br></code></pre></td></tr></table></figure><h6 id="set-selection-first-row-first-col-last-row-last-col"><a href="#set-selection-first-row-first-col-last-row-last-col" class="headerlink" title="set_selection($first_row, $first_col, $last_row, $last_col)"></a>set_selection($first_row, $first_col, $last_row, $last_col)</h6><p>选中指定区域，如下：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean">$worksheet1-&gt;set_selection(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>);       # <span class="hljs-number">1.</span> Cell D4.<br>$worksheet2-&gt;set_selection(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>); # <span class="hljs-number">2.</span> Cells D4 to G7.<br>$worksheet3-&gt;set_selection(<span class="hljs-number">6</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>); # <span class="hljs-number">3.</span> Cells G7 to D4.<br>$worksheet4-&gt;set_selection(<span class="hljs-string">&#x27;D4&#x27;</span>);       # Same <span class="hljs-keyword">as</span> <span class="hljs-number">1.</span><br>$worksheet5-&gt;set_selection(<span class="hljs-string">&#x27;D4:G7&#x27;</span>);    # Same <span class="hljs-keyword">as</span> <span class="hljs-number">2.</span><br>$worksheet6-&gt;set_selection(<span class="hljs-string">&#x27;G7:D4&#x27;</span>);    # Same <span class="hljs-keyword">as</span> <span class="hljs-number">3.</span><br></code></pre></td></tr></table></figure><h6 id="set-row-row-height-format-hidden-level-collapsed"><a href="#set-row-row-height-format-hidden-level-collapsed" class="headerlink" title="set_row($row, $height, $format, $hidden, $level, $collapsed)"></a>set_row($row, $height, $format, $hidden, $level, $collapsed)</h6><p>设置行属性，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$worksheet</span>-&gt;set_row(<span class="hljs-number">0</span>, <span class="hljs-number">20</span>); <span class="hljs-comment"># 设置第一行的行高为20</span><br></code></pre></td></tr></table></figure><h6 id="set-column-first-col-last-col-width-format-hidden-level-collapsed"><a href="#set-column-first-col-last-col-width-format-hidden-level-collapsed" class="headerlink" title="set_column($first_col, $last_col, $width, $format, $hidden, $level, $collapsed)"></a>set_column($first_col, $last_col, $width, $format, $hidden, $level, $collapsed)</h6><p>设置列属性，同上</p><h6 id="merge-range-first-row-first-col-last-row-last-col-token-format-utf-16-be"><a href="#merge-range-first-row-first-col-last-row-last-col-token-format-utf-16-be" class="headerlink" title="merge_range($first_row, $first_col, $last_row, $last_col, $token, $format, $utf_16_be)"></a>merge_range($first_row, $first_col, $last_row, $last_col, $token, $format, $utf_16_be)</h6><p>合并单元格，如下：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs arcade">my <span class="hljs-symbol">$format</span> = <span class="hljs-symbol">$wor</span>kbook-&gt;add_format(<br>                                    <span class="hljs-function"><span class="hljs-params">border</span>  =&gt;</span> <span class="hljs-number">6</span>,<br>                                    valign  =&gt; <span class="hljs-string">&#x27;vcenter&#x27;</span>,<br>                                    align   =&gt; <span class="hljs-string">&#x27;center&#x27;</span>,<br>                                  );<br><br><span class="hljs-symbol">$wor</span>ksheet-&gt;merge_range(<span class="hljs-string">&#x27;B3:D4&#x27;</span>, <span class="hljs-string">&#x27;Vertical and horizontal&#x27;</span>, <span class="hljs-symbol">$format</span>);<br></code></pre></td></tr></table></figure><h6 id="set-zoom-scale"><a href="#set-zoom-scale" class="headerlink" title="set_zoom($scale)"></a>set_zoom($scale)</h6><p>设置 zoom 属性</p><h6 id="right-to-left"><a href="#right-to-left" class="headerlink" title="right_to_left()"></a>right_to_left()</h6><p>颠倒 A1 的位置</p><h6 id="hide-zero"><a href="#hide-zero" class="headerlink" title="hide_zero()"></a>hide_zero()</h6><p>隐藏为 0 的值，如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$worksheet</span>-&gt;hide_zero();</span><br></code></pre></td></tr></table></figure><h6 id="set-tab-color"><a href="#set-tab-color" class="headerlink" title="set_tab_color()"></a>set_tab_color()</h6><p>设置 sheet Tab 的颜色，如下：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">$<span class="hljs-function"><span class="hljs-title">worksheet1</span>-&gt;</span>set_tab_color(<span class="hljs-string">&#x27;red&#x27;</span>);<br>$<span class="hljs-function"><span class="hljs-title">worksheet2</span>-&gt;</span>set_tab_color(<span class="hljs-number">0</span>x0C);<br></code></pre></td></tr></table></figure><h6 id="autofilter-first-row-first-col-last-row-last-col"><a href="#autofilter-first-row-first-col-last-row-last-col" class="headerlink" title="autofilter($first_row, $first_col, $last_row, $last_col)"></a>autofilter($first_row, $first_col, $last_row, $last_col)</h6><p>自动筛选，如下：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>autofilter(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>);<br>$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>autofilter(<span class="hljs-string">&#x27;A1:D11&#x27;</span>);    # Same <span class="hljs-keyword">as</span> above <span class="hljs-built_in">in</span> A1 notation.<br></code></pre></td></tr></table></figure><h6 id="filter-column-column-expression"><a href="#filter-column-column-expression" class="headerlink" title="filter_column($column, $expression)"></a>filter_column($column, $expression)</h6><p>设置筛选条件，如下：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>filter_column(<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;x &gt; 2000&#x27;</span>);<br>$<span class="hljs-function"><span class="hljs-title">worksheet</span>-&gt;</span>filter_column(<span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;x &gt; 2000 and x &lt; 5000&#x27;</span>);<br></code></pre></td></tr></table></figure><p>运算符如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">运算符</span>         <span class="hljs-string">近义词</span><br>  <span class="hljs-string">==</span>           <span class="hljs-string">=</span>   <span class="hljs-string">eq</span>  <span class="hljs-string">=~</span><br>  <span class="hljs-type">!=</span>           <span class="hljs-string">&lt;&gt;</span>  <span class="hljs-string">ne</span>  <span class="hljs-type">!=</span><br>  <span class="hljs-string">&gt;</span><br><span class="hljs-string">  &lt;</span><br><span class="hljs-string">  &gt;=</span><br><span class="hljs-string">  &lt;=</span><br><span class="hljs-string"></span><br>  <span class="hljs-string">and</span>          <span class="hljs-string">&amp;&amp;</span><br>  <span class="hljs-string">or</span>           <span class="hljs-string">||</span><br></code></pre></td></tr></table></figure><p><code>*</code> 表示一个或多个字符， <code>？</code> 表示一个字符</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs 1c">&#x27;x == Blanks&#x27;     <span class="hljs-meta">#空白</span><br>&#x27;x == NonBlanks&#x27;  <span class="hljs-meta">#不为空白</span><br>&#x27;Top    10 Items&#x27; <span class="hljs-meta">#前10个</span><br>&#x27;Bottom  5 Items&#x27; <span class="hljs-meta">#后5个</span><br>&#x27;Top    25 %&#x27;     <span class="hljs-meta">#前25%</span><br>&#x27;Bottom 50 %&#x27;     <span class="hljs-meta">#后50%</span><br>&#x27;x =~ b*&#x27;         <span class="hljs-meta"># 以b开头</span><br>&#x27;x !~ b*&#x27;         <span class="hljs-meta"># 不以b开头</span><br>&#x27;x =~ *b&#x27;         <span class="hljs-meta"># 以b结尾</span><br>&#x27;x !~ *b&#x27;         <span class="hljs-meta"># 不以b结尾</span><br>&#x27;x =~ *b*&#x27;        <span class="hljs-meta">#  包含b</span><br>&#x27;x !~ *b*&#x27;        <span class="hljs-meta"># 不包含b</span><br></code></pre></td></tr></table></figure><h4 id="format"><a href="#format" class="headerlink" title="format"></a>format</h4><h6 id="set-format-properties-properties"><a href="#set-format-properties-properties" class="headerlink" title="set_format_properties(%properties)"></a>set_format_properties(%properties)</h6><p>设置单元格属性，如下：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">my <span class="hljs-symbol">$format</span> = <span class="hljs-symbol">$wor</span>kbook-&gt;add_format();<br><span class="hljs-symbol">$format</span>-&gt;set_format_properties(<span class="hljs-function"><span class="hljs-params">bold</span> =&gt;</span> <span class="hljs-number">1</span>, color =&gt; <span class="hljs-string">&#x27;red&#x27;</span>);<br></code></pre></td></tr></table></figure><h6 id="set-font-fontname"><a href="#set-font-fontname" class="headerlink" title="set_font($fontname)"></a>set_font($fontname)</h6><p>设置字体，默认为 <code>Arial</code> ，如下：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">$<span class="hljs-function"><span class="hljs-title">format</span>-&gt;</span>set_font(<span class="hljs-string">&#x27;Times New Roman&#x27;</span>);<br></code></pre></td></tr></table></figure><h6 id="set-size"><a href="#set-size" class="headerlink" title="set_size()"></a>set_size()</h6><p>设置字体大小，默认大小为 <code>10</code> ,如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams">my <span class="hljs-symbol">$</span>format = <span class="hljs-symbol">$</span>workbook-&gt;add_format();<br><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;set_size(30);</span><br></code></pre></td></tr></table></figure><h6 id="set-color"><a href="#set-color" class="headerlink" title="set_color()"></a>set_color()</h6><p>设置字体颜色，如下：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># <span class="hljs-string">&#x27;black&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;blue&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;brown&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;cyan&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;gray&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;green&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;lime&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;magenta&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;navy&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;orange&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;pink&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;purple&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;red&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;silver&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;white&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;yellow&#x27;</span></span><br><br>my $format = $workbook-&gt;add_format()<span class="hljs-comment">;</span><br>$format-&gt;set_color(<span class="hljs-string">&#x27;red&#x27;</span>)<span class="hljs-comment">;</span><br>$worksheet-&gt;write(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;wheelbarrow&#x27;</span>, $format)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h6 id="set-bold"><a href="#set-bold" class="headerlink" title="set_bold()"></a>set_bold()</h6><p>是否开启加粗。一般情况下可以添加 100-1000 的参数。400 表示正常，700 表示加粗，1000 表示非常粗。但最好是不写，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$format</span>-&gt;set_bold(); <span class="hljs-comment">#加粗</span><br></code></pre></td></tr></table></figure><h6 id="set-italic"><a href="#set-italic" class="headerlink" title="set_italic()"></a>set_italic()</h6><p>设置斜体，如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-keyword">$format</span>-&gt;set_italic();</span><br></code></pre></td></tr></table></figure><h6 id="set-underline"><a href="#set-underline" class="headerlink" title="set_underline()"></a>set_underline()</h6><p>设置下划线，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$format</span>-&gt;set_underline(<span class="hljs-number">0</span>); <span class="hljs-comment">#取消下划线</span><br><span class="hljs-variable">$format</span>-&gt;set_underline(); <span class="hljs-comment">#设置下划线</span><br><span class="hljs-variable">$format</span>-&gt;set_underline(<span class="hljs-number">1</span>); <span class="hljs-comment">#设置下划线</span><br><span class="hljs-variable">$format</span>-&gt;set_underline(<span class="hljs-number">2</span>); <span class="hljs-comment">#设置双下划线</span><br></code></pre></td></tr></table></figure><h6 id="set-font-strikeout"><a href="#set-font-strikeout" class="headerlink" title="set_font_strikeout()"></a>set_font_strikeout()</h6><p>设置删除线</p><h6 id="set-font-script"><a href="#set-font-script" class="headerlink" title="set_font_script()"></a>set_font_script()</h6><p>设置角标，如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>=&gt; 正常<br><span class="hljs-symbol">1 </span>=&gt; 上角标<br><span class="hljs-symbol">2 </span>=&gt; 下角标<br></code></pre></td></tr></table></figure><h6 id="set-num-format"><a href="#set-num-format" class="headerlink" title="set_num_format()"></a>set_num_format()</h6><p>设置数字格式，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs perl">$format01-&gt;set_num_format(<span class="hljs-string">&#x27;0.000&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">0</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">3.1415926</span>, $format01);    <span class="hljs-comment"># 3.142</span><br><br>$format02-&gt;set_num_format(<span class="hljs-string">&#x27;#,##0&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">1</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">1234.56</span>,   $format02);    <span class="hljs-comment"># 1,235</span><br><br>$format03-&gt;set_num_format(<span class="hljs-string">&#x27;#,##0.00&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">2</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">1234.56</span>,   $format03);    <span class="hljs-comment"># 1,234.56</span><br><br>$format04-&gt;set_num_format(<span class="hljs-string">&#x27;$0.00&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">3</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">49.99</span>,     $format04);    <span class="hljs-comment"># $49.99</span><br><br><span class="hljs-comment"># Note you can use other currency symbols such as the pound or yen as well.</span><br><span class="hljs-comment"># Other currencies may require the use of Unicode.</span><br><br>$format07-&gt;set_num_format(<span class="hljs-string">&#x27;mm/dd/yy&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">6</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">36892.521</span>, $format07);    <span class="hljs-comment"># 01/01/01</span><br><br>$format08-&gt;set_num_format(<span class="hljs-string">&#x27;mmm d yyyy&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">7</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">36892.521</span>, $format08);    <span class="hljs-comment"># Jan 1 2001</span><br><br>$format09-&gt;set_num_format(<span class="hljs-string">&#x27;d mmmm yyyy&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">8</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">36892.521</span>, $format09);    <span class="hljs-comment"># 1 January 2001</span><br><br>$format10-&gt;set_num_format(<span class="hljs-string">&#x27;dd/mm/yyyy hh:mm AM/PM&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">9</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">36892.521</span>, $format10);    <span class="hljs-comment"># 01/01/2001 12:30 AM</span><br><br>$format11-&gt;set_num_format(<span class="hljs-string">&#x27;0 &quot;dollar and&quot; .00 &quot;cents&quot;&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1.87</span>,      $format11);    <span class="hljs-comment"># 1 dollar and .87 cents</span><br><br><span class="hljs-comment"># Conditional formatting</span><br>$format12-&gt;set_num_format(<span class="hljs-string">&#x27;[Green]General;[Red]-General;General&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">11</span>, <span class="hljs-number">0</span>, <span class="hljs-number">123</span>,       $format12);    <span class="hljs-comment"># &gt; 0 Green</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">12</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">45</span>,       $format12);    <span class="hljs-comment"># &lt; 0 Red</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">13</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,         $format12);    <span class="hljs-comment"># = 0 Default colour</span><br><br><span class="hljs-comment"># Zip code</span><br>$format13-&gt;set_num_format(<span class="hljs-string">&#x27;00000&#x27;</span>);<br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-number">14</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;01209&#x27;</span>,   $format13);<br></code></pre></td></tr></table></figure><h6 id="set-locked"><a href="#set-locked" class="headerlink" title="set_locked()"></a>set_locked()</h6><p>是否上锁，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $locked  = $workbook-&gt;add_format();<br>$locked-&gt;set_locked(<span class="hljs-number">1</span>); <span class="hljs-comment"># A non-op</span><br><br><span class="hljs-keyword">my</span> $unlocked = $workbook-&gt;add_format();<br>$locked-&gt;set_locked(<span class="hljs-number">0</span>);<br><br><span class="hljs-comment"># Enable worksheet protection</span><br>$worksheet-&gt;protect();<br><br><span class="hljs-comment"># This cell cannot be edited.</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A1&#x27;</span>, <span class="hljs-string">&#x27;=1+2&#x27;</span>, $locked);<br><br><span class="hljs-comment"># This cell can be edited.</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A2&#x27;</span>, <span class="hljs-string">&#x27;=1+2&#x27;</span>, $unlocked);<br></code></pre></td></tr></table></figure><h6 id="set-hidden"><a href="#set-hidden" class="headerlink" title="set_hidden()"></a>set_hidden()</h6><p>是否隐藏，如下：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">my</span> $hidden = $workbook-&gt;add_format();<br>$hidden-&gt;set_hidden();<br><br><span class="hljs-comment"># Enable worksheet protection</span><br>$worksheet-&gt;protect();<br><br><span class="hljs-comment"># The formula in this cell isn&#x27;t visible</span><br>$worksheet-&gt;<span class="hljs-keyword">write</span>(<span class="hljs-string">&#x27;A1&#x27;</span>, <span class="hljs-string">&#x27;=1+2&#x27;</span>, $hidden);<br></code></pre></td></tr></table></figure><h6 id="set-align"><a href="#set-align" class="headerlink" title="set_align()"></a>set_align()</h6><p>设置对齐方式，如下：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs autoit">Horizontal<br><span class="hljs-meta"># <span class="hljs-string">&#x27;left&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;center&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;right&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;fill&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;justify&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;center_across&#x27;</span></span><br><br>Vertical<br><span class="hljs-meta"># <span class="hljs-string">&#x27;top&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;vcenter&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;bottom&#x27;</span></span><br><span class="hljs-meta"># <span class="hljs-string">&#x27;vjustify&#x27;</span></span><br></code></pre></td></tr></table></figure><h6 id="set-bg-color"><a href="#set-bg-color" class="headerlink" title="set_bg_color()"></a>set_bg_color()</h6><p>设置背景色</p><h6 id="set-fg-color"><a href="#set-fg-color" class="headerlink" title="set_fg_color()"></a>set_fg_color()</h6><p>设置前景色</p><h6 id="set-border"><a href="#set-border" class="headerlink" title="set_border()"></a>set_border()</h6><p>设置边框，如下：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs abnf">Index   Name            Weight   Style<br><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span>   <span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span>   <span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span>   <span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><br><span class="hljs-number">0</span>       None            <span class="hljs-number">0</span><br><span class="hljs-number">1</span>       Continuous      <span class="hljs-number">1</span>        -----------<br><span class="hljs-number">2</span>       Continuous      <span class="hljs-number">2</span>        -----------<br><span class="hljs-number">3</span>       Dash            <span class="hljs-number">1</span>        - - - - - -<br><span class="hljs-number">4</span>       Dot             <span class="hljs-number">1</span>        . . . . . .<br><span class="hljs-number">5</span>       Continuous      <span class="hljs-number">3</span>        -----------<br><span class="hljs-number">6</span>       Double          <span class="hljs-number">3</span>        <span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><br><span class="hljs-number">7</span>       Continuous      <span class="hljs-number">0</span>        -----------<br><span class="hljs-number">8</span>       Dash            <span class="hljs-number">2</span>        - - - - - -<br><span class="hljs-number">9</span>       Dash Dot        <span class="hljs-number">1</span>        - . - . - .<br><span class="hljs-number">10</span>      Dash Dot        <span class="hljs-number">2</span>        - . - . - .<br><span class="hljs-number">11</span>      Dash Dot Dot    <span class="hljs-number">1</span>        - . . - . .<br><span class="hljs-number">12</span>      Dash Dot Dot    <span class="hljs-number">2</span>        - . . - . .<br><span class="hljs-number">13</span>      SlantDash Dot   <span class="hljs-number">2</span>        / - . / - .<br></code></pre></td></tr></table></figure><h6 id="set-border-color"><a href="#set-border-color" class="headerlink" title="set_border_color()"></a>set_border_color()</h6><p>设置边框颜色</p><h6 id="copy-format"><a href="#copy-format" class="headerlink" title="copy($format)"></a>copy($format)</h6><p>格式刷</p><h6 id="更多详情请移步-Spreadsheet-WriteExcel-的官方资料"><a href="#更多详情请移步-Spreadsheet-WriteExcel-的官方资料" class="headerlink" title="更多详情请移步 Spreadsheet::WriteExcel 的官方资料"></a>更多详情请移步 <a href="https://metacpan.org/pod/Spreadsheet::WriteExcel">Spreadsheet::WriteExcel</a> 的官方资料</h6><hr>]]></content>
    
    
    <categories>
      
      <category>Perl</category>
      
      <category>Excel</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Perl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IT在线课堂有哪些</title>
    <link href="/IT%E5%9C%A8%E7%BA%BF%E8%AF%BE%E5%A0%82%E6%9C%89%E5%93%AA%E4%BA%9B/"/>
    <url>/IT%E5%9C%A8%E7%BA%BF%E8%AF%BE%E5%A0%82%E6%9C%89%E5%93%AA%E4%BA%9B/</url>
    
    <content type="html"><![CDATA[<blockquote><p>想当初，我还在读大二时候就对安卓编程特别感兴趣。可惜了，学校没这门课，而我又是生物技术专业的人，更是没有良师益友可以拜访，于是只能奔走于各大图书馆。现在可好了，网上各种视频教学网站百花齐放，于是整理一下我常用的视频教学网站，供大家参考。</p></blockquote><span id="more"></span><div style="display:flex;border:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT在线课堂有哪些-1.png" alt="慕课网" style="border-style:none;margin:0px;"/>            <a href="https://www.imooc.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">慕课网</a>        </div>        <p style="margin:0px;">慕课网（IMOOC）是IT技能学习平台。可谓是程序猿的梦工厂，涵盖所有IT相关的教程视频，我的很多门编程语言启蒙老师都是它。免费视频的质量很不错，至于收费视频的质量嘛，我没用过，就不置可否了。。。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT在线课堂有哪些-2.png" alt="极客学院" style="border-style:none;margin:0px;"/>            <a href="http://wiki.jikexueyuan.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">极客学院</a>        </div>        <p style="margin:0px;">极客学院 Wiki 为中国最大 IT 职业在线教育平台极客学院旗下图文开发技术教程站点，拥有海量 IT 图文教程，涵盖 30+ 个技术领域，如 Android, iOS, Java, Python, HTML5, Swift, Cocos2dx, Apple Watch 等图文教程。</p>    </div></div><div style="display:flex;border-left:1px solid #cdcdcd;border-right:1px solid #cdcdcd;border-bottom:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT在线课堂有哪些-3.png" alt="网易云课堂" style="border-style:none;margin:0px;"/>            <a href="https://study.163.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">网易云课堂</a>        </div>        <p style="margin:0px;">网易云课堂，一个专注职业技能提升的在线学习平台。立足于实用性的要求，与多家教育培训机构和行业的专家、讲师建立合作，聚合了丰富的学习内容，包括课程、电子书、文章、短视频、音频等。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT在线课堂有哪些-4.png" alt="51CTO学院" style="border-style:none;margin:0px;"/>            <a href="https://edu.51cto.com/" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">51CTO学院</a>        </div>        <p style="margin:0px;">51CTO学院涵盖Python、大数据、区块链、IT考证等培训领域，随到随学、通关学习、一对一辅导。</p>    </div></div><div style="display:flex;border-left:1px solid #cdcdcd;border-right:1px solid #cdcdcd;border-bottom:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT在线课堂有哪些-5.png" alt="腾讯课堂" style="border-style:none;margin:0px;"/>            <a href="https://ke.qq.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">腾讯课堂</a>        </div>        <p style="margin:0px;">腾讯课堂-腾讯推出的专业在线教育平台，聚合大量优质教育机构和名师，下设职业培训、公务员考试、托福雅思、考证考级、英语口语、中小学教育等众多在线学习精品课程，打造老师在线上课教学、学生及时互动学习的课堂。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT在线课堂有哪些-6.png" alt="汇智网" style="border-style:none;margin:0px;"/>            <a href="http://www.hubwiz.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">汇智网</a>        </div>        <p style="margin:0px;">汇智网是一个学习最前沿编程技术的平台，提供了mongodb，node.js，javascript，jquery等相关的课程。互动式的学习和实时在线的练习，能让你迅速进入状态，快速完成课程学习。</p>    </div></div><div style="display:flex;border-left:1px solid #cdcdcd;border-right:1px solid #cdcdcd;border-bottom:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT在线课堂有哪些-7.png" alt="HTML中文网" style="border-style:none;margin:0px;"/>            <a href="https://www.html.cn" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">HTML中文网</a>        </div>        <p style="margin:0px;">html中文网是一个专业的web前端开发在线学习、培训、交流平台。大量精品前端学习图文、视频教程及下载资源，可边学习边编程实战，快速成为前端工程师。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT在线课堂有哪些-8.png" alt="Swift课堂" style="border-style:none;margin:0px;"/>            <a href="http://www.swiftv.cn" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">Swift课堂</a>        </div>        <p style="margin:0px;">SwiftV课堂是国内氛围最好的swift学习、交流网站，提供上千套swift视频，swift教程免费观看。</p>    </div></div><hr>]]></content>
    
    
    <categories>
      
      <category>导航</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IT在线课堂</tag>
      
      <tag>导航</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac打包dmg文件(更换背景图)</title>
    <link href="/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)/"/>
    <url>/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)/</url>
    
    <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-1.png" alt="image"></p><span id="more"></span><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>事前准备好一张背景图片和应用程序 app，如下图：</li></ul><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-2.png" alt="image"></p><ul><li><p>获取 <code>应用程序</code> 文件夹的替身，如下：</p><ol><li>打开 <code>达访窗口</code> -&gt; 右键 <code>应用程序</code> -&gt; <code>在上层文件夹中显示</code></li></ol><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-3.png" alt="image"></p><ol start="2"><li>新窗口中 -&gt; 右键点击 <code>应用程序</code> 文件夹 -&gt; <code>制作替身</code></li></ol><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-4.png" alt="image"></p></li></ul><h2 id="制作"><a href="#制作" class="headerlink" title="制作"></a>制作</h2><ol><li><p>打开 <code>磁盘工具</code> -&gt; <code>文件</code> -&gt; <code>新建磁盘</code> -&gt; <code>空白映像</code> ，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-5.png" alt="image"></p></li><li><p>配置信息：<br><code>存储为</code>：任意文件名均可，可和文件夹同名<br><code>名称</code>：建议设置为软件安装包的名称，这将是软件安装卷的名字<br><code>大小容量</code>：不低于所有需打包文件的容量之和<br><code>分区</code>：有的教程说要选择：<code>CD/DVD</code>，这里不要修改默认设置。我试过了，如果修改成 <code>CD/DVD</code> 则最多只能制作 500M 大小的 dmg 文件</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-6.png" alt="image"></p></li><li><p>右键点击 <code>磁盘工具</code> 中 <code>新建的磁盘映像</code> ，点击 <code>在达访中显示</code> ，此时出现空白窗口，将需打包的所有文件拖进去，并摆放整齐，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-7.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-8.png" alt="image"></p></li><li><p>窗口空白处右键 <code>查看显示选项</code> ，将窗口中的背景图片拖到箭头所指的框内，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-9.png" alt="image"></p></li><li><p>隐藏背景图片，输入如下代码：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chflags hidden <span class="hljs-regexp">/Volumes/</span>未命名/bg-<span class="hljs-number">2</span>.png<br></code></pre></td></tr></table></figure><ul><li>注意：<code>未命名</code> 换成步骤 2 中创建空白映像时自定义的 <code>名称</code></li><li>注意：bg-2.png 换成背景图片的 <code>文件名.后缀</code></li><li>注意：显示图片的代码为:</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chflags nohidden <span class="hljs-regexp">/Volumes/</span>未命名/bg-<span class="hljs-number">2</span>.png<br></code></pre></td></tr></table></figure></li><li><p>调整窗口大小，如下图：</p></li></ol><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-1.png" alt="image"></p><ol start="7"><li><code>磁盘工具</code> -&gt; <code>映像</code> -&gt; <code>转换</code><ul><li>注意：转换前，务必将桌面上的磁盘映像弹出，否则会转换失败</li></ul></li></ol><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-10.png" alt="image"></p><ol start="8"><li>配置转换信息，可以选择 <code>加密</code> ，如下：</li></ol><p><img src="https://pangao1990.gitee.io/pic/Mac%E6%89%93%E5%8C%85dmg%E6%96%87%E4%BB%B6(%E6%9B%B4%E6%8D%A2%E8%83%8C%E6%99%AF%E5%9B%BE)-11.png" alt="image"></p><ol start="9"><li>完成。</li></ol><blockquote><p>ps：制作网址快捷方式<br>打开 Safari 浏览器 -&gt; 打开你的网址 -&gt; 点击地址栏 -&gt; 在网址前会出现一个网站图标 -&gt; 拖动图标到桌面上，你的网址快捷位置按钮就生成了。</p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>IT实用技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>dmg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IT技术社区有哪些</title>
    <link href="/IT%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%E6%9C%89%E5%93%AA%E4%BA%9B/"/>
    <url>/IT%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%E6%9C%89%E5%93%AA%E4%BA%9B/</url>
    
    <content type="html"><![CDATA[<blockquote><p>技术社区一般有三类人：第一类是善于检索答案的人，即遇到问题时在社区寻找答案，绝大部分初级程序员都是通过这种方式来了解技术社区的；第二类是善于学习技术的人，即有意识的常去技术社区查看博客，学习新知识；第三类是善于解决问题的人，喜欢分享某一类技术，或者他们的实战经历。往往写文章的人，也喜欢看文章。</p></blockquote><span id="more"></span><h2 id="中文社区"><a href="#中文社区" class="headerlink" title="中文社区"></a>中文社区</h2><div style="display:flex;border:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-1.jpg" alt="CSDN" style="border-style:none;margin:0px;"/>            <a href="https://www.csdn.net" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">CSDN</a>        </div>        <p style="margin:0px;">CSDN是一个专业的IT技术社区，致力于为中国软件开发者提供知识传播、在线学习、职业发展等全生命周期服务。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-2.png" alt="开源中国" style="border-style:none;margin:0px;"/>            <a href="https://www.oschina.net" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">开源中国</a>        </div>        <p style="margin:0px;">开源中国是目前中国最大的开源技术社区。我们传播开源的理念，推广开源项目，为 IT 开发者提供了一个发现、使用、并交流开源技术的平台。目前开源中国社区已收录近五万款开源软件。</p>    </div></div><div style="display:flex;border-left:1px solid #cdcdcd;border-right:1px solid #cdcdcd;border-bottom:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-3.png" alt="掘金" style="border-style:none;margin:0px;"/>            <a href="https://juejin.im" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">掘金</a>        </div>        <p style="margin:0px;">掘金是一个帮助开发者成长的社区，技术文章由稀土上聚集的技术大牛和极客共同编辑为你筛选出最优质的干货，其中包括：Android、iOS、前端、后端等方面的内容。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-4.png" alt="简书" style="border-style:none;margin:0px;"/>            <a href="https://www.jianshu.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">简书</a>        </div>        <p style="margin:0px;">简书是一个优质的创作社区，在这里，你可以任性地创作，一篇短文、一张照片、一首诗、一幅画……我们相信，每个人都是生活中的艺术家，有着无穷的创造力。</p>    </div></div><div style="display:flex;border-left:1px solid #cdcdcd;border-right:1px solid #cdcdcd;border-bottom:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-5.jpg" alt="思否" style="border-style:none;margin:0px;"/>            <a href="https://segmentfault.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">思否</a>        </div>        <p style="margin:0px;">SegmentFault 思否 为开发者提供问答、学习与交流编程知识的平台，创造属于开发者的时代！</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-6.jpg" alt="知乎" style="border-style:none;margin:0px;"/>            <a href="https://www.zhihu.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">知乎</a>        </div>        <p style="margin:0px;">有问题，上知乎。知乎，可信赖的问答社区，以让每个人高效获得可信赖的解答为使命。用户通过问答等交流方式建立信任和连接，打造和提升个人影响力，并发现、获得新机会。</p>    </div></div><div style="display:flex;border-left:1px solid #cdcdcd;border-right:1px solid #cdcdcd;border-bottom:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-7.png" alt="V2EX" style="border-style:none;margin:0px;"/>            <a href="https://www.v2ex.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">V2EX</a>        </div>        <p style="margin:0px;">V2EX = way to explore  是创意工作者们的社区。这里目前汇聚了超过 250,000 名主要来自互联网行业、游戏行业和媒体行业的创意工作者。V2EX 希望能够成为创意工作者们的生活和事业的一部分。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-8.png" alt="51CTO" style="border-style:none;margin:0px;"/>            <a href="http://www.51cto.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">51CTO</a>        </div>        <p style="margin:0px;">中国领先的IT技术网站51CTO主要为IT技术人员提供新闻资讯、技术文档、BBS、博客、技术圈、培训课程、人才交流等专业服务。</p>    </div></div><div style="display:flex;border-left:1px solid #cdcdcd;border-right:1px solid #cdcdcd;border-bottom:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-9.png" alt="ITPUB技术论坛" style="border-style:none;margin:0px;"/>            <a href="http://www.itpub.net" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">ITPUB技术论坛</a>        </div>        <p style="margin:0px;">ITPUB技术论坛专门立足讨论数据库、ERP、技术开发、操作系统、网络等方面的技术问题。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-10.png" alt="博客园" style="border-style:none;margin:0px;"/>            <a href="https://www.cnblogs.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">博客园</a>        </div>        <p style="margin:0px;">博客园是一个面向开发者的知识分享社区。一直致力并专注于为开发者打造一个纯净的技术交流社区，推动并帮助开发者通过互联网分享知识，从而让更多开发者从中受益。</p>    </div></div><div style="display:flex;border-left:1px solid #cdcdcd;border-right:1px solid #cdcdcd;border-bottom:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-11.png" alt="威锋网" style="border-style:none;margin:0px;"/>            <a href="https://www.feng.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">威锋网</a>        </div>        <p style="margin:0px;">威锋网是较早建立的关于iPhone专题网站，威锋网论坛一直是人气中文iPhone、iPad、MAC社区。目前网站提供iPhone软件评测、音乐、电影、铃声下载等服务。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-12.png" alt="ChinaUnix" style="border-style:none;margin:0px;"/>            <a href="http://www.chinaunix.net" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">ChinaUnix</a>        </div>        <p style="margin:0px;">ChinaUnix.net提供交流程序开发、数据库、存储备份、服务器技术、网络安全等技术，并提供IT人才招聘、软件下载、BLOG、IT培训等服务。</p>    </div></div><h2 id="英文社区"><a href="#英文社区" class="headerlink" title="英文社区"></a>英文社区</h2><div style="display:flex;border:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-13.png" alt="stackoverflow" style="border-style:none;margin:0px;"/>            <a href="https://stackoverflow.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">stackoverflow</a>        </div>        <p style="margin:0px;">全球最受程序员欢迎的IT技术问答社区，没有之一。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-14.png" alt="Reddit" style="border-style:none;margin:0px;"/>            <a href="https://www.reddit.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">Reddit</a>        </div>        <p style="margin:0px;">Reddit是个社交新闻站点，口号：提前于新闻发生，来自互联网的声音。是一个提供兴趣讨论社区、编程开发问题和热点资讯的平台。</p>    </div></div><div style="display:flex;border-left:1px solid #cdcdcd;border-right:1px solid #cdcdcd;border-bottom:1px solid #cdcdcd;">    <div style="width:50%;padding-left:20px;padding-right:20px;border-right:1px solid #cdcdcd;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-15.png" alt="Hacker News" style="border-style:none;margin:0px;"/>            <a href="https://news.ycombinator.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">Hacker News</a>        </div>        <p style="margin:0px;">Hacker News是一个提供专业技术分享的社区，包括文章、图像视频等。页面极其简单，没有广告。</p>    </div>    <div style="width:50%;padding-left:20px;padding-right:20px;">        <div style="display:flex;margin:0px;">            <img src="https://pangao1990.gitee.io/pic/IT技术社区有哪些-16.png" alt="DZone" style="border-style:none;margin:0px;"/>            <a href="https://dzone.com" target="_blank" style="margin:auto auto auto 20px;font-size:20px;">DZone</a>        </div>        <p style="margin:0px;">DZone是一个创办早、用户多的IT新闻和编程资源的分享社区。</p>    </div></div><hr>]]></content>
    
    
    <categories>
      
      <category>导航</category>
      
    </categories>
    
    
    <tags>
      
      <tag>导航</tag>
      
      <tag>IT社区</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac安装软件提示“已损坏，打不开”的解决方法</title>
    <link href="/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E2%80%9C%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E2%80%9C%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h5 id="如图所示："><a href="#如图所示：" class="headerlink" title="如图所示："></a>如图所示：</h5><p><img src="https://pangao1990.gitee.io/pic/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E2%80%9C%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-1.png" alt="image"></p><p>或</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E2%80%9C%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-2.png" alt="image"></p><h5 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h5><span id="more"></span><p>依次打开【系统偏好设置】-&gt;【安全性与隐私】-&gt;【通用】，在【允许从以下位置下载的应用】中选择【任何来源】即可，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E2%80%9C%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-6.png" alt="image"></p><p>ps：如果是新版系统，默认情况下是不允许自己下载安装应用软件的，因此没有【任何来源】选项，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E2%80%9C%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-3.png" alt="image"></p><p>解决办法如下：</p><ul><li><p>打开终端，输入 <code>sudo spctl --master-disable</code> ，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E2%80%9C%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-4.png" alt="image"></p></li><li><p>输入用户密码，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E2%80%9C%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-5.png" alt="image"></p></li><li><p>即可选择【任何来源】，如下：</p><p><img src="https://pangao1990.gitee.io/pic/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E2%80%9C%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-6.png" alt="image"></p></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>IT实用技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>中国版权保护中心注册不了的解决办法</title>
    <link href="/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <url>/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<blockquote><p>大家应该知道，个人开发者要想上线自己的软件到第三方 APP 平台，多半是需要软件著作权的。因此，我今天打算注册账号、申请软著。于是有了这篇博客…</p></blockquote><p>按常规步骤，登录 <a href="http://www.ccopyright.com.cn/">中国版权保护中心官网</a> ，填写注册信息，点击 <code>同意...，提交...</code> 按钮，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-1.png" alt="image"></p><span id="more"></span><p>我仿如一个智障似的等了几秒钟，什么都没发生！于是猜测这种“官方网站”又犯了惯有的毛病，那就是向下兼容 IE9，8，7，6，5…，却很遗憾的不支持新世纪的浏览器。遂在官网的常见问题中找寻答案，果不其然，见下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-2.png" alt="image"></p><p>于是，我又在 <a href="https://pangao1990.github.io/ParallelsDesktop-%E8%99%9A%E6%8B%9F%E6%9C%BAMac%E7%BB%BF%E8%89%B2%E7%89%88/">ParallelsDesktop 虚拟机</a> 上的 win 7 系统中找到自带的 IE8 浏览器，寄希望能顺利解决。但可惜了，问题依旧存在。没得法，打开页面源代码，找八哥了。</p><p>如下图，我傻了，这么多报错信息。。。这可是我们国家的版权保护中心官网啊：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-3.png" alt="image"></p><p>于是，开始找 bug。报错信息太多了，清空。按步骤一步步操作，一步步看报错信息。在 <code>提交</code> 这一步提示 <code>找不到变量 g_emailOk</code> ，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-4.png" alt="image"></p><p>猜测，找不到判断邮箱格式正确性的变量，于是在 <code>console</code> 里敲入 <code>g_emailOk = true</code> 回车。OK，注册成功！如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-5.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-6.png" alt="image"></p><p>至此，问题解决。但是不找到原因我睡不着，接着来。在源代码中检索变量 <code>g_emailOk</code>，找到 <code>提交</code> 按钮的部分代码，如下：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-7.png" alt="image"></p><p>上面就是点击 <code>提交</code> 按钮报错了，但是没有给予任何提示信息的核心代码。 <code>if</code> 后面没有 <code>else</code> 代码，所以网站呈现出来的效果就是“<strong>要么成功，要么无解</strong>”。哎，这个用户体验，我是服气的 - -！</p><p>接着来，定位到 <code>输入邮箱</code> 的代码片段，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-8.png" alt="image"></p><p>在核查邮箱格式之前，代码需要运行一个函数 <code>inputOnfocus()</code> 。找了一下，没有找到这个函数。回到最初的报错信息，可以找到原因。那就是缺少 <code>register.js</code> 文件，函数 <code>inputOnfocus()</code> 就在 <code>register.js</code> 文件里。如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E4%B8%AD%E5%9B%BD%E7%89%88%E6%9D%83%E4%BF%9D%E6%8A%A4%E4%B8%AD%E5%BF%83%E6%B3%A8%E5%86%8C%E4%B8%8D%E4%BA%86%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95-9.png" alt="image"></p><p>到这里，我的问题圆满解决了。但是，这个网站留下的 bug 问题、映射出相关部门的问题，还没有解决，我表示力不从心…哎 - -！</p><hr>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>Bug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown从入门到精通</title>
    <link href="/Markdown%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <url>/Markdown%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<img src="https://pangao1990.gitee.io/pic/Markdown从入门到精通-1.png" width = "300" height = "300" align=center /><span id="more"></span><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><ul><li><h3 id="主标题"><a href="#主标题" class="headerlink" title="主标题:"></a>主标题:</h3></li></ul><p>【语法】</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">主标题文字 (空行) <span class="hljs-operator">=</span><span class="hljs-operator">=</span>（两个及以上）<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">主标题文字（最高阶标题）</span><br><span class="hljs-section">==</span><br></code></pre></td></tr></table></figure><h1 id="主标题文字（最高阶标题）"><a href="#主标题文字（最高阶标题）" class="headerlink" title="主标题文字（最高阶标题）"></a>主标题文字（最高阶标题）</h1><p>【说明】相当于 H1 大纲标题效果，一般在首行应用和表示</p><ul><li><h3 id="副标题："><a href="#副标题：" class="headerlink" title="副标题："></a>副标题：</h3></li></ul><p>【语法】</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">副标题文字 (空行) <span class="hljs-built_in">--</span>(减号两个及以上)<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">主标题文字（第二阶标题）</span><br><span class="hljs-section">--</span><br></code></pre></td></tr></table></figure><h2 id="主标题文字（第二阶标题）"><a href="#主标题文字（第二阶标题）" class="headerlink" title="主标题文字（第二阶标题）"></a>主标题文字（第二阶标题）</h2><p>【说明】相当于 H2 大纲标题效果</p><ul><li><h3 id="H1-H6-大纲标题"><a href="#H1-H6-大纲标题" class="headerlink" title="H1~H6 大纲标题:"></a>H1~H6 大纲标题:</h3></li></ul><p>【语法】</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># (空格)文字</span><br></code></pre></td></tr></table></figure><p>1-6 等级分别在文字前加对应数量#，后面的#为可选，不加效果也一样。</p><p>【示例】</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 大纲标题文字 H1（等同 主标题）<br><br>## 大纲标题文字 H2（等同 副标题）<br><br>### 大纲标题文字 H3<br><br>#### 大纲标题文字 H4<br><br>##### 大纲标题文字 H5<br><br>###### 大纲标题文字 H6<br><br>####### 大纲标题文字 H7（最多<span class="hljs-number">6</span>阶）<br></code></pre></td></tr></table></figure><h1 id="大纲标题文字-H1（等同-主标题）"><a href="#大纲标题文字-H1（等同-主标题）" class="headerlink" title="大纲标题文字 H1（等同 主标题）"></a>大纲标题文字 H1（等同 主标题）</h1><h2 id="大纲标题文字-H2（等同-副标题）"><a href="#大纲标题文字-H2（等同-副标题）" class="headerlink" title="大纲标题文字 H2（等同 副标题）"></a>大纲标题文字 H2（等同 副标题）</h2><h3 id="大纲标题文字-H3"><a href="#大纲标题文字-H3" class="headerlink" title="大纲标题文字 H3"></a>大纲标题文字 H3</h3><h4 id="大纲标题文字-H4"><a href="#大纲标题文字-H4" class="headerlink" title="大纲标题文字 H4"></a>大纲标题文字 H4</h4><h5 id="大纲标题文字-H5"><a href="#大纲标题文字-H5" class="headerlink" title="大纲标题文字 H5"></a>大纲标题文字 H5</h5><h6 id="大纲标题文字-H6"><a href="#大纲标题文字-H6" class="headerlink" title="大纲标题文字 H6"></a>大纲标题文字 H6</h6><p>####### 大纲标题文字 H7（最多 6 阶）</p><p>【说明】最多 6 个等级的大纲标题，后面加上同等数量“（空格）#”效果也一样</p><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><p>【语法】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">TAGS：内容   或   标签： 内容<br></code></pre></td></tr></table></figure><p>在编辑区任意行的列首位置输入 tags&#x2F;标签：关键词 1 关键词 2 ， 多个用空格隔开。</p><p>【示例】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">标签：教程 Markdown<br></code></pre></td></tr></table></figure><p>标签：教程 Markdown</p><h1 id="目录（大纲）导航"><a href="#目录（大纲）导航" class="headerlink" title="目录（大纲）导航"></a>目录（大纲）导航</h1><p>【语法】</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">在段落中填写 <span class="hljs-selector-attr">[TOC]</span> （toc小写也可以）以显示各标题为结构的目录（大纲）导航。<br></code></pre></td></tr></table></figure><h1 id="强调或突出"><a href="#强调或突出" class="headerlink" title="强调或突出"></a>强调或突出</h1><ul><li><h3 id="斜体："><a href="#斜体：" class="headerlink" title="斜体："></a>斜体：</h3></li></ul><p>【语法】</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-emphasis">_斜体_</span> 或  <span class="hljs-strong">*斜体*</span> 在文字两边加 单下底线 或 单星号<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-emphasis">_斜体_</span> 或  <span class="hljs-strong">*斜体*</span><br></code></pre></td></tr></table></figure><p><em>斜体</em> 或 <em>斜体</em></p><ul><li><h3 id="粗体："><a href="#粗体：" class="headerlink" title="粗体："></a>粗体：</h3></li></ul><p>【语法】</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-emphasis">__粗体__</span> 或 <span class="hljs-strong">**粗体**</span> 在文字两边加 双下底线 或 双星号<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-emphasis">__粗体__</span> 或 <span class="hljs-strong">**粗体**</span><br></code></pre></td></tr></table></figure><p><strong>粗体</strong> 或 <strong>粗体</strong></p><ul><li><h3 id="删除线："><a href="#删除线：" class="headerlink" title="删除线："></a>删除线：</h3></li></ul><p>【语法】</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haml">~~删除线~~ 在文字两边加 双波浪号<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">这是带有 ~~删除线~~ 的文字<br></code></pre></td></tr></table></figure><p>这是带有 <del>删除线</del> 的文字</p><p>【说明】快速记忆：单斜双粗两波删</p><ul><li><h3 id="下划线："><a href="#下划线：" class="headerlink" title="下划线："></a>下划线：</h3></li></ul><p>【语法】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">在空白行下方添加三条“-”横线。（前面讲过在文字下方添加“-”，实现的2级标题）<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">这是下划线</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-string">你看到了吗？</span><br></code></pre></td></tr></table></figure><p>这是下划线</p><hr><p>你看到了吗？</p><h1 id="段落与分割"><a href="#段落与分割" class="headerlink" title="段落与分割"></a>段落与分割</h1><ul><li><h3 id="普通段落："><a href="#普通段落：" class="headerlink" title="普通段落："></a>普通段落：</h3></li></ul><p>【语法】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">用空行分隔，连着多个空行也是一个效果，只能空一行的间距。<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs">这是首行文字<br><br><br>这是尾行文字，实际中间我空了2行，但还是只显示空了一行的效果。<br><br>【说明】有的语法要用到空行才有效果（如主标题，列表），不空行的话默认又是会跟随上面语法特征（如表格语法前面就要空行后才有效果），应用时多加注意。<br></code></pre></td></tr></table></figure><p>这是首行文字</p><p>这是尾行文字，实际中间我空了 2 行，但还是只显示空了一行的效果。</p><p>【说明】有的语法要用到空行才有效果（如主标题，列表），不空行的话默认又是会跟随上面语法特征（如表格语法前面就要空行后才有效果），应用时多加注意。</p><ul><li><h3 id="水平分割线："><a href="#水平分割线：" class="headerlink" title="水平分割线："></a>水平分割线：</h3></li></ul><p>【语法】</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">3个及以上的 星号<span class="hljs-strong">***</span>或 减号---或 下底线<span class="hljs-emphasis">___</span>来表示。<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-strong">***</span><br></code></pre></td></tr></table></figure><hr><p>【说明】建议只固定选用一个，如三个星号***为标准，用减号—容易和副标题搞混。</p><ul><li><h3 id="强制换行："><a href="#强制换行：" class="headerlink" title="强制换行："></a>强制换行：</h3></li></ul><p>【语法】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">在行尾输入两个空格<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gcode">这句话<span class="hljs-comment">(空格)</span><span class="hljs-comment">(空格)</span><br>会<span class="hljs-comment">(空格)</span><span class="hljs-comment">(空格)</span><br>换行<br></code></pre></td></tr></table></figure><p>这句话<br> 会<br> 换行</p><p>【说明】强制换行比输入回车换行的行间距小很多</p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><ul><li><h3 id="网页链接（内联风格）："><a href="#网页链接（内联风格）：" class="headerlink" title="网页链接（内联风格）："></a>网页链接（内联风格）：</h3></li></ul><p>【语法】</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">[链接文字](http:<span class="hljs-regexp">//</span>链接地址)<span class="hljs-string">&quot;（空格）鼠标悬停显示文字（可选）&quot;</span><br></code></pre></td></tr></table></figure><p>“（空格）鼠标悬停显示文字”非必须项，在 pc 浏览器中能看到效果，手机移动端因无鼠标效果无法直接体现。</p><p>【示例】</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less">这是去往<span class="hljs-selector-attr">[本人博客]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//pangao1990.github.io)的链接。</span><br></code></pre></td></tr></table></figure><p>这是去往<a href="https://pangao1990.github.io/">本人博客</a>的链接。</p><ul><li><h3 id="链接的快速定义："><a href="#链接的快速定义：" class="headerlink" title="链接的快速定义："></a>链接的快速定义：</h3></li></ul><p>【语法】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">前面文档中引用链接的语法为：<br>[链接文字][<span class="hljs-built_in">id</span>]<br>前后<span class="hljs-built_in">id</span>要匹配一致，一般为数字，这样可以在文档的其他任意地方快速插入这个链接。<br><br>后面定义链接的语法为：<br>[<span class="hljs-built_in">id</span>]:（空格）http://链接地址（空格）<span class="hljs-string">&quot;鼠标悬停显示文字（可选）&quot;</span><br>后面的语法必须在列首并单独一行，适合前期不知道网址，后面再加入的情况。<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs less">这是去往<span class="hljs-selector-attr">[本人博客]</span><span class="hljs-selector-attr">[1]</span>的链接。<br><br><span class="hljs-selector-attr">[1]</span>: <span class="hljs-selector-tag">https</span>:<span class="hljs-comment">//pangao1990.github.io</span><br></code></pre></td></tr></table></figure><p>这是去往<a href="https://pangao1990.github.io/">本人博客</a>的链接。</p><ul><li><h3 id="链接的自动展示："><a href="#链接的自动展示：" class="headerlink" title="链接的自动展示："></a>链接的自动展示：</h3></li></ul><p>直接输入链接地址，可以直接识别。 <a href="https://pangao1990.github.io/">https://pangao1990.github.io</a></p><ul><li><h3 id="Email-链接："><a href="#Email-链接：" class="headerlink" title="Email 链接："></a>Email 链接：</h3></li></ul><p>【语法】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">直接<span class="hljs-tag">&lt;<span class="hljs-name">邮箱号地址</span>&gt;</span>即可<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">我的email地址是：&lt;<span class="hljs-symbol">pangao1990@</span>qq.com&gt;。<br></code></pre></td></tr></table></figure><p>我的 email 地址是：<a href="mailto:&#112;&#x61;&#x6e;&#x67;&#97;&#x6f;&#49;&#57;&#x39;&#48;&#x40;&#x71;&#x71;&#x2e;&#99;&#111;&#109;">&#112;&#x61;&#x6e;&#x67;&#97;&#x6f;&#49;&#57;&#x39;&#48;&#x40;&#x71;&#x71;&#x2e;&#99;&#111;&#109;</a>。</p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><ul><li><h3 id="有序列表："><a href="#有序列表：" class="headerlink" title="有序列表："></a>有序列表：</h3></li></ul><p>【语法】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">直接数字加英文句点加空格（最多三个空格）和文字<br></code></pre></td></tr></table></figure><p>【示例】 有序单层列表</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">520</span>. 列表项<span class="hljs-number">1</span>（第一项数字一定要为“<span class="hljs-number">520</span>”）<br><span class="hljs-attribute">201314</span>. 列表项<span class="hljs-number">2</span>（其实我前面的标的数字是“<span class="hljs-number">201314</span>”）<br><span class="hljs-attribute">20161130</span>. 列表项<span class="hljs-number">3</span>（其实我前面的标的数字是“<span class="hljs-number">20161130</span>”<br></code></pre></td></tr></table></figure><ol start="520"><li>列表项 1（第一项数字一定要为“520”）</li><li>列表项 2（其实我前面的标的数字是“201314”）</li><li>列表项 3（其实我前面的标的数字是“20161130”</li></ol><p>【说明】后面的不必在意数字从小到大的排序，显示时会自动排序，有智能的乱序纠正功能，非常贴心。数字前面加了空格，排序会变成罗马数字形式。</p><ul><li><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表:"></a>无序列表:</h3></li></ul><p>【语法】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">文字前面加 星号空格*（空格）或 短横空格-（空格）或 加号+（空格）表示<br></code></pre></td></tr></table></figure><p>【示例】 无序单层列表</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>列表项1<br><span class="hljs-bullet">- </span>列表项2<br></code></pre></td></tr></table></figure><ul><li><p>列表项 1</p></li><li><p>列表项 2</p></li><li><h3 id="多重列表"><a href="#多重列表" class="headerlink" title="多重列表:"></a>多重列表:</h3></li></ul><p>【语法】</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">单层列表项缩进<span class="hljs-number">1</span>个<span class="hljs-literal">tab</span>就可以往后面叠加子层的列表<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-number">1.</span> 首层列表项（有序）<br><span class="hljs-number">2.</span> 第二层列表项<span class="hljs-number">1</span><span class="hljs-comment">(嵌套的列表可以是有序的 )</span><br><span class="hljs-number">2.</span> 第二层列表项<span class="hljs-number">2</span><span class="hljs-comment">(格式和正常的有序、无序列表没有差异)</span><br><span class="hljs-number">3.</span> 第三层列表项<br><span class="hljs-comment">(tab)</span><span class="hljs-number">1.</span> 三层的子列表项<span class="hljs-number">1</span><br><span class="hljs-comment">(tab)</span><span class="hljs-number">2.</span> 三层的子列表项<span class="hljs-number">2</span><br>- 首层列表项第四层列表项<span class="hljs-number">2</span>（无序）<br>- 嵌套的列表可以是无序的<br><span class="hljs-comment">(tab)</span>- 子列表项 <span class="hljs-number">1</span>（加了<span class="hljs-number">1</span>个tab缩进）<br><span class="hljs-comment">(tab)</span><span class="hljs-comment">(tab)</span>- 子列表项 <span class="hljs-number">2</span>（加了<span class="hljs-number">2</span>个tab缩进）<br><span class="hljs-comment">(tab)</span><span class="hljs-comment">(tab)</span><span class="hljs-comment">(tab)</span>- 子列表项 <span class="hljs-number">4</span>（加了<span class="hljs-number">3</span>个tab缩进）<br></code></pre></td></tr></table></figure><ol><li>首层列表项（有序）</li><li>第二层列表项 1(嵌套的列表可以是有序的 )</li><li>第二层列表项 2(格式和正常的有序、无序列表没有差异)</li><li>第三层列表项<ol><li>三层的子列表项 1</li><li>三层的子列表项 2</li></ol></li></ol><ul><li>首层列表项第四层列表项 2（无序）</li><li>嵌套的列表可以是无序的<ul><li>子列表项 1（加了 1 个 tab 缩进）<ul><li>子列表项 2（加了 2 个 tab 缩进）<ul><li>子列表项 4（加了 3 个 tab 缩进）</li></ul></li></ul></li></ul></li></ul><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><ul><li><h3 id="文字引用："><a href="#文字引用：" class="headerlink" title="文字引用："></a>文字引用：</h3></li></ul><p>【语法】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">段落前面添加大于号和空格&gt; （空格），就能够形成引用段落。<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gcode">&gt;<span class="hljs-comment">(空格)</span>青松<span class="hljs-comment">(空格)</span><span class="hljs-comment">(空格)</span><br>大雪压青松，青松挺且直。<span class="hljs-comment">(空格)</span><span class="hljs-comment">(空格)</span><br>要知松高洁，待到雪化时。<br></code></pre></td></tr></table></figure><blockquote><p>青松<br>大雪压青松，青松挺且直。<br>要知松高洁，待到雪化时。</p></blockquote><h1 id="添加影像附件"><a href="#添加影像附件" class="headerlink" title="添加影像附件"></a>添加影像附件</h1><ul><li><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片:"></a>插入图片:</h3></li></ul><p>【语法】</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">!<span class="hljs-selector-attr">[图片描述]</span>(图片网络/本地图片地址)（空格）“鼠标悬停显示文字（可选）”<br></code></pre></td></tr></table></figure><p>【说明】和网页链接用法一致。</p><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><ul><li><h3 id="行内（内联）代码"><a href="#行内（内联）代码" class="headerlink" title="行内（内联）代码"></a>行内（内联）代码</h3></li></ul><p>【语法】</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">使用`内容` 表示行内 代码块。<br>即 在文字左右使用反引号包含（键盘数字“<span class="hljs-number">1</span>”前面的波浪号大写状态时能打出）。<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">我是一只`小鸭子`，咿呀咿呀哟。<br></code></pre></td></tr></table></figure><p>我是一只<code>小鸭子</code>，咿呀咿呀哟。</p><p>【说明】和<code>标签/关键词</code>的效果差不多，还可用于如按键<code>Ctrl+F4</code>，字母<code>B</code>，单词<code>F**K</code>、短句<code>Are you ok？</code>等诸多行的应用场景。能起到强调区分的作用。</p><ul><li><h3 id="段落文本代码块"><a href="#段落文本代码块" class="headerlink" title="段落文本代码块:"></a>段落文本代码块:</h3></li></ul><p>【语法】</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">每行缩进<span class="hljs-number">4</span>个空格或 <span class="hljs-number">1</span>个 <span class="hljs-literal">Tab</span>表示<br></code></pre></td></tr></table></figure><p>【示例】</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">(<span class="hljs-literal">tab</span>)这是一个代码块。<br></code></pre></td></tr></table></figure><pre><code class="hljs">这是一个代码块。</code></pre><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序云开发的云函数中自增函数inc报错</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E7%9A%84%E4%BA%91%E5%87%BD%E6%95%B0%E4%B8%AD%E8%87%AA%E5%A2%9E%E5%87%BD%E6%95%B0inc%E6%8A%A5%E9%94%99/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E7%9A%84%E4%BA%91%E5%87%BD%E6%95%B0%E4%B8%AD%E8%87%AA%E5%A2%9E%E5%87%BD%E6%95%B0inc%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<p>错误提示 <code>message _ is not defined</code> 如下：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E7%9A%84%E4%BA%91%E5%87%BD%E6%95%B0%E4%B8%AD%E8%87%AA%E5%A2%9E%E5%87%BD%E6%95%B0inc%E6%8A%A5%E9%94%99-1.png" alt="image"></p><span id="more"></span><p>其实吧， <code>-404011</code> 和 <code>-504002</code> 这些错误提示都基本没用。主要看我画红线的地方，说不认得 <code>_</code> 。再回过头好好看看官方文档，原来是掉了一条定义 <code>_</code> 的代码，如下：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%91%E5%BC%80%E5%8F%91%E7%9A%84%E4%BA%91%E5%87%BD%E6%95%B0%E4%B8%AD%E8%87%AA%E5%A2%9E%E5%87%BD%E6%95%B0inc%E6%8A%A5%E9%94%99-2.png" alt="image"></p><h5 id="如果你也和我一样粗心，希望本文能帮到你。"><a href="#如果你也和我一样粗心，希望本文能帮到你。" class="headerlink" title="如果你也和我一样粗心，希望本文能帮到你。"></a>如果你也和我一样粗心，希望本文能帮到你。</h5><hr>]]></content>
    
    
    <categories>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序中的云开发如何检测云函数中的对象是否存在某个属性</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E4%BA%91%E5%87%BD%E6%95%B0%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9F%90%E4%B8%AA%E5%B1%9E%E6%80%A7/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%E4%BA%91%E5%87%BD%E6%95%B0%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9F%90%E4%B8%AA%E5%B1%9E%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<blockquote><p>常规的 <a href="/JS%E6%A3%80%E6%B5%8B%E5%AF%B9%E8%B1%A1%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9F%90%E4%B8%AA%E5%B1%9E%E6%80%A7">JS检测对象中是否存在某个属性</a> 的方法不管用，可能微信云函数屏蔽了一些功能。试来试去，找到一个办法，如果有更优雅的办法，欢迎来喷。</p></blockquote><h5 id="使用-捕获异常-的办法，如下："><a href="#使用-捕获异常-的办法，如下：" class="headerlink" title="使用 捕获异常 的办法，如下："></a>使用 <code>捕获异常</code> 的办法，如下：</h5><span id="more"></span><p>判断 <code>reult</code> 中是否含有 <code>data</code> 这个键</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">var</span> data = reult.<span class="hljs-property">data</span><br>    <span class="hljs-comment">//有</span><br><br>&#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>    <span class="hljs-comment">//没有</span><br><br>&#125;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序中的云开发如何使用云函数生成二维码</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%BA%91%E5%87%BD%E6%95%B0%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%BA%91%E5%87%BD%E6%95%B0%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<blockquote><p>首先，需要给对应的云函数安装 <code>request-promise</code> 依赖。（不会给云函数安装依赖的盆友请移步 <a href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8npm%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96">微信小程序中的云开发如何使用npm安装依赖</a>）</p></blockquote><p>生成二维码的云函数如下：</p><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 云函数入口文件</span><br><span class="hljs-keyword">const</span> cloud = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;wx-server-sdk&#x27;</span>)<br><span class="hljs-keyword">const</span> rp = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;request-promise&#x27;</span>)<br><br>cloud.<span class="hljs-title function_">init</span>()<br><br><span class="hljs-comment">// 云函数入口函数</span><br><span class="hljs-built_in">exports</span>.<span class="hljs-property">main</span> = <span class="hljs-keyword">async</span> (event, context) =&gt; &#123;<br><br> <span class="hljs-keyword">const</span> page = event.<span class="hljs-property">page</span><br>  <span class="hljs-keyword">const</span> scene = event.<span class="hljs-property">scene</span><br><br>    <span class="hljs-comment">//appid和秘钥</span><br>    <span class="hljs-keyword">const</span> appid = <span class="hljs-string">&#x27;***&#x27;</span>,<br>      secret = <span class="hljs-string">&#x27;***&#x27;</span>;<br><br>    <span class="hljs-keyword">const</span> <span class="hljs-title class_">AccessToken</span>_options = &#123;<br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>      <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;https://api.weixin.qq.com/cgi-bin/token&#x27;</span>,<br>      <span class="hljs-attr">qs</span>: &#123;<br>        appid,<br>        secret,<br>        <span class="hljs-attr">grant_type</span>: <span class="hljs-string">&#x27;client_credential&#x27;</span><br>      &#125;,<br>      <span class="hljs-attr">json</span>: <span class="hljs-literal">true</span><br><br>    &#125;;<br><br>    <span class="hljs-comment">//获取AccessToken</span><br>    <span class="hljs-keyword">const</span> resultValue = <span class="hljs-keyword">await</span> <span class="hljs-title function_">rp</span>(<span class="hljs-title class_">AccessToken</span>_options);<br>    <span class="hljs-keyword">const</span> token = resultValue.<span class="hljs-property">access_token</span>;<br><br>    <span class="hljs-comment">//获取小程序码配置</span><br>    <span class="hljs-keyword">const</span> code_options = &#123;<br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>      <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=&#x27;</span> + token,<br>      <span class="hljs-attr">body</span>: &#123;<br>        <span class="hljs-string">&#x27;page&#x27;</span>: page,<br>        <span class="hljs-string">&#x27;width&#x27;</span>: <span class="hljs-number">430</span>,<br>        <span class="hljs-string">&#x27;scene&#x27;</span>: scene<br>      &#125;,<br>      <span class="hljs-attr">json</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">encoding</span>: <span class="hljs-literal">null</span><br>    &#125;;<br><br>    <span class="hljs-comment">//获取二进制图片</span><br>    <span class="hljs-keyword">const</span> buffer = <span class="hljs-keyword">await</span> <span class="hljs-title function_">rp</span>(code_options);<br><br>    <span class="hljs-keyword">const</span> upload = <span class="hljs-keyword">await</span> cloud.<span class="hljs-title function_">uploadFile</span>(&#123;<br>      <span class="hljs-attr">cloudPath</span>: <span class="hljs-string">&#x27;wxacode.png&#x27;</span>,<br>      <span class="hljs-attr">fileContent</span>: buffer,<br>    &#125;)<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">wxacodefileID</span>: upload.<span class="hljs-property">fileID</span><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序中的云开发如何使用npm安装依赖</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8npm%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8npm%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96/</url>
    
    <content type="html"><![CDATA[<blockquote><p>微信小程序开发教程描述的相当模糊，以至于我反复品读，多次尝试才悟出来该怎么在云开发中使用 <code>npm</code> 安装依赖。</p></blockquote><p><strong>首先强调一下，云开发中必须安装 <code>wx-server-sdk</code> 依赖，</strong> 而<code>wx-server-sdk</code> 依赖需要使用 <code>npm</code> 的。但由于部分开发过程可能不再需要其他的依赖，那么每次开发都要使用 <code>npm</code> 安装依赖是一件很麻烦的事情。微信为了简化云开发操作，提供了一键云端安装 <code>wx-server-sdk</code> 依赖，也就是在云端帮助我们搞定，不需要我们手动在本地使用 <code>npm</code> 安装，如下图：</p><span id="more"></span><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8npm-1.png" alt="image"></p><p>如果某个自建的云函数需要使用 <code>npm</code> 安装第三方依赖，该怎么办呢？操作如下：</p><h4 id="1-右键云函数，选择“终端打开”，如下图："><a href="#1-右键云函数，选择“终端打开”，如下图：" class="headerlink" title="1. 右键云函数，选择“终端打开”，如下图："></a>1. 右键云函数，选择“终端打开”，如下图：</h4><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8npm-2.png" alt="image"></p><h4 id="2-安装所需依赖："><a href="#2-安装所需依赖：" class="headerlink" title="2. 安装所需依赖："></a>2. 安装所需依赖：</h4><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install request-promise <span class="hljs-comment">--production</span><br></code></pre></td></tr></table></figure><h4 id="3-紧接着，千万别忘了，安装-wx-server-sdk-依赖："><a href="#3-紧接着，千万别忘了，安装-wx-server-sdk-依赖：" class="headerlink" title="3. 紧接着，千万别忘了，安装 wx-server-sdk 依赖："></a>3. 紧接着，千万别忘了，安装 <code>wx-server-sdk</code> 依赖：</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">npm install wx-<span class="hljs-keyword">server</span>-sdk <span class="hljs-comment">--production</span><br></code></pre></td></tr></table></figure><h4 id="4-选择“上传并部署：所有文件”，如下图："><a href="#4-选择“上传并部署：所有文件”，如下图：" class="headerlink" title="4. 选择“上传并部署：所有文件”，如下图："></a>4. 选择“上传并部署：所有文件”，如下图：</h4><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8npm-3.png" alt="image"></p><h4 id="5-等待完成，即可，如下图："><a href="#5-等待完成，即可，如下图：" class="headerlink" title="5. 等待完成，即可，如下图："></a>5. 等待完成，即可，如下图：</h4><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BA%91%E5%BC%80%E5%8F%91%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8npm-4.png" alt="image"></p><h3 id="ps"><a href="#ps" class="headerlink" title="ps:"></a>ps:</h3><blockquote><ol><li>若不使用 npm，则直接选择“云端安装依赖”。</li><li>若要使用 npm，则需在终端中手动安装依赖。此时，千万不要忘记安装 <code>wx-server-sdk</code> 依赖，因为“上传并部署：所有文件”这一选项并不会帮我们傻瓜式安装 <code>wx-server-sdk</code> 依赖。</li></ol></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客NexT主题美化之新增看板娘(能说话、能换装)</title>
    <link href="/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%B0%E5%A2%9E%E7%9C%8B%E6%9D%BF%E5%A8%98(%E8%83%BD%E8%AF%B4%E8%AF%9D%E3%80%81%E8%83%BD%E6%8D%A2%E8%A3%85)/"/>
    <url>/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%B0%E5%A2%9E%E7%9C%8B%E6%9D%BF%E5%A8%98(%E8%83%BD%E8%AF%B4%E8%AF%9D%E3%80%81%E8%83%BD%E6%8D%A2%E8%A3%85)/</url>
    
    <content type="html"><![CDATA[<h4 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h4><p><img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%B0%E5%A2%9E%E7%9C%8B%E6%9D%BF%E5%A8%98-1.gif" alt="image"></p><h2 id=""><a href="#" class="headerlink" title=""></a><span id="more"></span></h2><h4 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h4><ul><li><p><strong>小白水平：</strong></p><blockquote><p>hexo 的官方是支持看板娘的，已经封装好了插件，但只是模型，不能说话、不能换装、功能较少。</p></blockquote><ol><li>安装模块，如下：</li></ol></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install --save hexo-helper-live2d<br></code></pre></td></tr></table></figure><ol start="2"><li>在 <code>站点配置文件</code> 或 <code>主题配置文件</code> 中新增如下内容：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs js"># <span class="hljs-title class_">Live2D</span><br>## <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/EYHN/hexo-helper-live2d</span><br><span class="hljs-attr">live2d</span>:<br>  <span class="hljs-attr">enable</span>: <span class="hljs-literal">true</span><br>  # <span class="hljs-attr">enable</span>: <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scriptFrom</span>: local # 默认<br>  <span class="hljs-attr">pluginRootPath</span>: live2dw/ # 插件在站点上的根目录(相对路径)<br>  <span class="hljs-attr">pluginJsPath</span>: lib/ # 脚本文件相对与插件根目录路径<br>  <span class="hljs-attr">pluginModelPath</span>: assets/ # 模型文件相对与插件根目录路径<br>  # <span class="hljs-attr">scriptFrom</span>: jsdelivr # jsdelivr <span class="hljs-variable constant_">CDN</span><br>  # <span class="hljs-attr">scriptFrom</span>: unpkg # unpkg <span class="hljs-variable constant_">CDN</span><br>  # <span class="hljs-attr">scriptFrom</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span><br>  <span class="hljs-attr">tagMode</span>: <span class="hljs-literal">false</span> # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中<br>  <span class="hljs-attr">debug</span>: <span class="hljs-literal">false</span> # 调试, 是否在控制台输出日志<br>  <span class="hljs-attr">model</span>:<br>    <span class="hljs-attr">use</span>: live2d-widget-model-wanko # npm-<span class="hljs-variable language_">module</span> package name<br>    # <span class="hljs-attr">use</span>: wanko # 博客根目录/live2d_models/ 下的目录名<br>    # <span class="hljs-attr">use</span>: ./wives/wanko # 相对于博客根目录的路径<br>    # <span class="hljs-attr">use</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span><br>  <span class="hljs-attr">display</span>:<br>    <span class="hljs-attr">position</span>: right<br>    <span class="hljs-attr">width</span>: <span class="hljs-number">150</span><br>    <span class="hljs-attr">height</span>: <span class="hljs-number">300</span><br>  <span class="hljs-attr">mobile</span>:<br>    <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span> # 手机中是否展示<br></code></pre></td></tr></table></figure><ol start="3"><li>小白水平，效果如下： <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%B0%E5%A2%9E%E7%9C%8B%E6%9D%BF%E5%A8%98-2.gif" alt="image"></li></ol><ul><li><p><strong>大神水平：</strong></p><blockquote><p>大神作品，功能齐全。能说话、能换装、能玩游戏、能拍照、还能自定义。</p></blockquote><ol><li>下载 <a href="https://github.com/stevenjoezhang/live2d-widget">张书樵大神的项目</a>，解压到本地博客目录的 <code>themes/next/source</code> 下，修改文件夹名为 <code>live2d-widget</code>，修改项目中的 <code>autoload.js</code> 文件，如下：<br>将</li></ol></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> live2d_path = <span class="hljs-string">&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;</span>;<br></code></pre></td></tr></table></figure><pre><code class="hljs">改为</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> live2d_path = <span class="hljs-string">&quot;/live2d-widget/&quot;</span>;<br></code></pre></td></tr></table></figure><ol start="2"><li>在<code>/themes/next/layout/_layout.swig</code>中,新增如下内容：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/live2d-widget/autoload.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>在 <code>主题配置文件</code> 中,新增如下内容：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">live2d</span>: <span class="hljs-attr">enable</span>: <span class="hljs-literal">true</span>;<br></code></pre></td></tr></table></figure><ol start="4"><li>想修改看板娘大小、位置、格式、文本内容等，可查看并修改 <code>waifu-tips.js</code> 、 <code>waifu-tips.json</code> 和 <code>waifu.css</code>。</li><li>大神水平，效果如下： <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%B0%E5%A2%9E%E7%9C%8B%E6%9D%BF%E5%A8%98-1.gif" alt="image"></li></ol><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>注意：大神的项目需要 <code>jQuery</code> 和 <code>font-awesome</code> 支持。我的项目因为其他插件需要，所以在很早之前就下载这两个文件到本地关联了，因此不需要再重复添加。若是没有添加依赖的小伙伴，可以在页面中加载。例如在 <code>&lt;head&gt;</code> 中加入：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;script <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;</span>&gt;&lt;/script&gt;<br>&lt;link <span class="hljs-attribute">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p>或是像我一样，将这两个文件下载到本地，再关联。</p><blockquote><p>因为最近工作比较忙，没有时间更新博客。由于我的疏忽，漏掉了后记中比较关键的文件依赖和大神项目文件夹的重命名，导致很多小伙伴无法实现大神项目的效果。我感到非常抱歉，同时，非常感谢留言的大神们对本博客的批评指正，后期我会提升博客质量和更新频率。再次感谢！</p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客NexT主题美化之文末统一添加“本文结束”标记</title>
    <link href="/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%87%E6%9C%AB%E7%BB%9F%E4%B8%80%E6%B7%BB%E5%8A%A0%E2%80%9C%E6%9C%AC%E6%96%87%E7%BB%93%E6%9D%9F%E2%80%9D%E6%A0%87%E8%AE%B0/"/>
    <url>/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%87%E6%9C%AB%E7%BB%9F%E4%B8%80%E6%B7%BB%E5%8A%A0%E2%80%9C%E6%9C%AC%E6%96%87%E7%BB%93%E6%9D%9F%E2%80%9D%E6%A0%87%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h4 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h4><p><img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%96%87%E6%9C%AB%E7%BB%9F%E4%B8%80%E6%B7%BB%E5%8A%A0%E2%80%9C%E6%9C%AC%E6%96%87%E7%BB%93%E6%9D%9F%E2%80%9D%E6%A0%87%E8%AE%B0-1.png" alt="image"></p><span id="more"></span><hr><h4 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h4><ol><li>在目录 <code>themes/next/layout/_macro/</code> 下添加 <code>passage-end-tag.swig</code> ，内容如下：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>  &#123;% if not is_index %&#125;<br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center;color: #ccc;font-size:14px;&quot;</span>&gt;</span><br>    ------ 本文结束------<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  &#123;% endif %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>打开 <code>themes/next/layout/_macro/post.swig</code> 文件，新增内容如下:</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>  &#123;% if not is_index %&#125; &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125; &#123;% endif %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>打开<code>主题配置文件</code> ，添加代码如下：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"># 文章末尾添加“本文结束”标记<br><span class="hljs-attr">passage_end_tag</span>:<br><span class="hljs-attr">enabled</span>: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客NexT主题美化之自定义文章底部版权声明</title>
    <link href="/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E5%BA%95%E9%83%A8%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/"/>
    <url>/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E5%BA%95%E9%83%A8%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h4 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h4><p><img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E5%BA%95%E9%83%A8%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E-1.png" alt="image"></p><span id="more"></span><hr><h4 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h4><ol><li>在目录 <code>themes/next/layout/_macro/</code> 下添加 <code>my-copyright.swig</code> ，内容如下：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% if page.copyright %&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my_post_copyright&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>  <span class="hljs-comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css&quot;</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>本文标题:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>文章作者:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>&#123;&#123; theme.author &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>发布时间:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:mm:ss&quot;) &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>最后更新:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:mm:ss&quot;) &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>原始链接:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;&#123;&#123; page.title &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; page.permalink &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;copy-path&quot;</span>  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;点击复制文章链接&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-clipboard&quot;</span> <span class="hljs-attr">data-clipboard-text</span>=<span class="hljs-string">&quot;&#123;&#123; page.permalink &#125;&#125;&quot;</span>  <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;复制成功！&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>许可协议:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-creative-commons&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;license&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> clipboard = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Clipboard</span>(<span class="hljs-string">&#x27;.fa-clipboard&#x27;</span>);</span><br><span class="language-javascript">    clipboard.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;success&#x27;</span>, $(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">      $(<span class="hljs-string">&quot;.fa-clipboard&quot;</span>).<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">swal</span>(&#123;</span><br><span class="language-javascript">          <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;复制成功&#x27;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">html</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">timer</span>: <span class="hljs-number">500</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">showConfirmButton</span>: <span class="hljs-literal">false</span></span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    &#125;));</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>&#123;% endif %&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>在目录 <code>themes/next/source/css/_common/components/post/</code> 下添加 <code>my-post-copyright.styl</code>，内容如下:</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.my_post_copyright</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">85%</span>;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">45em</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">2.8em</span> auto <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.5em</span> <span class="hljs-number">1em</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#d3d3d3</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.93rem</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.6em</span>;<br>  <span class="hljs-attribute">word-break</span>: break-all;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.4</span>);<br>&#125;<br><span class="hljs-selector-class">.my_post_copyright</span> <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-class">.my_post_copyright</span> <span class="hljs-selector-tag">span</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">5.2em</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#333333</span>; // title <span class="hljs-attribute">color</span><br>  <span class="hljs-attribute">font-weight</span>: bold;<br>&#125;<br><span class="hljs-selector-class">.my_post_copyright</span> <span class="hljs-selector-class">.raw</span> &#123;<br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">1em</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">5em</span>;<br>&#125;<br><span class="hljs-selector-class">.my_post_copyright</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#808080</span>;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-class">.my_post_copyright</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#0593d3</span>; // link <span class="hljs-attribute">color</span><br>  <span class="hljs-attribute">text-decoration</span>: underline;<br>&#125;<br><span class="hljs-selector-class">.my_post_copyright</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.fa-clipboard</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>&#125;<br><span class="hljs-selector-class">.my_post_copyright</span> <span class="hljs-selector-class">.post-url</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">font-weight</span>: normal;<br>&#125;<br><span class="hljs-selector-class">.my_post_copyright</span> <span class="hljs-selector-class">.copy-path</span> &#123;<br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">1em</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1em</span>;<br>  + mobile() &#123;<br>    <span class="hljs-attribute">display</span>: none;<br>  &#125;<br>&#125;<br><span class="hljs-selector-class">.my_post_copyright</span> <span class="hljs-selector-class">.copy-path</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#808080</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="3"><li>修改 <code>themes/next/layout/_macro/post.swig</code> ，如下：<br>在代码</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;% include &#x27;wechat-subscriber.swig&#x27; %&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&#123;% endif %&#125;<br></code></pre></td></tr></table></figure><p>之前，新增如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;% if not is_index %&#125; &#123;% include &#x27;my-copyright.swig&#x27; %&#125; &#123;% endif %&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="4"><li>打开 <code>themes/next/source/css/_common/components/post/post.styl</code> 文件，在最后一行增加代码：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">@<span class="hljs-keyword">import</span> <span class="hljs-string">&quot;my-post-copyright&quot;</span><br></code></pre></td></tr></table></figure><ol start="5"><li>设置新建文章自动开启 copyright ，即新建文章自动显示自定义的版权声明，设置 <code>～/scaffolds/post.md</code> 文件，如下：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">---<br><span class="hljs-attr">title</span>: &#123;&#123; title &#125;&#125;<br><span class="hljs-attr">date</span>: &#123;&#123; date &#125;&#125;<br><span class="hljs-attr">copyright</span>: <span class="hljs-literal">true</span> #新增,开启<br>---<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客NexT主题美化之显示当前浏览进度</title>
    <link href="/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E6%B5%8F%E8%A7%88%E8%BF%9B%E5%BA%A6/"/>
    <url>/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E6%B5%8F%E8%A7%88%E8%BF%9B%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h4 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h4><p><img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E6%B5%8F%E8%A7%88%E8%BF%9B%E5%BA%A6-1.png" alt="image"></p><span id="more"></span><hr><h4 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h4><ul><li>打开 <code>themes/next/_config.yml</code> ,搜索关键字 <code>scrollpercent</code> ,把 <code>false</code> 改为 <code>true</code> ，如下：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"># <span class="hljs-title class_">Scroll</span> percent label <span class="hljs-keyword">in</span> b2t button<br>  <span class="hljs-attr">scrollpercent</span>: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><ul><li>如果想把 top 按钮放在侧边栏,打开 <code>themes/next/_config.yml</code> ,搜索关键字 <code>b2t</code> ,把 <code>false</code> 改为 <code>true</code> ，如下：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"># <span class="hljs-title class_">Back</span> to top <span class="hljs-keyword">in</span> sidebar<br> <span class="hljs-attr">b2t</span>: <span class="hljs-literal">true</span><br><br> # <span class="hljs-title class_">Scroll</span> percent label <span class="hljs-keyword">in</span> b2t button<br> <span class="hljs-attr">scrollpercent</span>: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客NexT主题美化之评论系统</title>
    <link href="/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    <url>/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h4 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h4><p><img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F-1.png" alt="image"></p><span id="more"></span><blockquote><p><a href="https://valine.js.org/">Valine</a> 诞生于 2017 年 8 月 7 日，是一款基于 Leancloud 的快速、简洁且高效的无后端评论系统。</p></blockquote><hr><h4 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h4><ol><li><p>登录 <a href="https://leancloud.cn/">Leancloud</a> 官网，注册之后创建一个应用，选择【设置】-&gt;【应用 Key】记下你的 APP ID 和 APP Key，如下： <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F-2.png" alt="image"></p></li><li><p>编辑 <code>主题配置文件</code>，搜索 Valine，填入 appid 和 appkey，如下：</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">valine</span>:<br>  <span class="hljs-attr">enable</span>: <span class="hljs-literal">true</span> # <span class="hljs-title class_">When</span> enable is set to be <span class="hljs-literal">true</span>, leancloud_visitors is recommended to be closed <span class="hljs-keyword">for</span> the re-initialization problem within different leancloud adk version.<br>  <span class="hljs-attr">appid</span>: # your app id<br>  <span class="hljs-attr">appkey</span>: # your app key<br>  <span class="hljs-attr">notify</span>: <span class="hljs-literal">true</span> # 评论回复邮件提醒, <span class="hljs-title class_">See</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/xCss/Valine/wiki</span><br>  <span class="hljs-attr">verify</span>: <span class="hljs-literal">false</span> # 验证码服务<br>  <span class="hljs-attr">placeholder</span>: 留言区 # 评论框占位提示符<br>  <span class="hljs-attr">avatar</span>: mm # 头像配置<br>  <span class="hljs-attr">guest_info</span>: nick,mail,link # 回复要填写的信息<br>  <span class="hljs-attr">pageSize</span>: <span class="hljs-number">10</span> # 评论列表分页，每页条数<br>  <span class="hljs-attr">visitor</span>: <span class="hljs-literal">false</span> # 文章访问量统计<br>  <span class="hljs-attr">comment_count</span>: <span class="hljs-literal">true</span> # <span class="hljs-keyword">if</span> <span class="hljs-literal">false</span>, comment count will only be displayed <span class="hljs-keyword">in</span> post page, not <span class="hljs-keyword">in</span> home page<br></code></pre></td></tr></table></figure><ol start="3"><li><strong>可选操作：</strong> 在【Leancloud】 -&gt; 【设置】 -&gt; 【安全中心】 -&gt; 【Web 安全域名】把你的域名加进去，可防止数据被篡改。</li></ol><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客NexT主题美化之搜索服务</title>
    <link href="/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1/"/>
    <url>/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h4 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h4><p><img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1-1.png" alt="image"></p><span id="more"></span><hr><h4 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h4><ol><li>安装插件<code>hexo-generator-searchdb</code>，如下：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install hexo-generator-searchdb --save<br></code></pre></td></tr></table></figure><ol start="2"><li>编辑 <code>站点配置文件</code>，新增以下内容到任意位置，如下：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">search:<br>  path: search.xml<br>  field: post<br>  format: html<br>  limit: <span class="hljs-number">10000</span><br></code></pre></td></tr></table></figure><ol start="3"><li>编辑 <code>主题配置文件</code>，启用本地搜索功能，如下：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"># <span class="hljs-title class_">Local</span> search<br><span class="hljs-attr">local_search</span>:<br>  <span class="hljs-attr">enable</span>: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AdobePhotoshopCC2019-图形处理中文完美Mac版</title>
    <link href="/AdobePhotoshopCC2019-%E5%9B%BE%E5%BD%A2%E5%A4%84%E7%90%86%E4%B8%AD%E6%96%87%E5%AE%8C%E7%BE%8EMac%E7%89%88/"/>
    <url>/AdobePhotoshopCC2019-%E5%9B%BE%E5%BD%A2%E5%A4%84%E7%90%86%E4%B8%AD%E6%96%87%E5%AE%8C%E7%BE%8EMac%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><p>Adobe Photoshop CC 2019 是数字图像处理和编辑的行业标准，提供了一整套专业的修饰工具，并拥有强大的编辑功能，旨在激发灵感。</p><p><img src="https://pangao1990.gitee.io/pic/AdobePhotoshopCC2019-%E5%9B%BE%E5%BD%A2%E5%A4%84%E7%90%86%E4%B8%AD%E6%96%87%E5%AE%8C%E7%BE%8EMac%E7%89%88-1.png" alt="image"></p><h2 id=""><a href="#" class="headerlink" title=""></a><span id="more"></span></h2><h4 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h4><p>压缩包内含详细教程。</p><hr><h4 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h4><p><a href="https://pan.baidu.com/s/1aq10agrEQMrln-lDHPmALg">云盘下载</a><br><strong>密码: tpgx</strong></p><p><strong>dmg 打开密码: blog.pangao.vip</strong></p><blockquote><p>本软件来源于网络，仅供学习使用，请在 24 小时内删除，本人不承担任何相关责任！若侵犯某些组织或个人的权益，请联系我删除。</p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>Mac软件分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件分享</tag>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ImageOptim-无损图片压缩Mac版</title>
    <link href="/ImageOptim-%E6%97%A0%E6%8D%9F%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9Mac%E7%89%88/"/>
    <url>/ImageOptim-%E6%97%A0%E6%8D%9F%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9Mac%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><p>ImageOptim 是一款小巧免费且开源的 Mac 图片无损压缩优化工具。默认设置下，它的压缩号称是「无损」的，也就是说画质不会被改变，但体积却可以被减小，堪称神器！</p><span id="more"></span><hr><h4 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h4><p>ImageOptim 支持 PNG、JPG、GIF 格式的图片压缩优化，你只需将文件拖放到它的界面上即可完成优化 (PS：处理后会覆盖原图 &#x2F; 原图被移到垃圾桶，可手工恢复)，支持批量，使用上非常简单方便。 <img src="https://pangao1990.gitee.io/pic/ImageOptim-%E6%97%A0%E6%8D%9F%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9Mac%E7%89%88-1.png" alt="image"></p><hr><h4 id="效果比对："><a href="#效果比对：" class="headerlink" title="效果比对："></a>效果比对：</h4><p><img src="https://pangao1990.gitee.io/pic/ImageOptim-%E6%97%A0%E6%8D%9F%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9Mac%E7%89%88-2.gif" alt="image"></p><hr><h4 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h4><p><a href="https://imageoptim.com/">官方下载</a></p><hr>]]></content>
    
    
    <categories>
      
      <category>Mac软件分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件分享</tag>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用PS修改GIF动图循环播放次数</title>
    <link href="/%E7%94%A8PS%E4%BF%AE%E6%94%B9GIF%E5%8A%A8%E5%9B%BE%E5%BE%AA%E7%8E%AF%E6%92%AD%E6%94%BE%E6%AC%A1%E6%95%B0/"/>
    <url>/%E7%94%A8PS%E4%BF%AE%E6%94%B9GIF%E5%8A%A8%E5%9B%BE%E5%BE%AA%E7%8E%AF%E6%92%AD%E6%94%BE%E6%AC%A1%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<blockquote><p>用 Photoshop（<a href="/AdobePhotoshopCC2019-%E5%9B%BE%E5%BD%A2%E5%A4%84%E7%90%86%E4%B8%AD%E6%96%87%E5%AE%8C%E7%BE%8EMac%E7%89%88">Mac 中文完美版下载地址</a>）修改 GIF 动图循环播放次数，一次、三次、无限次循环播放…<br>其实很容易。</p></blockquote><span id="more"></span><h4 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h4><ol><li><p>用 Photoshop 打开 GIF 动图，选择【文件】-&gt;【导出】-&gt;【存储为 Web 所用格式】，如下： <img src="https://pangao1990.gitee.io/pic/%E7%94%A8PS%E4%BF%AE%E6%94%B9GIF%E5%8A%A8%E5%9B%BE%E5%BE%AA%E7%8E%AF%E6%92%AD%E6%94%BE%E6%AC%A1%E6%95%B0-1.png" alt="image"></p></li><li><p>动画循环选项，选择【永远】或【1 次】，存储，如下： <img src="https://pangao1990.gitee.io/pic/%E7%94%A8PS%E4%BF%AE%E6%94%B9GIF%E5%8A%A8%E5%9B%BE%E5%BE%AA%E7%8E%AF%E6%92%AD%E6%94%BE%E6%AC%A1%E6%95%B0-2.png" alt="image"></p></li></ol><hr>]]></content>
    
    
    <categories>
      
      <category>IT实用技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>GIF</tag>
      
      <tag>PS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac屏幕录制GIF动图</title>
    <link href="/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE/"/>
    <url>/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<blockquote><p>在 Mac 上最方便的录制屏幕 GIF 动图的方式就是利用 QQ 软件的录屏功能。</p></blockquote><h4 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h4><p><img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-1.gif" alt="image"></p><span id="more"></span><hr><h4 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h4><ol><li><p>鼠标放在 QQ 聊天窗口中的“捕捉屏幕”上，选中“录屏”，如下： <img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-2.png" alt="image"></p></li><li><p>选择想要录屏的区域，如下： <img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-3.png" alt="image"></p></li><li><p>点击【开始录制】，如下： <img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-4.png" alt="image"></p></li><li><p>随后会显示之前录制的视频，选择【下载】，如下： <img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-5.png" alt="image"></p></li><li><p>在保存格式中选择 gif ，点击【存储】，如下： <img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-6.png" alt="image"></p></li><li><p>得到 GIF 动图，如下： <img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-1.gif" alt="image"></p></li></ol><hr><h4 id="后记："><a href="#后记：" class="headerlink" title="后记："></a>后记：</h4><ul><li><p>此时得到的 GIF 动图大小为 1.9M，如果想对其大小做简单的压缩，可以用 Mac 自带的预览打开它。选择【文件】中的【导出】选项，如下： <img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-7.png" alt="image"></p></li><li><p>导出格式选择 gif ，点击【存储】，如下： <img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-8.png" alt="image"></p></li><li><p>可以看到，大小由原来的 1.9M 压缩为 197K，如下： <img src="https://pangao1990.gitee.io/pic/Mac%E5%B1%8F%E5%B9%95%E5%BD%95%E5%88%B6GIF%E5%8A%A8%E5%9B%BE-9.png" alt="image"></p></li></ul><hr><blockquote><ul><li>但是，如此大的压缩比，牺牲的是 GIF 无限循环播放的能力。</li><li>如果不在意 GIF 动图仅能播放一次，那么可以使用此方法压缩；</li><li>如果想要无限循环播放，又想极致压缩，请移步 <a href="/%E7%94%A8PS%E4%BF%AE%E6%94%B9GIF%E5%8A%A8%E5%9B%BE%E5%BE%AA%E7%8E%AF%E6%92%AD%E6%94%BE%E6%AC%A1%E6%95%B0">用 PS 修改 GIF 动图循环播放次数</a> 和 <a href="/ImageOptim-%E6%97%A0%E6%8D%9F%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9Mac%E7%89%88">ImageOptim-无损图片压缩 Mac 版</a></li></ul></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>IT实用技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>GIF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客NexT主题美化之顶部加载进度条</title>
    <link href="/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/"/>
    <url>/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/</url>
    
    <content type="html"><![CDATA[<h4 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h4><p><img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-1.png" alt="image"></p><span id="more"></span><hr><h4 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h4><ol><li>进入博客文件夹的<code>/themes/next</code>文件夹下</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/themes/</span><span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure><ol start="2"><li>下载安装<code>Progress module</code>，如下</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/theme-next/</span>theme-<span class="hljs-keyword">next</span>-pace source<span class="hljs-regexp">/lib/</span>pace<br></code></pre></td></tr></table></figure><ol start="3"><li>在<code>/themes/next/_config.yml</code>中设置，如下</li></ol><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs coq"># Progress bar <span class="hljs-built_in">in</span> the <span class="hljs-built_in">top</span> during page loading.<br># <span class="hljs-keyword">Dependencies</span>: https://github.com/theme-next/theme-next-pace<br>pace: true #是否开启进度条<br># Themes list:<br># pace-theme-big-counter | <span class="hljs-type">pace</span>-theme-bounce | <span class="hljs-type">pace</span>-theme-barber-shop | <span class="hljs-type">pace</span>-theme-center-atom<br># pace-theme-center-circle | <span class="hljs-type">pace</span>-theme-center-radar | <span class="hljs-type">pace</span>-theme-center-<span class="hljs-built_in">simple</span> | <span class="hljs-type">pace</span>-theme-corner-indicator<br># pace-theme-fill-<span class="hljs-built_in">left</span> | <span class="hljs-type">pace</span>-theme-flash | <span class="hljs-type">pace</span>-theme-loading-bar | <span class="hljs-type">pace</span>-theme-mac-osx | <span class="hljs-type">pace</span>-theme-minimal<br># For example<br>pace_theme: pace-theme-center-atom #选择进度条样式<br></code></pre></td></tr></table></figure><ol start="4"><li>不同的样式效果图：</li></ol><ul><li>pace-theme-big-counter <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-2.gif" alt="image"></li></ul><hr><ul><li>pace-theme-bounce<br><img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-3.gif" alt="image"></li></ul><hr><ul><li>pace-theme-barber-shop <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-4.gif" alt="image"></li></ul><hr><ul><li>pace-theme-center-atom <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-5.gif" alt="image"></li></ul><hr><ul><li>pace-theme-center-circle <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-6.gif" alt="image"></li></ul><hr><ul><li>pace-theme-center-radar <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-7.gif" alt="image"></li></ul><hr><ul><li>pace-theme-center-simple <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-8.gif" alt="image"></li></ul><hr><ul><li>pace-theme-corner-indicator <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-9.gif" alt="image"></li></ul><hr><ul><li>pace-theme-fill-left <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-10.gif" alt="image"></li></ul><hr><ul><li>pace-theme-flash <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-11.gif" alt="image"></li></ul><hr><ul><li>pace-theme-loading-bar <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-12.gif" alt="image"></li></ul><hr><ul><li>pace-theme-mac-osx <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-13.gif" alt="image"></li></ul><hr><ul><li>pace-theme-minimal <img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E9%A1%B6%E9%83%A8%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1-14.gif" alt="image"></li></ul><hr><h4 id="后记："><a href="#后记：" class="headerlink" title="后记："></a>后记：</h4><ul><li>我的网络时好时坏的，所以进度条也是录的时快时慢，请大家见谅。</li><li>想知道怎么在 Mac 下高效的制作 gif 动图的小伙伴请移步至 <a href="">Mac 屏幕录制 GIF 动图</a></li><li>为了让大家可以直观的查看进度条的效果，因此我录制了 gif 动图，如果您觉得这对您有帮助，请随意打赏或评论点赞，谢谢大家。</li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客NexT主题美化之网站标题栏背景变色</title>
    <link href="/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E7%BD%91%E7%AB%99%E6%A0%87%E9%A2%98%E6%A0%8F%E8%83%8C%E6%99%AF%E5%8F%98%E8%89%B2/"/>
    <url>/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E7%BD%91%E7%AB%99%E6%A0%87%E9%A2%98%E6%A0%8F%E8%83%8C%E6%99%AF%E5%8F%98%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<h4 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h4><p><img src="https://pangao1990.gitee.io/pic/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E4%B9%8B%E7%BD%91%E7%AB%99%E6%A0%87%E9%A2%98%E6%A0%8F%E8%83%8C%E6%99%AF%E5%8F%98%E8%89%B2-1.jpg" alt="image"></p><span id="more"></span><hr><h4 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h4><p>打开<code>themes/next/source/css/_custom/custom.styl</code>，在里面新增如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.site-meta</span> &#123;<br>  <span class="hljs-attribute">background</span>: $blue; //天空的颜色，和我的眼镜是绝配<br>&#125;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Node.js安装教程</title>
    <link href="/NodeJs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/NodeJs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是-Node-js"><a href="#什么是-Node-js" class="headerlink" title="什么是 Node.js"></a>什么是 Node.js</h1><h5 id="NodeJS-官网上的介绍："><a href="#NodeJS-官网上的介绍：" class="headerlink" title="NodeJS 官网上的介绍："></a>NodeJS 官网上的介绍：</h5><blockquote><p>Node.js is a platform built on Chrome’s JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I&#x2F;O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.</p></blockquote><span id="more"></span><ol><li>它是一个 Javascript 运行环境</li><li>依赖于 Chrome V8 引擎进行代码解释</li><li>事件驱动</li><li>非阻塞 I&#x2F;O（NodeJS 遇到 I&#x2F;O 事件会创建一个线程去执行，然后主线程会继续往下执行的）</li><li>轻量、可伸缩，适于实时数据交互应用</li><li>单进程，单线程</li></ol><h1 id="Node-js-的优缺点"><a href="#Node-js-的优缺点" class="headerlink" title="Node.js 的优缺点"></a>Node.js 的优缺点</h1><h5 id="NodeJS-适合运用在高并发、I-x2F-O-密集、少量业务逻辑的场景（高并发、聊天、实时消息推送）"><a href="#NodeJS-适合运用在高并发、I-x2F-O-密集、少量业务逻辑的场景（高并发、聊天、实时消息推送）" class="headerlink" title="NodeJS 适合运用在高并发、I&#x2F;O 密集、少量业务逻辑的场景（高并发、聊天、实时消息推送）"></a>NodeJS 适合运用在高并发、I&#x2F;O 密集、少量业务逻辑的场景（高并发、聊天、实时消息推送）</h5><ul><li><p>优点：</p><ol><li><p>高并发（最重要的优点）</p><p>NodeJs 更改连接到服务器的方式，每个连接发射（emit）一个在 NodeJS 引擎进程中运行的事件（Event），放进事件队列当中，而不是为每个连接生成一个新的 OS 线程（并为其分配一些配套内存）</p></li><li><p>适合 I&#x2F;O 密集型应用</p></li></ol></li><li><p>缺点：</p><ol><li><p>不适合 CPU 密集型应用；CPU 密集型应用给 Node 带来的挑战主要是：由于 JavaScript 单线程的原因，如果有长时间运行的计算（比如大循　　环），将会导致 CPU 时间片不能释放，使得后续 I&#x2F;O 无法发起；</p><p>解决方案：分解大型运算任务为多个小任务，使得运算能够适时释放，不阻塞 I&#x2F;O 调用的发起。</p></li><li><p>只支持单核 CPU，不能充分利用 CPU；</p></li><li><p>可靠性低，一旦代码某个环节崩溃，整个系统都崩溃（原因：单进程，单线程）；</p><p>解决方案：</p><ol><li>Nnigx 反向代理，负载均衡，开多个进程，绑定多个端口；</li><li>开多个进程监听同一个端口，使用 cluster 模块。</li></ol></li><li><p>Debug 不方便，错误没有 stack trace。</p></li></ol></li></ul><h1 id="Node-js-的安装"><a href="#Node-js-的安装" class="headerlink" title="Node.js 的安装"></a>Node.js 的安装</h1><ol><li>访问 Node.js 下载地址：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a> ，下载最新版本。</li></ol><p><img src="https://pangao1990.gitee.io/pic/NodeJs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-1.png" alt="image"></p><ol start="2"><li>双击刚才下载文件，按照步骤默认安装。</li></ol><p><img src="https://pangao1990.gitee.io/pic/NodeJs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-2.png" alt="image"></p><p>Node.js 和 npm 安装完成。</p><p><img src="https://pangao1990.gitee.io/pic/NodeJs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-3.png" alt="image"></p><ol start="3"><li>安装完成后打开终端，输入</li></ol><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">npm -v<br><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br></code></pre></td></tr></table></figure><p>两个命令，如下图出现版本信息，说明安装成功。</p><p><img src="https://pangao1990.gitee.io/pic/NodeJs%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-4.png" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git安装教程</title>
    <link href="/Git%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/Git%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<ol><li>打开终端，输入</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">git --version<br></code></pre></td></tr></table></figure><p>系统提示安装 git</p><span id="more"></span><p><img src="https://pangao1990.gitee.io/pic/Git%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-1.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/Git%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-2.png" alt="image"></p><ol start="2"><li>待安装完毕，在终端再次输入</li></ol><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><p>如下图出现版本信息，说明安装成功。</p><p><img src="https://pangao1990.gitee.io/pic/Git%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-3.png" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何使用Hexo创建个人博客</title>
    <link href="/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p><a href="https://hexo.io/zh-cn/">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>安装 Hexo 比较简单，但在安装前，需要安装如下应用程序。（如果您已经安装了如下程序，请直接执行第 2 步。）</li></ol><ul><li>Node.js （安装教程）</li><li>Git （安装教程）</li></ul><ol start="2"><li>安装 Hexo，打开终端，输入</li></ol><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中创建博客框架。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">hexo init <span class="hljs-symbol">&lt;folder&gt;</span><br><span class="hljs-keyword">cd</span> <span class="hljs-symbol">&lt;folder&gt;</span><br>npm install<br></code></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-1.png" alt="image"></p><ul><li><em>_config.yml</em> &#x3D;&gt; 网站的 配置 信息，您可以在此配置大部分的参数。</li><li><em>package.json</em> &#x3D;&gt; 应用程序的信息。</li><li><em>scaffolds</em> &#x3D;&gt; 模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</li><li><em>source</em> &#x3D;&gt; 资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</li><li><em>themes</em> &#x3D;&gt; 主题文件夹。Hexo 会根据主题来生成静态页面。</li></ul><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><ol><li>生成静态文件。在终端中输入</li></ol><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo <span class="hljs-keyword">generate</span><br></code></pre></td></tr></table></figure><ol start="2"><li>启动服务器。在终端中输入</li></ol><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>默认情况下，在浏览器中访问网址： <a href="http://localhost:4000/">http://localhost:4000/</a> 即可预览个人博客。</p><p><img src="https://pangao1990.gitee.io/pic/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-2.png" alt="image"></p><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><p>你可以执行下列命令来创建一篇新文章。</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">hexo <span class="hljs-keyword">new</span> &lt;<span class="hljs-built_in">title</span>&gt;<br></code></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ol><li>安装 hexo-deployer-git。</li></ol><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><ol start="2"><li>修改配置。</li></ol><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> <span class="hljs-params">&lt;repository url&gt;</span> <span class="hljs-meta">#https:<span class="hljs-comment">//bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span></span><br><span class="hljs-symbol">  branch:</span> [branch] <span class="hljs-meta">#published</span><br><span class="hljs-symbol">  message:</span> [message]<br></code></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>repo</td><td>库（Repository）地址</td></tr><tr><td>branch</td><td>分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测</td></tr><tr><td>message</td><td>自定义提交信息</td></tr></tbody></table><ol start="3"><li>生成站点文件并推送至远程库。执行命令。</li></ol><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">hexo clean <span class="hljs-meta">&amp;&amp; hexo deploy</span><br></code></pre></td></tr></table></figure><p>前者清除站点文件，后者重新生成站点文件并将之推送到指定的库分支。</p><hr>]]></content>
    
    
    <categories>
      
      <category>个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue中使用vue-i18n实现中英文切换</title>
    <link href="/Vue%E4%B8%AD%E4%BD%BF%E7%94%A8vue-i18n%E5%AE%9E%E7%8E%B0%E4%B8%AD%E8%8B%B1%E6%96%87%E5%88%87%E6%8D%A2/"/>
    <url>/Vue%E4%B8%AD%E4%BD%BF%E7%94%A8vue-i18n%E5%AE%9E%E7%8E%B0%E4%B8%AD%E8%8B%B1%E6%96%87%E5%88%87%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install vue-i18n<br></code></pre></td></tr></table></figure><h2 id="在main-js中引入并使用"><a href="#在main-js中引入并使用" class="headerlink" title="在main.js中引入并使用"></a>在main.js中引入并使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueI18</span>n <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-i18n&#x27;</span><br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueI18</span>n)<br><br><span class="hljs-keyword">const</span> i18n = <span class="hljs-keyword">new</span> <span class="hljs-title class_">VueI18</span>n(&#123;<br>  <span class="hljs-attr">locale</span>: <span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;user_lang&#x27;</span>) == <span class="hljs-literal">null</span> ? <span class="hljs-string">&quot;cn&quot;</span> : <span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;user_lang&#x27;</span>),    <span class="hljs-comment">// 语言标识</span><br>  <span class="hljs-attr">messages</span>: &#123;<br>    <span class="hljs-string">&#x27;cn&#x27;</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./utils/lang/cn&#x27;</span>),   <span class="hljs-comment">// 中文语言包</span><br>    <span class="hljs-string">&#x27;en&#x27;</span>: <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./utils/lang/en&#x27;</span>)    <span class="hljs-comment">// 英文语言包</span><br>  &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><span id="more"></span><h2 id="多语言的js文件"><a href="#多语言的js文件" class="headerlink" title="多语言的js文件"></a>多语言的js文件</h2><ul><li>cn.js文件内容：  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">language</span>: &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;English&#x27;</span><br>  &#125;,<br>  <span class="hljs-attr">login</span>: &#123;<br>    <span class="hljs-attr">welcome</span>: <span class="hljs-string">&#x27;欢迎您&#x27;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>en.js文件内容：  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">language</span>: &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;中文&#x27;</span><br>  &#125;,<br>  <span class="hljs-attr">login</span>: &#123;<br>    <span class="hljs-attr">welcome</span>: <span class="hljs-string">&#x27;Welcome&#x27;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>上面的name语言之所以是反的，是因为切换按钮的文字显示需要是反，即英文页面显示中文切换按钮，中文页面显示英文切换按钮。</li></ul><h2 id="使用i18n"><a href="#使用i18n" class="headerlink" title="使用i18n"></a>使用i18n</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123; $t(&#x27;language.name&#x27;) &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">test</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">var</span> name = <span class="hljs-variable language_">this</span>.$t(<span class="hljs-string">&#x27;language.name&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>抓包工具Charles从入门到入土</title>
    <link href="/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/"/>
    <url>/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-1.png" alt="image"> <a href="http://www.charlesproxy.com/">Charles</a> 是在 Mac 下常用的网络封包截取工具，通过将自己设置成系统的网络访问代理服务器，使得所有的网络访问请求都通过它来完成，从而实现了网络封包的截取和分析。</p><span id="more"></span><p>Charles 是收费软件，可以免费试用 30 天。试用期过后，未付费的用户仍然可以继续使用，但是每次使用时间不能超过 30 分钟，并且启动时将会有 10 秒种的延时。因此，该付费方案对广大用户还是相当友好的，即使你长期不付费，也能使用完整的软件功能。只是当你需要长时间进行封包调试时，会因为 Charles 强制关闭而遇到影响。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><ul><li>截取 Http 和 Https 网络封包；</li><li>支持重发网络请求，方便后端调试；</li><li>支持修改网络请求参数；</li><li>支持网络请求的截获并动态修改；</li><li>支持流量控制，可以模拟慢速网络以及等待时间（latency）较长的请求；</li><li>支持 AJAX 调试，可以自动将 json 或 xml 数据格式化，方便查看；</li><li>支持 AMF 调试，可以将 Flash Remoting 或 Flex；</li><li>Remoting 信息格式化，方便查看；</li><li>检查 HTML，CSS 和 RSS 内容是否符合 W3C 标准。</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li><a href="https://www.charlesproxy.com/">官网下载</a> 最新试用版安装。</li><li><a href="https://pan.baidu.com/s/1NOjsCTO4VYzUx71ys1vSTg">某云盘下载</a> 完美版安装（密码：89pl）。</li></ul><h1 id="设置系统代理"><a href="#设置系统代理" class="headerlink" title="设置系统代理"></a>设置系统代理</h1><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-2.png" alt="image"></p><p>紧接着，软件中就会出现抓取的网页信息：</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-3.png" alt="image"></p><p>Charles 主要提供两种查看封包的视图，分为 Structure 和 Sequence：</p><ul><li>Structure 视图将网络请求按访问的域名分类；</li><li>Sequence 视图将网络请求按访问的时间排序。</li></ul><h2 id="获取手机上的网络封包"><a href="#获取手机上的网络封包" class="headerlink" title="获取手机上的网络封包"></a>获取手机上的网络封包</h2><ul><li><h4 id="打开代理功能"><a href="#打开代理功能" class="headerlink" title="打开代理功能"></a>打开代理功能</h4><p>在 Charles 的菜单栏上选择 “Proxy”-&gt;”Proxy Settings”，填入代理端口 8888，并且勾上 “Enable transparent HTTP proxying” 就完成了在 Charles 上的设置。如下图： <img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-4.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-5.png" alt="image"></p></li><li><h4 id="获取电脑-IP"><a href="#获取电脑-IP" class="headerlink" title="获取电脑 IP"></a>获取电脑 IP</h4><p>Charles 顶部菜单的 “Help”-&gt;”Local IP Address”，即可在弹出的对话框中看到 IP 地址，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-6.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-7.png" alt="image"></p></li><li><h4 id="手机设置代理连接"><a href="#手机设置代理连接" class="headerlink" title="手机设置代理连接"></a>手机设置代理连接</h4><p><strong>一定一定，手机和电脑要处于同一局域网下。</strong> 在手机的网络设置中，填入刚才获取到的电脑 IP 和 Charles 上设置的端口，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-8.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-9.png" alt="image"></p><p>完事之后，打开手机上任意需要联网的程序，就可以在 Charles 上看到请求连接的确认提示，点击确认，如下：</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-10.png" alt="image"></p></li></ul><h2 id="截获-HTTPS"><a href="#截获-HTTPS" class="headerlink" title="截获 HTTPS"></a>截获 HTTPS</h2><p>必须安装 Charles 的 CA 证书，不然 HTTPS 的返回结果会是一堆乱码。</p><p>首先我们需要在 Mac 电脑上安装证书。点击 Charles 的顶部菜单，选择 “Help” -&gt; “SSL Proxying” -&gt; “Install Charles Root Certificate”，然后输入系统的帐号密码，即可在 KeyChain 看到添加好的证书。如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-11.png" alt="image"></p><p>如果我们需要在手机上截取 Https 的内容，还需要在手机上安装相应的证书。点击 Charles 的顶部菜单，选择 “Help” -&gt; “SSL Proxying” -&gt; “Install Charles Root Certificate on a Mobile Device or Remote Browser”，然后就可以看到 Charles 弹出的安装教程。如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-12.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-13.png" alt="image"></p><p>在设备上设置好 Charles 为代理后，在手机浏览器中访问地址：chls.pro&#x2F;ssl ，即可打开证书安装的界面，安装完证书后，就可以截取手机上的 Https 内容了。</p><h2 id="模拟低速网络"><a href="#模拟低速网络" class="headerlink" title="模拟低速网络"></a>模拟低速网络</h2><p>在做移动开发的时候，我们常常需要模拟慢速网络或者高延迟的网络，以测试在移动网络下，应用的表现是否正常。Charles 对此需求提供了很好的支持。</p><p>在 Charles 的菜单上，选择 “Proxy”-&gt;”Throttle Setting” 项，在之后弹出的对话框中，我们可以勾选上 “Enable Throttling”，并且可以设置 Throttle Preset 的类型。如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-14.png" alt="image"> <img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-15.png" alt="image"></p><p>如果我们只想模拟指定网站的慢速网络，可以再勾选上图中的 “Only for selected hosts” 项，然后在对话框的下半部分设置中增加指定的 hosts 项即可。</p><h2 id="给服务器做压力测试"><a href="#给服务器做压力测试" class="headerlink" title="给服务器做压力测试"></a>给服务器做压力测试</h2><p>我们可以使用 Charles 的 Repeat 功能来简单地测试服务器的并发处理能力，我们在想打压的网络请求上（POST 或 GET 请求均可）右击，然后选择 「Repeat Advanced」菜单项，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-16.png" alt="image"></p><p>接着我们就可以在弹出的对话框中，选择打压的并发线程数以及打压次数，确定之后，即可开始打压。</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-17.png" alt="image"></p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p>Charles 的反向代理功能允许我们将本地的端口映射到远程的另一个端口上。例如，在下图中，我将本机的 8080 端口映射到了远程（pangao1990.github.io）的 80 端口上了。这样，当我访问本地的 8080 端口时，实际返回的内容会由 pangao1990.github.io 的 80 端口提供。</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-18.png" alt="image"> <img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-19.png" alt="image"></p><h2 id="修改服务器返回内容"><a href="#修改服务器返回内容" class="headerlink" title="修改服务器返回内容"></a>修改服务器返回内容</h2><p>根据具体的需求，Charles 提供了 Map 功能、 Rewrite 功能以及 Breakpoints 功能，都可以达到修改服务器返回内容的目的。这三者在功能上的差异是：</p><ul><li>Map 功能适合长期地将某一些请求重定向到另一个网络地址或本地文件。</li><li>Rewrite 功能适合对网络请求进行一些正则替换。</li><li>Breakpoints 功能适合做一些临时性的修改。</li></ul><h4 id="Map-功能"><a href="#Map-功能" class="headerlink" title="Map 功能"></a>Map 功能</h4><p>Charles 的 Map 功能分 Map Remote 和 Map Local 两种，顾名思义，Map Remote 是将指定的网络请求重定向到另一个网址请求地址，Map Local 是将指定的网络请求重定向到本地文件。</p><p>在 Charles 的菜单中，选择 “Tools”-&gt;”Map Remote” 或 “Map Local” 即可进入到相应功能的设置页面。</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-20.png" alt="image"></p><p>对于 Map Remote 功能，我们需要分别填写网络重定向的源地址和目的地址，对于不需要限制的条件，可以留空。下图是一个示例，我将所有 <a href="http://www.baidu.com/">www.baidu.com</a> 的请求重定向到了 pangao1990.github.io 。</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-21.png" alt="image"></p><p>对于 Map Local 功能，我们需要填写的重定向的源地址和本地的目标文件。对于有一些复杂的网络请求结果，我们可以先使用 Charles 提供的 “Save Response…” 功能，将请求结果保存到本地（如下图），然后稍加修改，成为我们的目标映射文件。</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-22.png" alt="image"></p><p>将一个指定的网络请求通过 Map Local 功能映射到了本地的一个经过修改的文件中。</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-23.png" alt="image"></p><p>Map Local 在使用的时候，有一个潜在的问题，就是其返回的 Http Response Header 与正常的请求并不一样。这个时候如果客户端校验了 Http Response Header 中的部分内容，就会使得该功能失效。解决办法是同时使用 Map Local 以下面提到的 Rewrite 功能，将相关的 Http 头 Rewrite 成我们希望的内容。</p><h2 id="Rewrite-功能"><a href="#Rewrite-功能" class="headerlink" title="Rewrite 功能"></a>Rewrite 功能</h2><p>Rewrite 功能功能适合对某一类网络请求进行一些正则替换，以达到修改结果的目的。例如，我博客返回的昵称是“潘高”，我现在要改成“大帅哥”，如下图：</p><p><img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-24.png" alt="image"> <img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-25.png" alt="image"> <img src="https://pangao1990.gitee.io/pic/%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7Charles%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-26.png" alt="image"></p><h2 id="Breakpoints-功能"><a href="#Breakpoints-功能" class="headerlink" title="Breakpoints 功能"></a>Breakpoints 功能</h2><p>上面提供的 Rewrite 功能最适合做批量和长期的替换，但是很多时候，我们只是想临时修改一次网络请求结果，这个时候，使用 Rewrite 功能虽然也可以达到目的，但是过于麻烦，对于临时性的修改，我们最好使用 Breakpoints 功能。</p><p>Breakpoints 功能类似我们在 Xcode 中设置的断点一样，当指定的网络请求发生时，Charles 会截获该请求，这个时候，我们可以在 Charles 中临时修改网络请求的返回内容。</p><p>需要注意的是，使用 Breakpoints 功能将网络请求截获并修改过程中，整个网络请求的计时并不会暂停，所以长时间的暂停可能导致客户端的请求超时。</p><hr>]]></content>
    
    
    <categories>
      
      <category>IT实用技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>Charles</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Office-办公软件套装Mac绿色版</title>
    <link href="/Office-%E5%8A%9E%E5%85%AC%E8%BD%AF%E4%BB%B6%E5%A5%97%E8%A3%85Mac%E7%BB%BF%E8%89%B2%E7%89%88/"/>
    <url>/Office-%E5%8A%9E%E5%85%AC%E8%BD%AF%E4%BB%B6%E5%A5%97%E8%A3%85Mac%E7%BB%BF%E8%89%B2%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><blockquote><p>Microsoft Office 是微软公司开发的一套办公软件套装。常用组件有 Word、Excel、PowerPoint 等。Microsoft Office Word 是文字处理软件，Microsoft Office Excel 是电子数据表程序〔进行数字和预算运算的软件程序〕，Microsoft Office PowerPoint 是演示文稿软件，Microsoft Office Outlook 是个人信息管理程序和电子邮件通信软件，Microsoft Office FrontPage 是一款网页设计、制作、发布、管理的软件，Microsoft Office OneNote 使您能够捕获、组织和重用便携式计算机、台式计算机或 Tablet PC 上的便笺等等。</p><p><img src="https://pangao1990.gitee.io/pic/Office-%E5%8A%9E%E5%85%AC%E8%BD%AF%E4%BB%B6%E5%A5%97%E8%A3%85Mac%E7%BB%BF%E8%89%B2%E7%89%88-1.png" alt="image"></p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a><span id="more"></span></h2><h4 id="功能特点："><a href="#功能特点：" class="headerlink" title="功能特点："></a>功能特点：</h4><ul><li>Word —— 创建、完善和共享既美观又专业的文档</li><li>Excel —— 以新颖直观的方式分析和可视化数字</li><li>PowerPoint —— 创建多媒体演示文稿并自信地展示想法</li><li>OneNote —— 在完全属于自己的数字笔记本中记录想法</li><li>Outlook —— 外观精美的电子邮件和日历，帮助你快速保持井然有序</li></ul><hr><h4 id="破解教程："><a href="#破解教程：" class="headerlink" title="破解教程："></a>破解教程：</h4><p>压缩包内含教程。</p><hr><h4 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h4><p><a href="https://pan.baidu.com/s/1hymPDSGdTyASQ1jkuGx5kg">V16.24 版-云盘下载</a> <strong>密码: 1fdo</strong></p><p><strong>dmg 打开密码: blog.pangao.vip</strong></p><blockquote><p>本软件来源于网络，仅供学习使用，请在 24 小时内删除，本人不承担任何相关责任！若侵犯某些组织或个人的权益，请联系我删除。</p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>Mac软件分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件分享</tag>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS的深拷贝与浅拷贝</title>
    <link href="/JS%E7%9A%84%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B5%85%E6%8B%B7%E8%B4%9D/"/>
    <url>/JS%E7%9A%84%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B5%85%E6%8B%B7%E8%B4%9D/</url>
    
    <content type="html"><![CDATA[<h2 id="深拷贝："><a href="#深拷贝：" class="headerlink" title="深拷贝："></a>深拷贝：</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">arr1 = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(arr2))<br></code></pre></td></tr></table></figure><p>修改arr2，不会影响到arr1。因为arr1和arr2指向不同的地址。</p><h2 id="浅拷贝："><a href="#浅拷贝：" class="headerlink" title="浅拷贝："></a>浅拷贝：</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">arr1 = arr2<br></code></pre></td></tr></table></figure><p>修改arr2，arr1会改变。因为arr1和arr2指向同一的地址。</p><hr>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS</tag>
      
      <tag>Node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS检测对象中是否存在某个属性</title>
    <link href="/JS%E6%A3%80%E6%B5%8B%E5%AF%B9%E8%B1%A1%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9F%90%E4%B8%AA%E5%B1%9E%E6%80%A7/"/>
    <url>/JS%E6%A3%80%E6%B5%8B%E5%AF%B9%E8%B1%A1%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9F%90%E4%B8%AA%E5%B1%9E%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="使用in关键字"><a href="#使用in关键字" class="headerlink" title="使用in关键字"></a>使用in关键字</h2><p>该方法可以判断对象的自有属性和继承来的属性是否存在。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> o=&#123;<span class="hljs-attr">x</span>:<span class="hljs-number">1</span>&#125;;<br><span class="hljs-string">&quot;x&quot;</span> <span class="hljs-keyword">in</span> o;   <span class="hljs-comment">//true，自有属性存在</span><br><span class="hljs-string">&quot;y&quot;</span> <span class="hljs-keyword">in</span> o;   <span class="hljs-comment">//false</span><br><span class="hljs-string">&quot;toString&quot;</span> <span class="hljs-keyword">in</span> o;    <span class="hljs-comment">//true，是一个继承属性</span><br></code></pre></td></tr></table></figure><span id="more"></span><h2 id="使用对象的hasOwnProperty-方法"><a href="#使用对象的hasOwnProperty-方法" class="headerlink" title="使用对象的hasOwnProperty()方法"></a>使用对象的hasOwnProperty()方法</h2><p>该方法只能判断自有属性是否存在，对于继承属性会返回false。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> o=&#123;<span class="hljs-attr">x</span>:<span class="hljs-number">1</span>&#125;;<br>o.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;x&quot;</span>);  <span class="hljs-comment">//true，自有属性中有x</span><br>o.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;y&quot;</span>);  <span class="hljs-comment">//false，自有属性中不存在y</span><br>o.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;toString&quot;</span>);   <span class="hljs-comment">//false，这是一个继承属性，但不是自有属性</span><br></code></pre></td></tr></table></figure><h2 id="使用undefined判断"><a href="#使用undefined判断" class="headerlink" title="使用undefined判断"></a>使用undefined判断</h2><p>自有属性和继承属性均可判断。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> o=&#123;<span class="hljs-attr">x</span>:<span class="hljs-number">1</span>&#125;;<br>o.<span class="hljs-property">x</span>!==<span class="hljs-literal">undefined</span>;    <span class="hljs-comment">//true</span><br>o.<span class="hljs-property">y</span>!==<span class="hljs-literal">undefined</span>;    <span class="hljs-comment">//false</span><br>o.<span class="hljs-property">toString</span>!==<span class="hljs-literal">undefined</span>  <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><p>该方法存在一个问题，如果属性的值就是undefined的话，该方法不能返回想要的结果，如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> o=&#123;<span class="hljs-attr">x</span>:<span class="hljs-literal">undefined</span>&#125;;<br>o.<span class="hljs-property">x</span>!==<span class="hljs-literal">undefined</span>;    <span class="hljs-comment">//false，属性存在，但值是undefined</span><br>o.<span class="hljs-property">y</span>!==<span class="hljs-literal">undefined</span>;    <span class="hljs-comment">//false</span><br>o.<span class="hljs-property">toString</span>!==<span class="hljs-literal">undefined</span>  <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><h2 id="在条件语句中判断"><a href="#在条件语句中判断" class="headerlink" title="在条件语句中判断"></a>在条件语句中判断</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> o=&#123;&#125;;<br><span class="hljs-keyword">if</span>(o.<span class="hljs-property">x</span>) o.<span class="hljs-property">x</span>+=<span class="hljs-number">1</span>; <span class="hljs-comment">//如果x是undefine,null,false,&quot; &quot;,0或NaN,它将保持不变</span><br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MacBooster-系统清理和优化工具Mac绿色版</title>
    <link href="/MacBooster-%E7%B3%BB%E7%BB%9F%E6%B8%85%E7%90%86%E5%92%8C%E4%BC%98%E5%8C%96%E5%B7%A5%E5%85%B7Mac%E7%BB%BF%E8%89%B2%E7%89%88/"/>
    <url>/MacBooster-%E7%B3%BB%E7%BB%9F%E6%B8%85%E7%90%86%E5%92%8C%E4%BC%98%E5%8C%96%E5%B7%A5%E5%85%B7Mac%E7%BB%BF%E8%89%B2%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><blockquote><p>MacBooster 是 Mac os 平台上的帮助用户有效清理系统缓存的 Mac 系统清理工具，MacBooster 还可以帮助用户提升开机的时间，优化系统自定义启动项，使电脑长时间使用都不会出现卡顿现象，操作非常的简单。</p><p><img src="https://pangao1990.gitee.io/pic/MacBooster-%E7%B3%BB%E7%BB%9F%E6%B8%85%E7%90%86%E5%92%8C%E4%BC%98%E5%8C%96%E5%B7%A5%E5%85%B7Mac%E7%BB%BF%E8%89%B2%E7%89%88-1.png" alt="image"></p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a><span id="more"></span></h2><h4 id="功能特点："><a href="#功能特点：" class="headerlink" title="功能特点："></a>功能特点：</h4><ul><li>系统状态：通过运行全面的扫描来探索 Mac 的状态。</li><li>病毒和恶意软件扫描：快速，深入地分析您的 Mac 的安全状态。安全地删除威胁，使您的 Mac 保持安全。</li><li>隐私清除：通过运行全面扫描来探索 Mac 的状态。</li><li>系统垃圾：扫描系统的每一个角落，找出垃圾文件，保持硬盘的浪费。</li><li>卸载程序：帮助摆脱不需要的应用程序或剩下的文件。</li><li>大文件清理器：查找并删除不再需要的大文件，以释放更多的空间。</li><li>内存清理：清理以重新获得更多可用的 RAM，并使应用程序启动更快。</li><li>启动优化：管理启动项以优化 OS X 引导速度。</li><li>碎片整理：通过一键式优化和修复磁盘的新功能。</li><li>重复查找器：快速找到并删除 Mac 上重复的文件。</li><li>照片扫描器：有效快速地找到类似或重复的照片。保持最美丽的。</li><li>制作的新迷你：增加实时监控网络速度和通知扫描和修复结果。</li></ul><hr><h4 id="破解教程："><a href="#破解教程：" class="headerlink" title="破解教程："></a>破解教程：</h4><p>直接安装即可。</p><hr><h4 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h4><p><a href="https://pan.baidu.com/s/1m7DmAofMwk5tLfSyL-JP5Q">V7.2.3 版-云盘下载</a> <strong>密码: ut03</strong></p><p><strong>dmg 打开密码: blog.pangao.vip</strong></p><blockquote><p>本软件来源于网络，仅供学习使用，请在 24 小时内删除，本人不承担任何相关责任！若侵犯某些组织或个人的权益，请联系我删除。</p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>Mac软件分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件分享</tag>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue中添加友盟代码统计</title>
    <link href="/Vue%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8F%8B%E7%9B%9F%E4%BB%A3%E7%A0%81%E7%BB%9F%E8%AE%A1/"/>
    <url>/Vue%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8F%8B%E7%9B%9F%E4%BB%A3%E7%A0%81%E7%BB%9F%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<p>如下图所示： <img src="https://pangao1990.gitee.io/pic/Vue%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8F%8B%E7%9B%9F%E4%BB%A3%E7%A0%81%E7%BB%9F%E8%AE%A1-1.png" alt="image"></p><p><img src="https://pangao1990.gitee.io/pic/Vue%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8F%8B%E7%9B%9F%E4%BB%A3%E7%A0%81%E7%BB%9F%E8%AE%A1-2.png" alt="image"></p><span id="more"></span><p>在入口 App.vue 中添加代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script&gt;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;app&#x27;</span>,<br>  mounted () &#123;<br>    <span class="hljs-keyword">const</span> script = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;script&#x27;</span>)<br>    script.<span class="hljs-property">src</span> = <span class="hljs-string">&#x27;https://s95.cnzz.com/z_stat.php?id=1111111111&amp;web_id=1111111111&#x27;</span><br>    script.<span class="hljs-property">language</span> = <span class="hljs-string">&#x27;JavaScript&#x27;</span><br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(script)<br>  &#125;,<br>  <span class="hljs-attr">watch</span>: &#123;<br>    <span class="hljs-string">&#x27;$route&#x27;</span> () &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">_czc</span>) &#123;<br>        <span class="hljs-keyword">let</span> location = <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span><br>        <span class="hljs-keyword">let</span> contentUrl = location.<span class="hljs-property">pathname</span> + location.<span class="hljs-property">hash</span><br>        <span class="hljs-keyword">let</span> refererUrl = <span class="hljs-string">&#x27;/&#x27;</span><br>        <span class="hljs-variable language_">window</span>.<span class="hljs-property">_czc</span>.<span class="hljs-title function_">push</span>([<span class="hljs-string">&#x27;_trackPageview&#x27;</span>, contentUrl, refererUrl])<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序与vue的一些区别</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8Evue%E7%9A%84%E4%B8%80%E4%BA%9B%E5%8C%BA%E5%88%AB/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8Evue%E7%9A%84%E4%B8%80%E4%BA%9B%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h2 id="1、条件渲染"><a href="#1、条件渲染" class="headerlink" title="1、条件渲染"></a>1、条件渲染</h2><ul><li>vue使用 <code>v-if</code> <code>v-else-if</code> <code>v-else</code> 指令，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;color==&#x27;red&#x27;&quot;</span>&gt;</span>red<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot;color==&#x27;orange&#x27;&quot;</span>&gt;</span>orange<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span>yellow<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>wx使用 <code>wx:if</code> <code>wx:elif</code> <code>wx:else</code> 指令，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:if</span>=<span class="hljs-string">&quot;&#123;&#123;color==&#x27;red&#x27;&#125;&#125;&quot;</span>&gt;</span>red<span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:elif</span>=<span class="hljs-string">&quot;&#123;&#123;color==&#x27;orange&#x27;&#125;&#125;&quot;</span>&gt;</span>orange<span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:else</span>&gt;</span>yellow<span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><span id="more"></span><h2 id="2、显示隐藏元素"><a href="#2、显示隐藏元素" class="headerlink" title="2、显示隐藏元素"></a>2、显示隐藏元素</h2><ul><li>vue使用 <code>v-show</code> 指令，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;color==&#x27;red&#x27;&quot;</span>&gt;</span>red<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>wx使用 <code>hidden</code> 指令，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">hidden</span>=<span class="hljs-string">&quot;&#123;&#123;color==&#x27;red&#x27;&#125;&#125;&quot;</span>&gt;</span>red<span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="3、绑定class"><a href="#3、绑定class" class="headerlink" title="3、绑定class"></a>3、绑定class</h2><ul><li>vue使用 <code>v-bind:</code> 或简写为 <code>：</code> 指令，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;&#123; &#x27;class-a&#x27;: isA &#125;&quot;</span>&gt;</span>red<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure>  Javascript代码：  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">isA</span>: <span class="hljs-literal">false</span>  <span class="hljs-comment">//当isA改变时，将更新class</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li>wx，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&#123;&#123; isA ? &#x27;class-a&#x27;:&#x27;&#x27; &#125;&#125;&quot;</span>&gt;</span>red<span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure>  Javascript代码：  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">isA</span>: <span class="hljs-literal">false</span>  <span class="hljs-comment">//当isA改变时，将更新class</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="4、事件处理"><a href="#4、事件处理" class="headerlink" title="4、事件处理"></a>4、事件处理</h2><ul><li>vue使用 <code>v-on:</code> 或 <code>@</code> 指令绑定事件，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;counter += 1&quot;</span>&gt;</span>Add 1<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>wx使用 <code>baintap</code> 指令，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&quot;clickMe&quot;</span>&gt;</span>click<span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="5、绑定值"><a href="#5、绑定值" class="headerlink" title="5、绑定值"></a>5、绑定值</h2><ul><li>vue动态绑定一个变量的值为元素的某个属性的时候，会在变量前面加上冒号 <code>：</code> ，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;imgSrc&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure></li><li>wx绑定某个变量的值为元素属性时，会用两个大括号括起来，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;imgSrc&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="6、绑定事件传参"><a href="#6、绑定事件传参" class="headerlink" title="6、绑定事件传参"></a>6、绑定事件传参</h2><ul><li>vue绑定事件的函数传参数时，可以把参数写在函数后面的括号里，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeTab(1)&quot;</span>&gt;</span>嚯嚯<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>wx绑定事件的函数传参数时，可以绑定到元素中，在函数中获取，如下：  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&quot;changeTab()&quot;</span> <span class="hljs-attr">data-tab</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>嚯嚯<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure>  Javascript代码：<pre><code class="js">changeTab(e) &#123;    var tab = e.currentTarget.dataset.tab&#125;</code></pre></li></ul><h2 id="7、设置值"><a href="#7、设置值" class="headerlink" title="7、设置值"></a>7、设置值</h2><ul><li>vue设置test的值可以用，<code>this.test = true</code> ；获取test的值可以用 <code>this.test</code> 。</li><li>wx设置test的值要用 <code>this.setData(&#123;test:true&#125;)</code> ；获取test的值用 <code>this.data.test</code> 。</li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序中setData的key是变量怎么办</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%ADsetData%E7%9A%84key%E6%98%AF%E5%8F%98%E9%87%8F%E6%80%8E%E4%B9%88%E5%8A%9E/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%ADsetData%E7%9A%84key%E6%98%AF%E5%8F%98%E9%87%8F%E6%80%8E%E4%B9%88%E5%8A%9E/</url>
    
    <content type="html"><![CDATA[<p>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">onclick</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">var</span> id = e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123; <br>        <span class="hljs-attr">id</span>: e.<span class="hljs-property">detail</span>.<span class="hljs-property">value</span> <br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>显然data中是多了一个 <code>id</code> 的数据，解决办法是用[]将变量括起来，如下：</p><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">onclick</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">var</span> id = e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">setData</span>(&#123; <br>        [id]: e.<span class="hljs-property">detail</span>.<span class="hljs-property">value</span> <br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序中用setData修改数组或对象</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%94%A8setData%E4%BF%AE%E6%94%B9%E6%95%B0%E7%BB%84%E6%88%96%E5%AF%B9%E8%B1%A1/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%94%A8setData%E4%BF%AE%E6%94%B9%E6%95%B0%E7%BB%84%E6%88%96%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<p>在 <code>page</code> 中有如下数组：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Page</span>(&#123;<br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">list</span>: [<br>      &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">state</span>: <span class="hljs-string">&quot;running&quot;</span>,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-attr">state</span>: <span class="hljs-string">&quot;done&quot;</span>,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>,<br>        <span class="hljs-attr">state</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>      &#125;,<br>    ],<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>若需要使用 <code>setData</code> 修改 <code>list[0].state</code> 的值为 <code>done</code>，若直接修改，如下：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%94%A8setData%E4%BF%AE%E6%94%B9%E6%95%B0%E7%BB%84%E6%88%96%E5%AF%B9%E8%B1%A1-1.png" alt="image"></p><p>显然报错了，解决方法如下：</p><span id="more"></span><blockquote><ol><li>先用一个字符串变量表示 <code>list[0].state</code> ；</li><li>再将该字符串变量用[]括起来。</li></ol></blockquote><p>如下：</p><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%94%A8setData%E4%BF%AE%E6%94%B9%E6%95%B0%E7%BB%84%E6%88%96%E5%AF%B9%E8%B1%A1-2.png" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序中的渐变色</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>CSS3 渐变（gradients）可以在两个或多个指定的颜色之间显示平稳的过渡。</p><p>CSS3 定义了两种类型的渐变（gradients）：</p><ul><li>线性渐变（Linear Gradients）- 向下&#x2F;向上&#x2F;向左&#x2F;向右&#x2F;对角方向</li><li>径向渐变（Radial Gradients）- 由它们的中心定义</li></ul></blockquote><span id="more"></span><hr><h3 id="线性渐变-从上到下（默认情况下）"><a href="#线性渐变-从上到下（默认情况下）" class="headerlink" title="线性渐变 - 从上到下（默认情况下）"></a>线性渐变 - 从上到下（默认情况下）</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-1.png" alt="image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.gradual</span>&#123;<br>   <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(red, orange);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="线性渐变-从左到右"><a href="#线性渐变-从左到右" class="headerlink" title="线性渐变 - 从左到右"></a>线性渐变 - 从左到右</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-2.png" alt="image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.gradual</span>&#123;<br>   <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(to right, red, orange);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="线性渐变-对角"><a href="#线性渐变-对角" class="headerlink" title="线性渐变 - 对角"></a>线性渐变 - 对角</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-3.png" alt="image"></p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coq">.gradual&#123;<br>   background: linear-gradient(to <span class="hljs-built_in">bottom</span> <span class="hljs-built_in">right</span>, <span class="hljs-built_in">red</span>, orange);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="线性渐变-带有指定的角度"><a href="#线性渐变-带有指定的角度" class="headerlink" title="线性渐变 - 带有指定的角度"></a>线性渐变 - 带有指定的角度</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-4.png" alt="image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.gradual</span>&#123;<br>   <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">60deg</span>, red, orange);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="线性渐变-从上到下，带有多个颜色结点"><a href="#线性渐变-从上到下，带有多个颜色结点" class="headerlink" title="线性渐变 - 从上到下，带有多个颜色结点"></a>线性渐变 - 从上到下，带有多个颜色结点</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-5.png" alt="image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.gradual</span>&#123;<br>   <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(red, orange, yellow);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="线性渐变-带有彩虹颜色"><a href="#线性渐变-带有彩虹颜色" class="headerlink" title="线性渐变 - 带有彩虹颜色"></a>线性渐变 - 带有彩虹颜色</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-6.png" alt="image"></p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs processing">.<span class="hljs-property">gradual</span>&#123;<br>   <span class="hljs-built_in">background</span>: linear-<span class="hljs-title function_">gradient</span>(<span class="hljs-built_in">red</span>, orange, yellow, <span class="hljs-built_in">green</span>, <span class="hljs-built_in">blue</span>, indigo, violet);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="线性渐变-带有透明度"><a href="#线性渐变-带有透明度" class="headerlink" title="线性渐变 - 带有透明度"></a>线性渐变 - 带有透明度</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-7.png" alt="image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.gradual</span>&#123;<br>   <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>), <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>));<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="重复线性渐变-repeating-linear-gradient-函数"><a href="#重复线性渐变-repeating-linear-gradient-函数" class="headerlink" title="重复线性渐变 - repeating-linear-gradient()函数"></a>重复线性渐变 - repeating-linear-gradient()函数</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-8.png" alt="image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.gradual</span>&#123;<br>   <span class="hljs-attribute">background</span>: <span class="hljs-built_in">repeating-linear-gradient</span>(red, orange, yellow <span class="hljs-number">10%</span>);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="径向渐变-颜色结点均匀分布（默认情况下）"><a href="#径向渐变-颜色结点均匀分布（默认情况下）" class="headerlink" title="径向渐变 - 颜色结点均匀分布（默认情况下）"></a>径向渐变 - 颜色结点均匀分布（默认情况下）</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-9.png" alt="image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.gradual</span>&#123;<br>   <span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(red, orange, yellow);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="径向渐变-颜色结点不均匀分布"><a href="#径向渐变-颜色结点不均匀分布" class="headerlink" title="径向渐变 - 颜色结点不均匀分布"></a>径向渐变 - 颜色结点不均匀分布</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-10.png" alt="image"></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mel">.gradual&#123;<br>   background: <span class="hljs-keyword">radial</span>-gradient(red <span class="hljs-number">5</span>%, orange <span class="hljs-number">20</span>%, yellow <span class="hljs-number">80</span>%);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="重复径向渐变-repeating-radial-gradient-函数"><a href="#重复径向渐变-repeating-radial-gradient-函数" class="headerlink" title="重复径向渐变 - repeating-radial-gradient()函数"></a>重复径向渐变 - repeating-radial-gradient()函数</h3><p><img src="https://pangao1990.gitee.io/pic/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2-11.png" alt="image"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.gradual</span>&#123;<br>   <span class="hljs-attribute">background</span>: <span class="hljs-built_in">repeating-radial-gradient</span>(red, orange, yellow <span class="hljs-number">10%</span>);<br>&#125;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序如何获取屏幕的高度和宽度</title>
    <link href="/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%B1%8F%E5%B9%95%E7%9A%84%E9%AB%98%E5%BA%A6%E5%92%8C%E5%AE%BD%E5%BA%A6/"/>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%B1%8F%E5%B9%95%E7%9A%84%E9%AB%98%E5%BA%A6%E5%92%8C%E5%AE%BD%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="微信小程序如何获取屏幕的高度和宽度"><a href="#微信小程序如何获取屏幕的高度和宽度" class="headerlink" title="微信小程序如何获取屏幕的高度和宽度"></a>微信小程序如何获取屏幕的高度和宽度</h2><ul><li>方法一：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> windowHeight = wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowHeight</span><br><span class="hljs-keyword">var</span> windowWidth = wx.<span class="hljs-title function_">getSystemInfoSync</span>().<span class="hljs-property">windowWidth</span><br></code></pre></td></tr></table></figure></li></ul><span id="more"></span><ul><li>方法二：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.windowHeightWidthClass</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100vw</span>;<br>&#125;<br></code></pre></td></tr></table></figure>  CSS3中的 <code>vh</code> 和 <code>vw</code> 是相对于屏幕大小的单位，即：<br><code>vh =&gt; view height</code><br><code>vw =&gt; view width</code></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>微信小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>UltraEdit-文本编辑器Mac绿色版</title>
    <link href="/UltraEdit-%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8Mac%E7%BB%BF%E8%89%B2%E7%89%88/"/>
    <url>/UltraEdit-%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8Mac%E7%BB%BF%E8%89%B2%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><blockquote><p>Ultraedit 是一款在 Windows 系统中非常出名的文本编辑器，可以编辑文本、十六进制、ASCII 码，完全可以取代其他文本工具，同时还支持许多开发语言，如 C, Objective C, Javascript, XML, PHP, Perl, Python 等，并可同时编辑多个文件，而且即使开启很大的文件速度也不会慢。</p><p><img src="https://pangao1990.gitee.io/pic/UltraEdit-%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8Mac%E7%BB%BF%E8%89%B2%E7%89%88-1.png" alt="image"></p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a><span id="more"></span></h2><h4 id="功能特点："><a href="#功能特点：" class="headerlink" title="功能特点："></a>功能特点：</h4><ol><li>可配置语法加亮，支持代码折叠、Unicode；</li><li>基于磁盘的文本编辑和支持超过 4GB 的大文件处理，即使是数兆字节的文件也只占用极少的内存；</li><li>在所有搜索操作（查找、替换、在文件中查找、在文件中替换）中，支持多行查找和替换对话框；</li><li>带有 100,000 个单词的拼写检查器，对 C&#x2F;C++、VB、HTML、Java 和 Perl 进行了预配置；</li><li>内置 FTP 客户端，支持登录和保存多个账户，支持 SSH&#x2F;Telnet 窗口；</li><li>提供预定义的或用户创建的编辑“环境”，能记住 UltraEdit 的所有可停靠窗口、工具栏等的状态；</li><li>集成脚本语言以自动执行任务，可配置键盘映射，列&#x2F;块模式编辑，命名的模板；</li><li>十六进制编辑器可以编辑任何二进制文件，并显示二进制和 ASCII 视图；</li><li>HTML 工具栏，对常用的 HTML 功能作了预配置；文件加密&#x2F;解密；多字节和集成的 IME。</li><li>网络搜索工具栏：高亮显示文本并单击网络搜索工具栏按钮，从编辑器内启动搜索加亮词语。</li></ol><hr><h4 id="破解教程："><a href="#破解教程：" class="headerlink" title="破解教程："></a>破解教程：</h4><p>直接安装即可。</p><hr><h4 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h4><p><a href="https://pan.baidu.com/s/1EeO7FZA50L9gn0iGRtmzxw">V18.0.00.40 版-云盘下载</a> <strong>密码: 8uqi</strong></p><p><strong>dmg 打开密码: blog.pangao.vip</strong></p><blockquote><p>本软件来源于网络，仅供学习使用，请在 24 小时内删除，本人不承担任何相关责任！若侵犯某些组织或个人的权益，请联系我删除。</p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>Mac软件分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件分享</tag>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue中动态设置页面title</title>
    <link href="/Vue%E4%B8%AD%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2title/"/>
    <url>/Vue%E4%B8%AD%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2title/</url>
    
    <content type="html"><![CDATA[<ol><li><p>安装依赖</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install vue-wechat-title --save<br></code></pre></td></tr></table></figure></li><li><p>在mian.js中引入</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//设置title</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueWechatTitle</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-wechat-title&#x27;</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueWechatTitle</span>)<br></code></pre></td></tr></table></figure></li><li><p>在router的index.js的路由中加上参数</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/login&#x27;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Login</span>,<br>    <span class="hljs-attr">meta</span>: &#123;<br>       <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;登录&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><hr>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue中使用base64编码和解码</title>
    <link href="/Vue%E4%B8%AD%E4%BD%BF%E7%94%A8base64%E7%BC%96%E7%A0%81%E5%92%8C%E8%A7%A3%E7%A0%81/"/>
    <url>/Vue%E4%B8%AD%E4%BD%BF%E7%94%A8base64%E7%BC%96%E7%A0%81%E5%92%8C%E8%A7%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<ol><li><p>在项目根目录下安装</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm install --save js-base64<br></code></pre></td></tr></table></figure></li><li><p>在项目文件中引入</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> <span class="hljs-title class_">Base64</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;js-base64&#x27;</span>).<span class="hljs-property">Base64</span><br></code></pre></td></tr></table></figure></li><li><p>在项目文件中使用</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Base64</span>.<span class="hljs-title function_">encode</span>(<span class="hljs-string">&#x27;潘高&#x27;</span>)  <span class="hljs-comment">// 5r2Y6auY</span><br><span class="hljs-title class_">Base64</span>.<span class="hljs-title function_">decode</span>(<span class="hljs-string">&#x27;5r2Y6auY&#x27;</span>)  <span class="hljs-comment">// 潘高</span><br></code></pre></td></tr></table></figure></li></ol><hr>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Perl递归删除文件夹及其内容</title>
    <link href="/Perl%E9%80%92%E5%BD%92%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%8A%E5%85%B6%E5%86%85%E5%AE%B9/"/>
    <url>/Perl%E9%80%92%E5%BD%92%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%8A%E5%85%B6%E5%86%85%E5%AE%B9/</url>
    
    <content type="html"><![CDATA[<figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> File::Path <span class="hljs-string">qw(remove_tree)</span>;<br><br>remove_tree($zipFiles.<span class="hljs-string">&quot;/tem/&quot;</span>);<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Perl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Perl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Perl解压zip</title>
    <link href="/Perl%E8%A7%A3%E5%8E%8Bzip/"/>
    <url>/Perl%E8%A7%A3%E5%8E%8Bzip/</url>
    
    <content type="html"><![CDATA[<figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> Archive::Zip;<br><br><span class="hljs-keyword">my</span> $obj = Archive::Zip-&gt;new();<br>$status = $obj-&gt;<span class="hljs-keyword">read</span>($fileFrom);<br><span class="hljs-keyword">if</span> ($status != AZ_OK) &#123;<br><span class="hljs-keyword">print</span> <span class="hljs-string">&quot;=====程序终止！=====\n解压失败\n&quot;</span>;<br><span class="hljs-comment">#保留黑框</span><br><span class="hljs-keyword">system</span> pause;<br><span class="hljs-comment">#程序停止运行</span><br><span class="hljs-keyword">die</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>$obj-&gt;extractTree(<span class="hljs-keyword">undef</span>, $fileTo);<br>&#125;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Perl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Perl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用生物信息学格式介绍</title>
    <link href="/%E5%B8%B8%E7%94%A8%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E6%A0%BC%E5%BC%8F%E4%BB%8B%E7%BB%8D/"/>
    <url>/%E5%B8%B8%E7%94%A8%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E6%A0%BC%E5%BC%8F%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="fasta"><a href="#fasta" class="headerlink" title="fasta"></a>fasta</h2><p><a href="http://genetics.bwh.harvard.edu/pph/FASTA.html">fasta</a> （<a href="https://en.wikipedia.org/wiki/FASTA_format">维基百科</a>）格式是最基本的表示序列信息（核苷酸或者蛋白质）的格式。这里简单介绍下，fasta 格式的文件通常后缀名为 .fasta 或者 .fa ，其实这都无所谓，因为都是文本文件。 fasta 格式文件（可以包含多条序列）中的一条序列的通常表示方法如下：</p><span id="more"></span><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs coq">&gt;gi|<span class="hljs-type">129295</span>|<span class="hljs-type">sp</span>|<span class="hljs-type">P01013</span>|<span class="hljs-type">OVAX_CHICK</span> GENE X PROTEIN (OVALBUMIN-RELATED)<br>QIKDLLVSSSTDLDTTLVLVNAIYFKGMWKTAFNAEDTREMPFHVTKQESKPVQMMCMNNSFNVATLPAE<br>KMKILELPFASGDLSMLVLLPDEVSDLERIEKTINFEKLTEWTNPNTMEKRRVKVYLPQMKIEEKYNLTS<br>VLMALGMTDLFIPSANLTGISSAESLKISQAVHGAFMELSEDGIEMAGSTGVIEDIKHSPESEQFRADHP<br>FLFLIKHNPTNTIVYFGRYWSP<br></code></pre></td></tr></table></figure><p>其中主要分为两个部分：</p><ul><li>第一部分是序列的定义行（单行），该行的开头是&gt;符号，紧跟着后面的就是该条序列的名称（具有唯一性，即不能和其它序列同名称），即&gt;号和后面的名称的第一字符间是没有任何空白的。一般第一个空格后面的内容即为可选的描述信息。如上面， gi|129295|sp|P01013|OVAX_CHICK 为序列名称， 而 GENE X PROTEIN (OVALBUMIN-RELATED)则为描述信息。注意：有点软件是把一整行当做名称的，所以在出现错误的时候可以查看下格式是否正确。</li><li>第二部分就是序列，所有的序列碱基或者氨基酸可以都放在一行存储，也可以多行存储，但是建议大家多行存储且单行长度不超过 80 个字符，因为这样容易阅读。且序列的多行之间不能有空行，序列信息描述的第一行与序列数据的第一行之间不能有空行。其中序列数据主要是按照密码表来表示的，*表示是蛋白质翻译的结束。</li></ul><p>多行序列举例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">SEQUENCE_1</span><br>MTEITAAMVKELRESTGAGMMDCKNALSETNGDFDKAVQLLREKGLGKAAKKADRLAAEG<br>LVSVKVSDDFTIAAMRPSYLSYEDLDMTFVENEYKALVAELEKENEERRRLKDPNKPEHK<br>IPQFASRKQLSDAILKEAEEKIKEELKAQGKPEKIWDNIIPGKMNSFIADNSQLDSKLTL<br>MGQFYVMDDKKTVEQVIAEKEKEFGGKIKIVEFICFEVGEGLEKKTEDFAAEVAAQL<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">SEQUENCE_2</span><br>SATVSEINSETDFVAKNDQFIALTKDTTAHIQSNSLQSVEELHSSTINGVKFEEYLKSQI<br>ATIGENLVVRRFATLKAGANGVVNGYIHTNGRVGVVIAAACDSAEVASKSRDLLRQICMH<br></code></pre></td></tr></table></figure><h2 id="fastq"><a href="#fastq" class="headerlink" title="fastq"></a>fastq</h2><p><a href="https://en.wikipedia.org/wiki/FASTQ_format">fastq</a> 同样是以文本形式来存储序列信息的格式，后缀名通常为 .fastq 或者 .fq ，但是与 fasta 不相同的是，它除了存储序列本身外还存储了序列中每个单元所对应的质量分数，所以 fastq 格式通常用于高通量测试数据的存储。早期是有 Sanger 机构开发的，但是现在已经演变成一个高通量测序的标准了。</p><p>fastq 格式文件中一个完整的单元分为四行，每行的含义如下：<br>第一行： 以@开头，内容同 fasta 的描述行类似<br>第二行：具体的碱基序列<br>第三行：以+开头，后面的内容可以和第一行类似，也什么都没有只留+<br>第四行：以 ASCII 字符集（分数）编码来表示对应碱基的测序质量</p><p>比如下面的这个例子：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gcode">@SEQ_ID<br>GATTTGGGGTTCAAAGCAGTATCGATCAAATAGTAAATCCATTTGTTCAACTCACAGTTT<br>+<br>!<span class="hljs-string">&#x27;&#x27;</span>*<span class="hljs-comment">((((***+)</span>)<span class="hljs-meta">%</span><span class="hljs-meta">%</span><span class="hljs-meta">%</span>++)<span class="hljs-comment">(%%%%)</span><span class="hljs-number">.1</span>***-+*<span class="hljs-string">&#x27;&#x27;</span>))**<span class="hljs-number">55</span>CCF&gt;&gt;&gt;&gt;&gt;&gt;CCCCCCC<span class="hljs-number">65</span><br></code></pre></td></tr></table></figure><p>下面以 Illumina 和 NCBI SRA 两个测序数据来源来讲讲它们之间的区别：<br>通常我们获取测序数据有两种途径，一种是自己通过仪器测定，一种是在公共数据库中(比如之前说到的 NCBI 中的 SRA 数据库)获取，这两种方式主要是在序列名称的命名上和测序质量表示方式上有所不同。</p><p>Illumina 序列名称：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@HWUSI-EAS100R:</span><span class="hljs-number">6</span>:<span class="hljs-number">73</span>:<span class="hljs-number">941</span>:<span class="hljs-number">1973</span>#<span class="hljs-number">0</span>/<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>上述以：隔开的每个字段的含义如下：</p><table><thead><tr><th>HWUSI-EAS100R</th><th>the unique instrument name</th></tr></thead><tbody><tr><td>6</td><td>flowcell lane</td></tr><tr><td>3</td><td>tile number within the flowcell lane</td></tr><tr><td>941</td><td>‘x’-coordinate of the cluster within the tile</td></tr><tr><td>1973</td><td>‘y’-coordinate of the cluster within the tile</td></tr><tr><td>#0</td><td>index number for a multiplexed sample (0 for no indexing)</td></tr><tr><td>&#x2F;1</td><td>the member of a pair, &#x2F;1 or &#x2F;2 (paired-end or mate-pair reads only)</td></tr></tbody></table><h2 id="NCBI-SRA-数据库"><a href="#NCBI-SRA-数据库" class="headerlink" title="NCBI SRA 数据库"></a>NCBI SRA 数据库</h2><p>将测序数据提交到 NCBI 的 SRA 数据库时， SRA 数据库会为每一个样本提供一个编号，一般是 SRRxxxxx ，所以从 SRA 数据库上下载公共的测试数据（原始格式为 .sra ， 需特定工具转换为 fastq ），其 fastq 格式文件中每个单元的名称是以 SRA 编号接数字加以区分的。比如下面的这个示例：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dns">@SRR<span class="hljs-number">001666.1</span> <span class="hljs-number">071112</span>_SLXA-EAS1_s_7:<span class="hljs-number">5:1:817</span>:<span class="hljs-number">345</span> length=<span class="hljs-number">36</span><br>GGGTGATGGCCGCTGCCGATGGCGTCAAATCCCACC<br>+SRR<span class="hljs-number">001666.1</span> <span class="hljs-number">071112</span>_SLXA-EAS1_s_7:<span class="hljs-number">5:1:817</span>:<span class="hljs-number">345</span> length=<span class="hljs-number">36</span><br>IIIIIIIIIIIIIIIIIIIIIIIIIIIIII9IG9IC<br></code></pre></td></tr></table></figure><blockquote><p>需要注意的是：当把测序数据上传到 SRA 数据库时，它通常会将表示质量的分数 转换为标准的 Sanger 格式 。</p></blockquote><h5 id="质量分数表示法："><a href="#质量分数表示法：" class="headerlink" title="质量分数表示法："></a>质量分数表示法：</h5><p>由于测序仪器的不同等因素所以对碱基测序质量的表示方式也不相同，在 Fastq 格式文件中，用 ASCII 码表来表示每个碱基的测序质量，下面介绍几种不同的方案： <img src="https://pangao1990.gitee.io/pic/%E5%B8%B8%E7%94%A8%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E6%A0%BC%E5%BC%8F%E4%BB%8B%E7%BB%8D-1.png" alt="image"> 其中有五种表示方法，Sanger 的码表范围为 ! 至 I ，其对应的数值为 33-73，如果减去 33（即 Phred + 33 表示法）这个基数则范围转换为 0-40，即如果某一个碱基的测序质量为 ! 则对应的测序质量分数为 0，表示测序质量低。其它几种表示法类似（X,I,J,L）。这里介绍测序质量的表示方法是因为后面有的软件是要指定测序数据的质量表示方法。</p><h2 id="gff2"><a href="#gff2" class="headerlink" title="gff2"></a>gff2</h2><p><a href="http://gmod.org/wiki/GFF2">GFF</a>(General Feature Format)是一种用于描述基因或者其它序列元素的文件格式，GFF 有几个版本，早期的第 Version 2 和现在的 Version 3. Version 2 是由 Sanger 机构所制定的，而 Version 3 是由 Sequence Ontology Project 制定。正是由于有统一的格式来表示基因等元素，使得 GFF 格式的文件被广泛的使用与 mapping 与基因组数据可视化方面。 GFF2 文件格式是由 tab 隔开的九列值，每一行的九个字段的含义如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Chr1</span>  curated  CDS <span class="hljs-number">365647</span>  <span class="hljs-number">365963</span>  .  +  <span class="hljs-number">1</span>  Transcript <span class="hljs-string">&quot;R119.7&quot;</span><br></code></pre></td></tr></table></figure><p>第一列： reference sequence， 该列表示的是特征元素所在的染色体（或者 scaffold，或者 contig），也就是在基因组中的坐标系统，后续一切的注释信息都是基于此列。<br>第二列：source，该列表示改行注释信息的来源，比如上述的一行表示该行的 CDS 注释信息来自名为“curated”的注释。<br>第三列：feature，或者说是 method，type， 表示的是该注释的类型，比如上述表示改行注释为 CDS 信息，可以将 source 和 feature 结合起来描述的更加详细。<br>第四列：start position，在 reference sequence 上的开始位置（坐标），通常是从 1 为起点而不是 0。<br>第五列：end position， 在 reference sequence 上的结束位置（坐标），一般是大于 start position 的。<br>第六列：score， 表示该行 feature 的分数，比如序列相似性等，如果没有对应的分数可以用.代替。<br>第七列：strand，feature 所在链，+表示正链，-表示负链，.表示不确定或者与链无关。<br>第八列：phase，与蛋白质编码相关，一般是用于 CDS，值的范围为 0-2，表示编码时阅读框的移动相位。<br>下面这段描述很详细:<br>‘0’ indicates that the specified region is in frame, i.e. that its first base corresponds to the first base of a codon. ‘1’ indicates that there is one extra base, i.e. that the second base of the region corresponds to the first base of a codon, and ‘2’ means that the third base of the region is the first base of a codon. If the strand is ‘-‘, then the first base of the region is value of <end>, because the corresponding coding region will run from <end> to <start> on the reverse strand.<br>第九列：group，或者称为 attributes，是用于对改行注释更多的描述，以键值对的形式，比如上面的例子表示该 CDS 是属于名为 R119.7 的 transcript。该列中可以存在多个属性，属性之间是用;隔开的。<br>对于 GFF 格式的理解主要是集中在最后一列，有以下集中情况：</p><ol><li>对于单个 feature<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Chr3</span>   giemsa heterochromatin  <span class="hljs-number">4500000</span> <span class="hljs-number">6000000</span> . . .   Band <span class="hljs-number">3</span>q12.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li>对于属于同一集合的多个 feature <code>IV curated exon 5506900 5506996 . + . Transcript B0273.1 IV curated exon 5506026 5506382 . + . Transcript B0273.1 IV curated exon 5506558 5506660 . + . Transcript B0273.1 IV curated exon 5506738 5506852 . + . Transcript B0273.1</code> 比如上面这个例子就表示这四个 exon 都是属于同一个名为 B0273.1 的 transcript，这是表示一个完整 transcript 结构的最基本要求。<br>GFF2 还可用于序列比对结果表示等其它方面，这里不做介绍了。</li></ol><h2 id="gtf-gff2-5"><a href="#gtf-gff2-5" class="headerlink" title="gtf(gff2.5)"></a>gtf(gff2.5)</h2><p><a href="http://mblab.wustl.edu/GTF2.html">GTF</a>（Gene Transfer Format）格式是借鉴于 GFF2 格式，也被称为 GFF2.5，大部分字段的定义是和 GFF2 相同的，只是每行的第九列必须带有如下四个域，具体为 gene_id value; transcript_id value; 这样的设计是为了适应一个基因的多个转录本这种情况。比如下面的这个例子：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">AB000123</span>    Twinscan     CDS    <span class="hljs-number">193817</span>    <span class="hljs-number">194022</span>    .    -    <span class="hljs-number">2</span>    gene_id <span class="hljs-string">&quot;AB000123.1&quot;</span>; transcript_id <span class="hljs-string">&quot;AB00123.1.2&quot;</span>;<br><span class="hljs-attribute">AB000123</span>    Twinscan     CDS    <span class="hljs-number">199645</span>    <span class="hljs-number">199752</span>    .    -    <span class="hljs-number">2</span>    gene_id <span class="hljs-string">&quot;AB000123.1&quot;</span>; transcript_id <span class="hljs-string">&quot;AB00123.1.2&quot;</span>;<br><span class="hljs-attribute">AB000123</span>    Twinscan     CDS    <span class="hljs-number">200369</span>    <span class="hljs-number">200508</span>    .    -    <span class="hljs-number">1</span>    gene_id <span class="hljs-string">&quot;AB000123.1&quot;</span>; transcript_id <span class="hljs-string">&quot;AB00123.1.2&quot;</span>;<br><span class="hljs-attribute">AB000123</span>    Twinscan     CDS    <span class="hljs-number">215991</span>    <span class="hljs-number">216028</span>    .    -    <span class="hljs-number">0</span>    gene_id <span class="hljs-string">&quot;AB000123.1&quot;</span>; transcript_id <span class="hljs-string">&quot;AB00123.1.2&quot;</span>;<br><span class="hljs-attribute">AB000123</span>    Twinscan     start_codon   <span class="hljs-number">216026</span>    <span class="hljs-number">216028</span>    .    -    .    gene_id    <span class="hljs-string">&quot;AB000123.1&quot;</span>; transcript_id <span class="hljs-string">&quot;AB00123.1.2&quot;</span>;<br><span class="hljs-attribute">AB000123</span>    Twinscan     stop_codon    <span class="hljs-number">193814</span>    <span class="hljs-number">193816</span>    .    -    .    gene_id    <span class="hljs-string">&quot;AB000123.1&quot;</span>; transcript_id <span class="hljs-string">&quot;AB00123.1.2&quot;</span>;<br></code></pre></td></tr></table></figure><h2 id="gff3"><a href="#gff3" class="headerlink" title="gff3"></a>gff3</h2><p><a href="http://www.sequenceontology.org/gff3.shtml">GFF2</a>（<a href="http://gmod.org/wiki/GFF3">维基百科</a>）格式早期用的比较多，但是现在用的多的是 GFF3 格式，这也是好多软件所支持的，比如 Gbrowse， Jbrowse 等基因组数据可视化工具。先看下面这个简单的例子：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">##gff-version 3</span><br><span class="hljs-attribute">ctg123</span>  .  exon  <span class="hljs-number">1300</span>  <span class="hljs-number">1500</span>  .  +  .  ID=exon00001<br><span class="hljs-attribute">ctg123</span>  .  exon  <span class="hljs-number">1050</span>  <span class="hljs-number">1500</span>  .  +  .  ID=exon00002<br><span class="hljs-attribute">ctg123</span>  .  exon  <span class="hljs-number">3000</span>  <span class="hljs-number">3902</span>  .  +  .  ID=exon00003<br><span class="hljs-attribute">ctg123</span>  .  exon  <span class="hljs-number">5000</span>  <span class="hljs-number">5500</span>  .  +  .  ID=exon00004<br><span class="hljs-attribute">ctg123</span>  .  exon  <span class="hljs-number">7000</span>  <span class="hljs-number">9000</span>  .  +  .  ID=exon00005<br></code></pre></td></tr></table></figure><p>第一行的##gff-version 3 通常是需要的，而且必须是在文件的第一行。<br>前八列和 GFF2、GFF2.5 类似，但是有几点是要特别注意的，主要是将 GFF3 注释数据用于基因组浏览器时，字段中的一些特殊字符比如空格，&gt; %等都需要使用 URL 编码进行转换才能准确的在 web 中进行展示。<br>第九列同样是表示 attributes，采用的同样是键值对的形式（tag&#x3D;value），只是这里有几个特定的键，具体如下：<br>ID，feature 在整个 GFF3 文件中唯一的标识符；<br>Name，feature 的名字，不同于 ID，Name 不要求唯一，只是方便用户浏览；<br>Alias， 相当于 feature 的别名；<br>Parent，表明该 feature 所属的上一级 feature 的 ID，这种关系可用于 exons-transcripts，transcripts-genes，可以看出一个 feature 可以拥有多个子 feature；<br>Target， 主要是用于序列比对结果的展示，value 的格式为 target_id start end [strand], 其中如果 target_id 中含有空格则需转换为%20；<br>后面还有些其它属性比如 Note 等，这里不再做详细描述。<br>下面再来看下典型的例子：</p><ul><li><p>蛋白质编码基因结构 &#96;&#96;&#96; ctg123 example gene 1050 9000 . + . ID&#x3D;EDEN;Name&#x3D;EDEN;Note&#x3D;protein kinase ctg123 example mRNA 1050 9000 . + . ID&#x3D;EDEN.1;Parent&#x3D;EDEN;Name&#x3D;EDEN.1;Index&#x3D;1 ctg123 example five_prime_UTR 1050 1200 . + . Parent&#x3D;EDEN.1 ctg123 example CDS 1201 1500 . + 0 Parent&#x3D;EDEN.1 ctg123 example CDS 3000 3902 . + 0 Parent&#x3D;EDEN.1 ctg123 example CDS 5000 5500 . + 0 Parent&#x3D;EDEN.1 ctg123 example CDS 7000 7608 . + 0 Parent&#x3D;EDEN.1 ctg123 example three_prime_UTR 7609 9000 . + . Parent&#x3D;EDEN.1</p><pre><code class="hljs">ctg123 example mRNA            1050 9000 . + . ID=EDEN.2;Parent=EDEN;Name=EDEN.2;Index=1ctg123 example five_prime_UTR  1050 1200 . + . Parent=EDEN.2ctg123 example CDS             1201 1500 . + 0 Parent=EDEN.2ctg123 example CDS             5000 5500 . + 0 Parent=EDEN.2ctg123 example CDS             7000 7608 . + 0 Parent=EDEN.2ctg123 example three_prime_UTR 7609 9000 . + . Parent=EDEN.2ctg123 example mRNA            1300 9000 . + . ID=EDEN.3;Parent=EDEN;Name=EDEN.3;Index=1ctg123 example five_prime_UTR  1300 1500 . + . Parent=EDEN.3ctg123 example five_prime_UTR  3000 3300 . + . Parent=EDEN.3ctg123 example CDS             3301 3902 . + 0 Parent=EDEN.3ctg123 example CDS             5000 5500 . + 1 Parent=EDEN.3ctg123 example CDS             7000 7600 . + 1 Parent=EDEN.3ctg123 example three_prime_UTR 7601 9000 . + . Parent=EDEN.3<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><br><span class="hljs-code">  一个名为 EDEN 的基因拥有三个转录本，分别名为 EDEN.1 EDEN.2 EDEN.3， 每个转录本又有 UTR 和 CDS 等信息。</span><br><br><span class="hljs-bullet">- </span>序列比对<br><br></code></pre></td></tr></table></figure></code></pre><p>ctg123 est EST_match 1050 1500 . + . ID&#x3D;Match1;Name&#x3D;agt830.5;Target&#x3D;agt830.5 1 451<br>ctg123 est EST_match 3000 3202 . + . ID&#x3D;Match1;Name&#x3D;agt830.5;Target&#x3D;agt830.5 452 654</p><p>ctg123 est EST_match 5410 5500 . - . ID&#x3D;Match2;Name&#x3D;agt830.3;Target&#x3D;agt830.3 505 595<br>ctg123 est EST_match 7000 7503 . - . ID&#x3D;Match2;Name&#x3D;agt830.3;Target&#x3D;agt830.3 1 504</p><p>ctg123 est EST_match 1050 1500 . + . ID&#x3D;Match3;Name&#x3D;agt221.5;Target&#x3D;agt221.5 1 451<br>ctg123 est EST_match 5000 5500 . + . ID&#x3D;Match3;Name&#x3D;agt221.5;Target&#x3D;agt221.5 452 952<br>ctg123 est EST_match 7000 7300 . + . ID&#x3D;Match3;Name&#x3D;agt221.5;Target&#x3D;agt221.5 953 1253</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><br><span class="hljs-bullet">- </span>定量数据<br></code></pre></td></tr></table></figure><p>ctg123 affy microarray_oligo   1 100 281 . . Name&#x3D;Expt1<br>ctg123 affy microarray_oligo 101 200 183 . . Name&#x3D;Expt1<br>ctg123 affy microarray_oligo 201 300 213 . . Name&#x3D;Expt1<br>ctg123 affy microarray_oligo 301 400 191 . . Name&#x3D;Expt1<br>ctg123 affy microarray_oligo 401 500 288 . . Name&#x3D;Expt1<br>ctg123 affy microarray_oligo 501 600 184 . . Name&#x3D;Expt1</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-string">含</span> <span class="hljs-string">Fasta</span> <span class="hljs-string">格式的</span> <span class="hljs-string">GFF3</span> <span class="hljs-string">格式文件</span> <span class="hljs-string">`##gff-version</span> <span class="hljs-number">3</span> <span class="hljs-string">ctg123</span> <span class="hljs-string">.</span> <span class="hljs-string">exon</span> <span class="hljs-number">1300 </span><span class="hljs-number">1500</span> <span class="hljs-string">.</span> <span class="hljs-string">+</span> <span class="hljs-string">.</span> <span class="hljs-string">ID=exon00001</span> <span class="hljs-string">ctg123</span> <span class="hljs-string">.</span> <span class="hljs-string">exon</span> <span class="hljs-number">1050 </span><span class="hljs-number">1500</span> <span class="hljs-string">.</span> <span class="hljs-string">+</span> <span class="hljs-string">.</span> <span class="hljs-string">ID=exon00002</span> <span class="hljs-string">ctg123</span> <span class="hljs-string">.</span> <span class="hljs-string">exon</span> <span class="hljs-number">3000 </span><span class="hljs-number">3902</span> <span class="hljs-string">.</span> <span class="hljs-string">+</span> <span class="hljs-string">.</span> <span class="hljs-string">ID=exon00003</span> <span class="hljs-string">ctg123</span> <span class="hljs-string">.</span> <span class="hljs-string">exon</span> <span class="hljs-number">5000 </span><span class="hljs-number">5500</span> <span class="hljs-string">.</span> <span class="hljs-string">+</span> <span class="hljs-string">.</span> <span class="hljs-string">ID=exon00004</span> <span class="hljs-string">ctg123</span> <span class="hljs-string">.</span> <span class="hljs-string">exon</span> <span class="hljs-number">7000 </span><span class="hljs-number">9000</span> <span class="hljs-string">.</span> <span class="hljs-string">+</span> <span class="hljs-string">.</span> <span class="hljs-string">ID=exon00005</span> <span class="hljs-comment">##FASTA &gt;ctg123 cttctgggcgtacccgattctcggagaacttgccgcaccattccgccttg tgttcattgctgcctgcatgttcattgtctacctcggctacgtgtggcta tctttcctcggtgccctcgtgcacggagtcgagaaaccaaagaacaaaaa aagaaattaaaatatttattttgctgtggtttttgatgtgtgttttttat aatgatttttgatgtgaccaattgtacttttcctttaaatgaaatgtaat cttaaatgtatttccgacgaattcgaggcctgaaaagtgtgacgccattc ...` 该 GFF3 文件中含有对应的序列，以##FASTA 作为标示。</span><br><br><span class="hljs-comment">## bed</span><br><br><span class="hljs-string">bed（[genome</span> <span class="hljs-string">介绍](http://www.genome.ucsc.edu/FAQ/FAQformat.html#format1)、[bedtools</span> <span class="hljs-string">介绍](http://bedtools.readthedocs.org/en/latest/content/general-usage.html)、</span> [<span class="hljs-string">asia</span> <span class="hljs-string">介绍</span>]<span class="hljs-string">(http://asia.ensembl.org/info/website/upload/bed.html?redirect=no)）格式同样是用于展示序列注释信息，有相应的软件来处理这类格式的文件，如</span> <span class="hljs-string">bedtools。可以用在类似</span> <span class="hljs-string">GBrowse</span> <span class="hljs-string">这样的基因组数据可视化工具中。</span> <span class="hljs-string">以</span> <span class="hljs-string">tab</span> <span class="hljs-string">隔开，它必须的三个字段为</span> <span class="hljs-string">chrom、chromStart、chromEnd，还有</span> <span class="hljs-number">9</span> <span class="hljs-string">个可选字段。注意：用于在</span> <span class="hljs-string">GBrowse</span> <span class="hljs-string">上展示相关注释的</span> <span class="hljs-string">bed</span> <span class="hljs-string">格式通常第一行有一个关于</span> <span class="hljs-string">track</span> <span class="hljs-string">的描述信息。</span>  <br><span class="hljs-string">比如下面的例子：</span><br><br></code></pre></td></tr></table></figure></li></ul><p>track name&#x3D;pairedReads description&#x3D;”Clone Paired Reads” useScore&#x3D;1<br>chr22 1000 5000 cloneA 960 + 1000 5000 0 2 567,488, 0,3512<br>chr22 2000 6000 cloneB 900 - 2000 6000 0 2 433,399, 0,3601</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br><span class="hljs-comment">## sam/bam</span><br><br>http:<span class="hljs-regexp">//</span>blog.sina.com.cn<span class="hljs-regexp">/s/</span>blog_670445240101l30k.html  <br>http:<span class="hljs-regexp">//g</span>enome.sph.umich.edu<span class="hljs-regexp">/wiki/</span>SAM  <br>https:<span class="hljs-regexp">//</span>samtools.github.io<span class="hljs-regexp">/hts-specs/</span>SAMv1.pdf 在生物信息学中尤其是高通量测序数据分析中，大部分的操作都是在实现短片段序列与参考序列的比对（mapping），比如 bowtie 等，这就涉及到如何使用一个统一的格式来表示这种 mapping 结果呢，sam（Sequence Alignment/Map）格式就是来解决这个问题的。sam 文件拥有头部描述和详细比对两部分，其中头部描述是以@开头，后面紧跟两个缩写字母表示相应的含义，SAM 分为两部分，注释信息（header section）和比对结果部分（alignment section），注释信息可有可无，都是以@开头，用不同的 tag 表示不同的信息，主要有@HD，说明符合标准的版本、对比序列的排列顺序；@SQ，参考序列说明；@RG，比对上的序列（read）说明；@PG，使用的程序说明；@CO，任意的说明信息。而详细比对部分是通过 <span class="hljs-number">11</span> 个 tab 隔开的字段来表示。  <br>下面主要讲解下详细比对部分字段的具体含义： ![image](https:<span class="hljs-regexp">//</span>pangao1990.gitee.io<span class="hljs-regexp">/pic/</span>常用生物信息学格式介绍-<span class="hljs-number">2</span>.png) 其中：<br><br><span class="hljs-number">1</span>. QNAME 表示的是查询序列的名称即短片段（reads）的名称；<br><span class="hljs-number">2</span>. FLAG 以整数来表示比对的结果，不同数值有不同的意义，数值也可以是下列数的组合； ![image](https:<span class="hljs-regexp">//</span>pangao1990.gitee.io<span class="hljs-regexp">/pic/</span>常用生物信息学格式介绍-<span class="hljs-number">3</span>.png)<br><br>比如如果 FLAG 是 <span class="hljs-number">4</span> 的话则表示该 reads 没有比对到参考序列上，flag 为 <span class="hljs-number">16</span> 表示 single-end reads 比对到参考序列的反链上， flag 为 <span class="hljs-number">83</span>（<span class="hljs-number">64</span>+<span class="hljs-number">16</span>+<span class="hljs-number">2</span>+<span class="hljs-number">1</span>）表示 paired-end reads 中的第一个 reads 比对到参考序列上了。 <span class="hljs-number">3</span>. RNAME 表示参考序列的名称，比如基因组的染色体编号等，如果没有比对上则显示为*； <span class="hljs-number">4</span>. POS 表示比对的起始位置，以 <span class="hljs-number">1</span> 开始计数，如果没有比对上则显示为 <span class="hljs-number">0</span>； <span class="hljs-number">5</span>. MAPQ 比对质量； <span class="hljs-number">6</span>. CIGAR CIGAR 字符串，即比对的详细情况，简要比对信息表达式（Compact Idiosyncratic Gapped Alignment Report），其以参考序列为基础，使用数字加字母表示比对结果，比如 <span class="hljs-number">3</span>S6M1P1I4M，前三个碱基被剪切去除了，然后 <span class="hljs-number">6</span> 个比对上了，然后打开了一 个缺口，有一个碱基插入，最后是 <span class="hljs-number">4</span> 个比对上了，是按照顺序的； <span class="hljs-number">7</span>. RNEXT 双末端测序中下一个 reads 比对的参考系列的名称，如果没有则用*表示，如果和前一个 reads 比对到同一个参考序列则用=表示； <span class="hljs-number">8</span>. PNEXT 下一个 reads 比对到参考序列上的位置，如果没有则用 <span class="hljs-number">0</span> 表示； <span class="hljs-number">9</span>. ISIZE/TLEN query 序列的模板长度或者插入长度，Template 的长度，最左边得为正，最右边的为负，中间的不用定义正负，不分区段（single-segment)的比对上，或者不可用时，此处为 <span class="hljs-number">0</span>； <span class="hljs-number">10</span>. reads 的序列信息； <span class="hljs-number">11</span>. reads 的序列质量信息，同 FASTQ。后面还有些可选字段，比如：  <br>可选字段（optional fields)，格式如：TAG:TYPE:VALUE，其中 TAG 有两个大写字母组成，每个 TAG 代表一类信息，每一行一个 TAG 只能出现一次，TYPE 表示 TAG 对应值的类型，可以是字符串、整数、字节、数组等。  <br>示例：<br><br></code></pre></td></tr></table></figure><p>:497:R:-272+13M17D24M11314973737M151003386620CGGGTCTGACCTGAGGAGAACTGTGCTCCGCCTTCAG0;&#x3D;&#x3D;-&#x3D;&#x3D;9;&gt;&gt;&gt;&gt;&gt;&#x3D;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&#x3D;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;XT:A:UNM:i:0SM:i:37AM:i:0X0:i:1X1:i:0XM:i:0XO:i:0XG:i:0MD:Z:37<br>:20389:F:275+18M2D19M99117644037M&#x3D;17919314TATGACTGCTAATAATACCTACACATGTTAGAACCAT&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&lt;&lt;&gt;&gt;&gt;&lt;&lt;&gt;&gt;4::&gt;&gt;:&lt;9RG:Z:UM0098:1XT:A:RNM:i:0SM:i:0AM:i:0X0:i:4X1:i:0XM:i:0XO:i:0XG:i:0MD:Z:37<br>:20389:F:275+18M2D19M147117919018M2D19M&#x3D;17644-314GTAGTACCAACTGTAAGTCCTTATCTTCATACTTTGT;44999;499&lt;8&lt;8&lt;&lt;&lt;8&lt;&lt;&gt;&lt;&lt;&lt;&lt;&gt;&lt;7&lt;;&lt;&lt;&lt;&gt;&gt;&lt;&lt;XT:A:RNM:i:2SM:i:0AM:i:0X0:i:4X1:i:0XM:i:0XO:i:1XG:i:2MD:Z:18^CA19<br>:21597+10M2I25M:R:-2098312167808M2I27M&#x3D;21469-244CACCACATCACATATACCAAGCCTGGCTGTGTCTTCT&lt;;9&lt;&lt;5&gt;&lt;&lt;&lt;&lt;&gt;&lt;&lt;&lt;&gt;&gt;&lt;&lt;&gt;&lt;&gt;&gt;&lt;9&gt;&gt;&lt;&gt;&gt;&gt;9&gt;&gt;&gt;&lt;&gt;XT:A:RNM:i:2SM:i:0AM:i:0X0:i:5X1:i:0XM:i:0XO:i:1XG:i:2MD:Z:35</p><pre><code class="hljs">解释：其中可以看出 Aligenment 2 和 Alignment 3 是成对的 reads，其插入长度为 314。 bam 格式中的 b 是 binary 的意思，是 sam 格式的二进制表示方式，为什么要用二进制表示呢？ 因为 sam 格式文件大小通常是十分大的，一般是以 G 为单位，所以为了减少存储量等因素而将 sam 转换为二进制格式以便于分析。  sam/bam 格式是由特定的一些软件（比如 samtools）来处理的，包括格式互转、排序、建立索引、搜寻突变等操作，后续分析中会详细讲解 samtools 工具的使用方法。 ![image](https://pangao1990.gitee.io/pic/常用生物信息学格式介绍-4.png)## vcf[vcf](http://samtools.github.io/hts-specs/VCFv4.2.pdf)（Variant Call Format）格式是用于表示突变信息的文本格式，可以用来表示 single nucleotide variants, insertions/deletions, copy number variants and structural variants 等。VCF 格式同样是分为两大部分，一部分是注释描述信息，一部分是具体的突变信息，其中注释信息是以##开头的，我们来看下面这个例子： ![image](https://pangao1990.gitee.io/pic/常用生物信息学格式介绍-5.png) 我们着重来关注第二部分的每列字段是什么含义：  CHROM 即 chromosome， 染色体名称；  POS 即 position， 发生突变的参考序列的位置（从 1 开始计数）；  ID 突变的名称；  REF 参考序列 POS 上的碱基；  ALT 发生突变的碱基，多个的话以,连接， 可选符号为 ATCGN\*，大小写敏感；  QUAL 基于 Phred 格式的表示 ALT 的质量，也可以理解为可靠性；  FILTER 过滤后的状态，即按照可靠性进行筛选；  INFO 额外信息，可结合注释描述信息进行理解 ![image](https://pangao1990.gitee.io/pic/常用生物信息学格式介绍-6.png) 针对 vcf 格式有如 bcftools 等软件进行处理。---</code></pre>]]></content>
    
    
    <categories>
      
      <category>生物信息分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生物信息分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生物信息分析中的测序概念</title>
    <link href="/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E6%B5%8B%E5%BA%8F%E6%A6%82%E5%BF%B5/"/>
    <url>/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E6%B5%8B%E5%BA%8F%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h2 id="De-Novo测序："><a href="#De-Novo测序：" class="headerlink" title="De Novo测序："></a>De Novo测序：</h2><p>De Novo测序也叫从头测序，是首次对一个物种的基因组进行测序，用生物信息学的分析方法对测序所得序列进行组装，从而获得该物种的基因组序列图谱。</p><span id="more"></span><h2 id="全基因组重测序："><a href="#全基因组重测序：" class="headerlink" title="全基因组重测序："></a>全基因组重测序：</h2><p>全基因组重测序是对已知基因组序列的物种进行不同个体的基因组测序，然后运用生物信息学分析手段对序列进行拼接，组装，从而获得该个体的基因组图谱；或者对不同组织（如肿瘤）进行测序，分析体细胞突变。</p><h2 id="转录组测序-RNA-seq-："><a href="#转录组测序-RNA-seq-：" class="headerlink" title="转录组测序(RNA-seq)："></a>转录组测序(RNA-seq)：</h2><p>转录组是某个物种或者特定细胞类型产生的所有转录本的集合，转录组测序(RNA-seq) 是最近发展起来的利用深度测序技术进行转录分析的方法,可以对全转录组进行系统的研究。</p><h2 id="宏基因组测序："><a href="#宏基因组测序：" class="headerlink" title="宏基因组测序："></a>宏基因组测序：</h2><p>宏基因组测序，是对特定环境样品中的微生物群体基因组(尤其是那些种类众多的难于培养的微生物)，进行序列测定和功能基因的发掘，来分析微生物群体基因组成及功能，解读微生物群体的多样性与丰度，发掘和研究新的、具有特定功能的基因。</p><h2 id="目标序列捕获测序："><a href="#目标序列捕获测序：" class="headerlink" title="目标序列捕获测序："></a>目标序列捕获测序：</h2><p>目标序列捕获测序，是将感兴趣的基因组区域定制成特异性探针与基因组DNA进行杂交（固相或液相），将目标基因组区域的DNA片段进行富集后再利用第二代测序技术进行测序。这种新的方法与PCR方法相比，通量高，同时能节省大量的时间及成本。</p><h2 id="测序深度（Sequencing-Depth）："><a href="#测序深度（Sequencing-Depth）：" class="headerlink" title="测序深度（Sequencing Depth）："></a>测序深度（Sequencing Depth）：</h2><p>测序得到的碱基总量（bp）与基因组大小（Genome）的比值，它是评价测序量的指标之一。测序深度与基因组覆盖度之间是一个正相关的关系，测序带来的错误率或假阳性结果会随着测序深度的提升而下降。</p><h2 id="覆盖度（Coverage）："><a href="#覆盖度（Coverage）：" class="headerlink" title="覆盖度（Coverage）："></a>覆盖度（Coverage）：</h2><p>如果一条100bp的序列，我们仅测到80bp，就说这一条序列的覆盖度是80%。</p><hr>]]></content>
    
    
    <categories>
      
      <category>生物信息分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生物信息分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生物信息分析中的reads是什么</title>
    <link href="/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84reads%E6%98%AF%E4%BB%80%E4%B9%88/"/>
    <url>/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84reads%E6%98%AF%E4%BB%80%E4%B9%88/</url>
    
    <content type="html"><![CDATA[<p><img src="https://pangao1990.gitee.io/pic/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84reads%E6%98%AF%E4%BB%80%E4%B9%88-1.png" alt="image"> 测序得到的原始图像数据经 base calling 转化为序列数据，我们称之为 <code>raw data</code> 或 <code>raw reads</code> ，结果以 fastq 文件格式存储， fastq 文件为用户得到的最原始文件，里面存储 reads 的序列以及 reads 的测序质量。在 fastq 格式文件中每个 read 由四行描述：</p><span id="more"></span><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs applescript">@<span class="hljs-built_in">read</span> ID<br>TGGCGGAGGGATTTGAACCC<br>+<br>bbbbbbbbabbbbbbbbbbb<br></code></pre></td></tr></table></figure><ul><li><strong>Single-end(SE)测序</strong>：1 个 fastq 文件</li><li><strong>Pair-end(PE)测序</strong>：2 个 fastq 文件分别存放 read1 和 read2 的数据</li></ul><p>每个序列共有 4 行，第 1 行和第 3 行是序列名称(有的 fq 文件为了节省存储空间会省略第三行“＋”后面的序列名称)；第 2 行是序列；第 4 行是序列的测序质量，每个字符对应第 2 行每个碱基，第 4 行每个字符对应的 ASCII 值减去 64，即为该碱基的测序质量值，比如 h 对应的 ASCII 值为 104，那么其对应的碱基质量值是 40。<br>碱基质量值范围为 0 到 40。下表为 Solexa 测序错误率与测序质量值简明对应关系，具体计算公式如下：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">Q</span> <span class="hljs-operator">=</span> -<span class="hljs-number">10</span> log10P<br></code></pre></td></tr></table></figure><p>Solexa 测序错误率与测序质量值简明对应关系:</p><p><img src="https://pangao1990.gitee.io/pic/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84reads%E6%98%AF%E4%BB%80%E4%B9%88-2.png" alt="image"></p><hr>]]></content>
    
    
    <categories>
      
      <category>生物信息分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生物信息分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>外显子、内含子、mRNA、CDS、ORF的区别与联系</title>
    <link href="/%E5%A4%96%E6%98%BE%E5%AD%90%E3%80%81%E5%86%85%E5%90%AB%E5%AD%90%E3%80%81mRNA%E3%80%81CDS%E3%80%81ORF%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/"/>
    <url>/%E5%A4%96%E6%98%BE%E5%AD%90%E3%80%81%E5%86%85%E5%90%AB%E5%AD%90%E3%80%81mRNA%E3%80%81CDS%E3%80%81ORF%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/</url>
    
    <content type="html"><![CDATA[<p><img src="https://pangao1990.gitee.io/pic/%E5%A4%96%E6%98%BE%E5%AD%90%E3%80%81%E5%86%85%E5%90%AB%E5%AD%90%E3%80%81mRNA%E3%80%81CDS%E3%80%81ORF%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB-1.png" alt="image"></p><span id="more"></span><h2 id="DNA-复制："><a href="#DNA-复制：" class="headerlink" title="DNA 复制："></a>DNA 复制：</h2><ul><li><h4 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h4><strong>DNA 复制</strong>：以 DNA 为模板，在 DNA 聚合酶的催化作用下，将四种游离的 dNTP 按照碱基互补配对原则合成新链 DNA 。<br> <strong>转录</strong>：以 DNA 为模版，在 DNA 指导的 RNA 聚合酶的作用下，将四种游离的 NTP 按照碱基互补配对的原则合成 RNA 。<br> <strong>翻译</strong>：以 mRNA 为模板，在核糖体内合成蛋白质的过程。</li><li><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><strong>DNA 复制</strong>：模板为双链 DNA ，合成的新链与模板链一模一样，原料为四种 dNTP ，为半保留复制，需要引物。<br> <strong>转录</strong>：模板为双链 DNA ，为半不连续转录需要引物，原料为四种 NTP ，合成的新链除了把 DNA 上的 T 改为 U 外，其他一样。<br> <strong>翻译</strong>： 模板为 mRNA ，原料为 20 中游离的氨基酸，3 个碱基决定一个氨基酸。</li></ul><h2 id="mRNA："><a href="#mRNA：" class="headerlink" title="mRNA："></a>mRNA：</h2><p>mRNA（messenger RNA，信使 RNA）信使 RNA 是由 DNA 经 hnRNA 剪接而成，携带遗传信息的能指导蛋白合成的一类单链核糖核酸。</p><h2 id="外显子和内含子："><a href="#外显子和内含子：" class="headerlink" title="外显子和内含子："></a>外显子和内含子：</h2><p>基因 DNA 分为编码区和非编码区，编码区包含外显子和内含子，一般非编码区具有基因表达的调控功能，如启动子在非编码区。编码区则转录为 mRNA 并最终翻译成蛋白质。<br>外显子和内含子都被转录到 mRNA 前体 hnRNA 中，当 hnRNA 进行剪接变为成熟的 mRNA 时，内含子被切除，而外显子保留。实际上真正编码蛋白质的是外显子，而内含子则无编码功能。<br>内含子存在于 DNA 中，在转录的过程中，DNA 上的内含子也会被转录到前体 RNA 中，但前体 RNA 上的内含子会在 RNA 离开细胞核进行翻译前被切除。</p><h2 id="CDS："><a href="#CDS：" class="headerlink" title="CDS："></a>CDS：</h2><p>Sequencecodingfor aminoacids in protein 蛋白质编码区 CDS 是 Codingsequence 的缩写，是编码一段蛋白产物的序列，是结构基因组学术语。</p><h2 id="开放读码框-ORF"><a href="#开放读码框-ORF" class="headerlink" title="开放读码框 ORF"></a>开放读码框 ORF</h2><p>开放读码框是从一个起始密码子开始到一个终止密码子结束的一段序列；不是所有读码框都能被表达出蛋白产物，或者能表达出占有优势或者能产生生物学功能的蛋白。</p><p>CDS，是编码一段蛋白产物的序列。<br>CDS 必定是一个 ORF 。但也可能包括很多 ORF 。<br>反之，每个 ORF 不一定都是 CDS 。</p><p>外显子与 CDS 区不是完全一致的，CDS 区一定属于外显子，但是外显子不一定是 CDS 区，也就是说外显子不一定都能翻译成蛋白的。</p><p>mRNA 包括 UTR 和 CDS ！</p><hr>]]></content>
    
    
    <categories>
      
      <category>生物信息分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生物信息分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ParallelsDesktop-虚拟机Mac绿色版</title>
    <link href="/ParallelsDesktop-%E8%99%9A%E6%8B%9F%E6%9C%BAMac%E7%BB%BF%E8%89%B2%E7%89%88/"/>
    <url>/ParallelsDesktop-%E8%99%9A%E6%8B%9F%E6%9C%BAMac%E7%BB%BF%E8%89%B2%E7%89%88/</url>
    
    <content type="html"><![CDATA[<h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><blockquote><p>Parallels Desktop 是一款运行在 Mac 电脑上的极为优秀的虚拟机软件。用户可以在 Mac OS X 下非常方便运行 Windows、Linux 等操作系统及应用。用户不必繁琐重复地重启电脑即可在 Win 与 Mac 之间切换甚至同时使用它们。</p><p><img src="https://pangao1990.gitee.io/pic/ParallelsDesktop-%E8%99%9A%E6%8B%9F%E6%9C%BAMac%E7%BB%BF%E8%89%B2%E7%89%88-1.png" alt="image"></p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a><span id="more"></span></h2><h4 id="破解教程："><a href="#破解教程：" class="headerlink" title="破解教程："></a>破解教程：</h4><p>压缩包内含教程。</p><hr><h4 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h4><p><a href="https://pan.baidu.com/s/1nmYCgagHCGjjnYbGAJ826w">V140145154 版-云盘下载</a> <strong>密码: 9mhd</strong></p><p><strong>dmg 打开密码: blog.pangao.vip</strong></p><blockquote><p>本软件来源于网络，仅供学习使用，请在 24 小时内删除，本人不承担任何相关责任！若侵犯某些组织或个人的权益，请联系我删除。</p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>Mac软件分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件分享</tag>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Perl处理文件及文件夹</title>
    <link href="/Perl%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%E5%8F%8A%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    <url>/Perl%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%E5%8F%8A%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    
    <content type="html"><![CDATA[<figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> FindBin <span class="hljs-string">qw($Bin)</span>;<br><br><span class="hljs-comment">#遍历文件夹</span><br><span class="hljs-keyword">my</span> $fileReportDir = $Bin;<span class="hljs-comment">#出报告所在的文件夹地址</span><br><span class="hljs-keyword">if</span>(-e $fileReportDir)&#123;<br><span class="hljs-keyword">opendir</span> DIR, $fileReportDir || <span class="hljs-keyword">die</span> <span class="hljs-string">&quot;Error in opening dir $fileReportDir\n&quot;</span>;<br><span class="hljs-keyword">while</span>( <span class="hljs-keyword">my</span> $file = <span class="hljs-keyword">readdir</span>(DIR))&#123;<br><span class="hljs-keyword">next</span> <span class="hljs-keyword">if</span> $file eq <span class="hljs-string">&quot;.&quot;</span>;<br><span class="hljs-keyword">next</span> <span class="hljs-keyword">if</span> $file eq <span class="hljs-string">&quot;..&quot;</span>;<br><span class="hljs-keyword">my</span> $fileAll = $fileReportDir.<span class="hljs-string">&quot;/&quot;</span>.$file;<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">unlink</span>($fileAll))&#123;<br><span class="hljs-keyword">print</span> <span class="hljs-string">&quot;=====程序终止！=====\n删除表格（&quot;</span>.$fileAll.<span class="hljs-string">&quot;）失败，请手动删除\n&quot;</span>;<br><span class="hljs-comment">#保留黑框</span><br><span class="hljs-keyword">system</span> pause;<br><span class="hljs-comment">#程序停止运行</span><br><span class="hljs-keyword">die</span>;<br>    &#125;<br> &#125;<br> <span class="hljs-keyword">closedir</span> DIR;<br>&#125;<br><br><span class="hljs-comment">#读取文件内容</span><br><span class="hljs-keyword">open</span> FILE, <span class="hljs-string">&quot;&lt;$file&quot;</span> || <span class="hljs-keyword">die</span> <span class="hljs-string">&quot;Not Found file: $file\n&quot;</span>;<br><span class="hljs-keyword">while</span> (&lt;FILE&gt;)&#123;<br><span class="hljs-keyword">my</span> ($gene,$chr) = (<span class="hljs-keyword">split</span> <span class="hljs-regexp">/\t/</span>,$_)[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>];<br>&#125;<br><span class="hljs-keyword">close</span> FILE;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Perl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Perl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Perl处理Excel</title>
    <link href="/Perl%E5%A4%84%E7%90%86Excel/"/>
    <url>/Perl%E5%A4%84%E7%90%86Excel/</url>
    
    <content type="html"><![CDATA[<ul><li>优点<br>无需安装模块依赖，功能强大</li><li>缺点<br>无法实现跨平台，必须依赖 win 系统和 office 软件</li></ul><p>如果想实现跨平台处理 excel 请移步 <a href="https://pangao1990.gitee.io/perl处理Excel(跨平台)">perl 处理 Excel(跨平台)</a></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> FindBin <span class="hljs-string">qw($Bin)</span>;<br><br><span class="hljs-keyword">use</span> Win32::OLE <span class="hljs-string">qw(in with)</span>;<br><span class="hljs-keyword">use</span> Win32::OLE::Const <span class="hljs-string">&#x27;Microsoft Excel&#x27;</span>;<br><br><span class="hljs-keyword">my</span> $Excel = Win32::OLE-&gt;GetActiveObject(<span class="hljs-string">&#x27;Excel.Application&#x27;</span>) || Win32::OLE-&gt;new(<span class="hljs-string">&#x27;Excel.Application&#x27;</span>, <span class="hljs-string">&#x27;Quit&#x27;</span>);<br><span class="hljs-comment">#不显示警告窗口</span><br>$Excel-&gt;&#123;DisplayAlerts&#125; = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">my</span> $Book = $Excel-&gt;Workbooks-&gt;Open($file);<br><span class="hljs-keyword">my</span> $Sheet = $Book-&gt;Worksheets(<span class="hljs-number">1</span>);<br><span class="hljs-comment">#my $Sheet = $Book-&gt;Worksheets($sheetName);</span><br><span class="hljs-comment">#my $SheetName = $Book-&gt;Worksheets(1)-&gt;&#123;Name&#125;;</span><br><br><span class="hljs-keyword">my</span> $maxRow = $Sheet-&gt;UsedRange-&gt;Rows-&gt;Count;<br><span class="hljs-keyword">my</span> $maxCol = $Sheet-&gt;UsedRange-&gt;Columns-&gt;Count;<br><br><span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $row(<span class="hljs-number">1</span>..$maxRow)&#123;<br>    <span class="hljs-keyword">foreach</span> <span class="hljs-keyword">my</span> $col(<span class="hljs-number">1</span>..$maxCol)&#123;<br>        <span class="hljs-comment">#隐藏的单元格，过滤</span><br>        <span class="hljs-keyword">next</span> <span class="hljs-keyword">if</span> $Sheet-&gt;Range(<span class="hljs-string">&quot;$row:$row&quot;</span>)-&gt;EntireRow-&gt;&#123;Hidden&#125;;<br><br>        <span class="hljs-comment">#获取单元格的值</span><br>        <span class="hljs-keyword">my</span> $value = $Sheet-&gt;Cells($row,$col)-&gt;&#123;Value&#125;;<br><br>        <span class="hljs-comment">#修改单元格填充色</span><br>        $Sheet-&gt;Cells($row,$col)-&gt;Interior-&gt;&#123;Color&#125; = $InColor;<br><br>        <span class="hljs-comment">#字体加粗</span><br>        $sheet -&gt; Range(<span class="hljs-string">&quot;G7:H7&quot;</span>) -&gt; Font -&gt; <span class="hljs-string">&#123;Bold&#125;</span> = <span class="hljs-string">&quot;True&quot;</span>;<br><br>        <span class="hljs-comment">#字体斜体</span><br>        $sheet -&gt; Range(<span class="hljs-string">&quot;G7:H7&quot;</span>) -&gt; Font -&gt; <span class="hljs-string">&#123;Italic&#125;</span> = <span class="hljs-string">&quot;True&quot;</span>;<br><br>        <span class="hljs-comment">#字体下划线</span><br>        $sheet -&gt; Range(<span class="hljs-string">&quot;G7:H7&quot;</span>) -&gt; Font -&gt; <span class="hljs-string">&#123;Underline&#125;</span> = xlUnderlineStyleSingle;<br><br>        <span class="hljs-comment">#字体大小</span><br>        $sheet -&gt; Range(<span class="hljs-string">&quot;G7:H7&quot;</span>) -&gt; Font -&gt; <span class="hljs-string">&#123;Size&#125;</span> = <span class="hljs-number">8</span>;<br><br>        <span class="hljs-comment">#字体名称</span><br>        $sheet -&gt; Range(<span class="hljs-string">&quot;G7:H7&quot;</span>) -&gt; Font -&gt; <span class="hljs-string">&#123;Name&#125;</span> = <span class="hljs-string">&quot;Arial&quot;</span>;<br><br>        <span class="hljs-comment">#字体颜色</span><br>        $sheet -&gt; Range(<span class="hljs-string">&quot;G7:H7&quot;</span>) -&gt; Font -&gt; <span class="hljs-string">&#123;ColorIndex&#125;</span> = <span class="hljs-number">4</span>;<br><br>        <span class="hljs-comment">#列宽</span><br>        $sheet -&gt; Range(<span class="hljs-string">&#x27;A:A&#x27;</span>) -&gt; <span class="hljs-string">&#123;ColumnWidth&#125;</span> = <span class="hljs-number">9.14</span>;<br><br>        <span class="hljs-comment">#行高</span><br>        $sheet -&gt; Range(<span class="hljs-string">&quot;8:8&quot;</span>) -&gt; <span class="hljs-string">&#123;RowHeight&#125;</span> = <span class="hljs-number">30</span>;<br>    &#125;<br>&#125;<br><br>$Book-&gt;Save();<br>$Book-&gt;Close();<br>$Excel-&gt;Quit();<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Perl</category>
      
      <category>Excel</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Perl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Perl的简单联网操作</title>
    <link href="/Perl%E7%9A%84%E7%AE%80%E5%8D%95%E8%81%94%E7%BD%91%E6%93%8D%E4%BD%9C/"/>
    <url>/Perl%E7%9A%84%E7%AE%80%E5%8D%95%E8%81%94%E7%BD%91%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> LWP::UserAgent;<br><br><span class="hljs-keyword">my</span> $browser = LWP::UserAgent-&gt;new(<span class="hljs-string">agent =&gt;</span> <span class="hljs-string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&#x27;</span>);<br><span class="hljs-keyword">my</span> $TARGET_URL = <span class="hljs-string">&quot;http://www.omim.org/entry/&quot;</span>.$OMIM;<br><span class="hljs-keyword">my</span> $response = $browser-&gt;get($TARGET_URL);<br><span class="hljs-keyword">my</span> $htmlcontent = $response-&gt;content;<br></code></pre></td></tr></table></figure><span id="more"></span><h2 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">use</span> LWP::UserAgent;<br><br><span class="hljs-keyword">my</span> $browser = LWP::UserAgent-&gt;new;<br>$browser-&gt;timeout(<span class="hljs-number">600</span>);<span class="hljs-comment">#设置缓冲时间600s</span><br><span class="hljs-keyword">my</span> $TARGET_URL = <span class="hljs-string">&quot;http://122.114.25.231:8582/emp/selfOpenAccountAction!khQuery.action?step=xhdq&quot;</span>;<br><span class="hljs-keyword">my</span> %headers=(<br><span class="hljs-string">&#x27;Accept&#x27;</span>=&gt;<span class="hljs-string">&#x27;text/html, application/xhtml+xml, */*&#x27;</span>,<br><span class="hljs-string">&#x27;Accept-Encoding&#x27;</span>=&gt;<span class="hljs-string">&#x27;gzip, deflate&#x27;</span>,<br><span class="hljs-string">&#x27;Accept-Language&#x27;</span> =&gt; <span class="hljs-string">&#x27;zh-CN&#x27;</span>,<br><span class="hljs-string">&#x27;Cache-Control&#x27;</span> =&gt; <span class="hljs-string">&#x27;no-cache&#x27;</span>,<br><span class="hljs-string">&#x27;Connection&#x27;</span> =&gt; <span class="hljs-string">&#x27;Keep-Alive&#x27;</span>,<br><span class="hljs-string">&#x27;Content-Length&#x27;</span> =&gt; <span class="hljs-string">&#x27;71&#x27;</span>,<br><span class="hljs-string">&#x27;Content-Type&#x27;</span> =&gt; <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br><span class="hljs-string">&#x27;Cookie&#x27;</span> =&gt; <span class="hljs-string">&#x27;JSESSIONID=4D4E92EB8830CA8B5DC7F9AA1751AC71&#x27;</span>,<br><span class="hljs-string">&#x27;Host&#x27;</span> =&gt; <span class="hljs-string">&#x27;122.114.25.231:8582&#x27;</span>,<br><span class="hljs-string">&#x27;Referer&#x27;</span> =&gt; <span class="hljs-string">&#x27;http://122.114.25.231:8582/emp/query.jsp&#x27;</span>,<br><span class="hljs-string">&#x27;User-Agent&#x27;</span> =&gt; <span class="hljs-string">&#x27;Mozilla/5.0 (MSIE 9.0; Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko&#x27;</span>);<br><span class="hljs-keyword">my</span> $response = $browser-&gt;post($TARGET_URL,<br>[        <br><span class="hljs-string">&#x27;dealer.certificateNum&#x27;</span> =&gt; $id,<br><span class="hljs-string">&#x27;dealer.name&#x27;</span> =&gt; $name,<br>]<br>,%headers<br>); <br><span class="hljs-keyword">if</span> ($response-&gt;is_success) &#123; <br><span class="hljs-keyword">my</span> $htmlcontentStr = $response-&gt;content;<br>&#125;<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>Perl</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Perl</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">JPFLY的小破栈</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://amumu547426.github.io" target="_blank" class="my-url">amumu547426.github.io</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">世间美好与你环环相扣</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">JPF</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证19990801号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-06-11</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">高浩轩</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="https://agrx.gitee.io/" target="_blank" class="my-url">https://agrx.gitee.io/</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">己所不欲，勿施于人</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">高浩轩</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20201314号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-08-16</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">潘高的小站</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://blog.pangao.vip" target="_blank" class="my-url">blog.pangao.vip</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">IT套路深，必须瞎折腾</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">潘高</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证19901222号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-02-20</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div><!-- <br> google广告 <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5317369003185250" data-ad-slot="9014150860" data-ad-format="auto" data-full-width-responsive="true"></ins><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script> -->]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">保温杯的小栈</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="https://1357.ga" target="_blank" class="my-url">1357.ga</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">等我写完作业了一定来更新博客！</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">保温杯</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证666666号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-12-23</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">帅帅的南山</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://blog.2oo6.cn" target="_blank" class="my-url">blog.2oo6.cn</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">假如我年少有为 知进退</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">南山</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证19981314号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2021-05-01</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">高浩轩</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="https://agrx.gitee.io/" target="_blank" class="my-url">https://agrx.gitee.io/</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">己所不欲，勿施于人</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">高浩轩</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20201314号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-08-16</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>关于潘高</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<div class="note note-primary">            <p> 选择了<span style="color:red">破解生命密码</span>的专业，奈何对<span style="color:dodgerblue">计算机</span>情有独钟。</p><div style="text-align:right"><span>———— 潘高，2010 年 9 月 15 日</span></div>          </div><hr><div class="note note-success">            <p> <b>与碳基生命交流：</b></p><p><span style="color:red">中国话</span></p><p><b>与硅基生命交流：</b></p><p><span style="color:red">Python</span>、<span style="color:dodgerblue">JavaScript</span>、<span style="color:purple">CSS</span>、<span style="color:green">H5</span>、<span style="color:darkcyan">PHP</span>、<span style="color:orange">Perl</span>、<span style="color:purple">Java</span>、<span style="color:red">Swift</span> </p>          </div><hr><div class="note note-warning">            <p> <b>关于我</b></p><ul><li><span style="color:red">生物技术</span>专业的<span style="color:dodgerblue">程序猿</span></li><li>经常折腾各种<span style="color:goldenrod">系统</span>、<span style="color:green">软件</span>和<span style="color:darkcyan">APP</span>，<span style="color:dodgerblue">电脑重装</span>，<span style="color:purple">手机刷机</span></li><li>擅于利用<span style="color:red">搜索</span>解决各类问题</li><li><span style="color:purple">追求完美</span>，喜欢把各种事物变得<span style="color:green">井井有条</span></li><li>头发比较<span style="color:green">皮</span>，它喜欢待在<span style="color:darkcyan">枕头上</span>、<span style="color:dodgerblue">书桌上</span>、<span style="color:purple">地板上</span>，就是不喜欢待在<span style="color:red">头上</span></li></ul>          </div><hr><p><b>欢迎交流：</b></p><ul><li><span style="color:goldenrod">QQ 邮箱</span>: <a href="mailto:&#112;&#97;&#110;&#103;&#x61;&#x6f;&#x31;&#57;&#57;&#x30;&#64;&#x71;&#113;&#46;&#x63;&#111;&#109;">&#112;&#97;&#110;&#103;&#x61;&#x6f;&#x31;&#57;&#57;&#x30;&#64;&#x71;&#113;&#46;&#x63;&#111;&#109;</a></li><li><span style="color:green">谷歌邮箱</span>: <a href="mailto:&#49;&#57;&#x39;&#x30;&#112;&#97;&#x6e;&#x67;&#97;&#111;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;">&#49;&#57;&#x39;&#x30;&#112;&#97;&#x6e;&#x67;&#97;&#111;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></li><li><span style="color:orange">GitHub</span>: <a href="https://github.com/pangao1990">https://github.com/pangao1990</a></li><li><span style="color:red">知乎</span>: <a href="https://www.zhihu.com/people/pangao1990">https://www.zhihu.com/people/pangao1990</a></li><li><span style="color:darkcyan">CSDN</span>: <a href="https://blog.csdn.net/u011236348">https://blog.csdn.net/u011236348</a></li><li><span style="color:dodgerblue">掘金</span>: <a href="https://juejin.im/user/5b6711f25188251af53e0255">https://juejin.im/user/5b6711f25188251af53e0255</a></li><li><span style="color:purple">简书</span>: <a href="https://www.jianshu.com/u/1f66d66f5122">https://www.jianshu.com/u/1f66d66f5122</a></li><li><span style="color:orange">哔哩哔哩</span>：<a href="https://space.bilibili.com/475939975">https://space.bilibili.com/475939975</a></li><li><span style="color:goldenrod">码云</span>: <a href="https://gitee.com/pangao1990">https://gitee.com/pangao1990</a></li><li><span style="color:darkcyan">Coding</span>: <a href="https://dev.tencent.com/u/pangao1990">https://dev.tencent.com/u/pangao1990</a></li><li><span style="color:dodgerblue">微博</span>: <a href="https://weibo.com/1768023592">https://weibo.com/1768023592</a></li><li><span style="color:red">微信公众号</span>：<strong>潘高陪你学编程</strong> </br><img src="https://cdn.jsdelivr.net/gh/pangao1990/pangao1990.github.io/pic/%E6%BD%98%E9%AB%98%E9%99%AA%E4%BD%A0%E5%AD%A6%E7%BC%96%E7%A8%8B.jpg" alt="image"></li></ul><div class="note note-secondary">            <p><b>有什么留言或问题直接在文末留下评论即可。</b> </p>          </div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">黄明礼的博客</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="https://huangmingli.ml" target="_blank" class="my-url">huangmingli.ml</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">一起学习，一起进步 o(￣▽￣)ブ</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">黄明礼</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证66881203号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-11-27</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div><!-- <br> google广告 <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5317369003185250" data-ad-slot="9014150860" data-ad-format="auto" data-full-width-responsive="true"></ins><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script> -->]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">Fly’s Blog</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="https://hexo.flykiss.xyz" target="_blank" class="my-url">hexo.flykiss.xyz</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">记录下学习与生活</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">Yu Jerry</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20190823号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2021-03-19</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}.ml-20 {    margin-left:20px;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">Program Blog</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value">            <a href="http://sunyanzheng.cn" target="_blank" class="my-url">sunyanzheng.cn</a>            <a href="http://c.sunyanzheng.cn" target="_blank" class="my-url ml-20">c.sunyanzheng.cn</a>            <a href="http://g.sunyanzheng.cn" target="_blank" class="my-url ml-20">g.sunyanzheng.cn</a>        </b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">折腾！</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">SunYanzheng</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证66666666号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-07-25</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">陈鑫磊的博客</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="https://www.cxl2020mc.top" target="_blank" class="my-url">www.cxl2020mc.top</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">这个人太懒了，什么都没留下……</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">陈鑫磊</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20210203号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2021-05-10</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div><!-- <br> google广告 <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5317369003185250" data-ad-slot="9014150860" data-ad-format="auto" data-full-width-responsive="true"></ins><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script> -->]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">DIYsay</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://www.iaia.cc" target="_blank" class="my-url">www.iaia.cc</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">小仙女来啦~</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">小仙女</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">媛ICP证123456号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-11-20</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div><!-- <br> google广告 <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5317369003185250" data-ad-slot="9014150860" data-ad-format="auto" data-full-width-responsive="true"></ins><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script> -->]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">海客GO</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://www.hack-gov.com.cn" target="_blank" class="my-url">www.hack-gov.com.cn</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">爱牟 听着海客的瀛谈~</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">xwcker</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证19960803号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-11-20</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div><!-- <br> google广告 <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5317369003185250" data-ad-slot="9014150860" data-ad-format="auto" data-full-width-responsive="true"></ins><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script> -->]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">Sapphire | Blog</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://notspr.com" target="_blank" class="my-url">notspr.com</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">興趣使然的博客</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">舒沛然</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20120317号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2021-05-11</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">青柠博客</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://www.limeblog.cn" target="_blank" class="my-url">www.limeblog.cn</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">来自网络的搬运工！</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">Morishima</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20210801号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2021-08-13</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">陈智林的博客</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://www.chey.top" target="_blank" class="my-url">www.chey.top</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">永远相信美好的事情即将发生</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">陈智林</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20200620号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-06-20</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">幽香乐容の博客</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="https://yxlr.tk" target="_blank" class="my-url">yxlr.tk</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">分享必有收获</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">幽香乐容</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20220713号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2022-08-12</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div><!-- <br> google广告 <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5317369003185250" data-ad-slot="9014150860" data-ad-format="auto" data-full-width-responsive="true"></ins><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script> -->]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">一颗小木</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://xmoon.info" target="_blank" class="my-url">xmoon.info</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">努力的把不会的变成会的</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">Moon小木</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证000000号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-05-29</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">佚名1116</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="https://ym1116.gitee.io" target="_blank" class="my-url">ym1116.gitee.io</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">阿冲小屋。不贵的房租</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">阿冲</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20011116号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2021-03-19</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>猿(媛)字ICP备案</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<style type="text/css">.info {    border: #e1e1e1 solid 1px;    border-radius: 10px;}.info .info-item {    padding: 0px;    display: flex;    /* line-height: 46px; */}.info .info-item~.info-item {    border-top: #e1e1e1 solid 1px;}.info .info-item .lable {    border-right: #e1e1e1 solid 1px;    width: 120px;    padding: 12px 20px;    text-align-last: justify;}.info .info-item .value {    flex: 1;    padding: 12px 20px;}@media (max-width: 820px) {    .container {        padding: 20px;    }}.beian-btn {    float:right;    margin-top:20px;    margin-bottom:20px;    color:blue;    text-decoration:underline;}</style><div class="info">    <div class="info-item">        <div class="lable">网站名称</div>        <b class="value">Jouiry‘s Blog</b>    </div>    <div class="info-item">        <div class="lable">网站首页</div>        <b class="value"><a href="http://www.oujiajie.xyz" target="_blank" class="my-url">www.oujiajie.xyz</a></b>    </div>    <div class="info-item">        <div class="lable">网站信息</div>        <b class="value">stay hunger，stay foolish</b>    </div>    <div class="info-item">        <div class="lable">网站作者</div>        <b class="value">Jouiry</b>    </div>    <div class="info-item">        <div class="lable">备案编号</div>        <b class="value">猿ICP证20200101号</b>    </div>    <div class="info-item">        <div class="lable">备案时间</div>        <b class="value">2020-07-24</b>    </div>    <div class="info-item">        <div class="lable">备案状态</div>        <b class="value" style="color:green;">已审核</b>    </div></div><div>    <a href="/icp" target="_self" class="beian-btn">我要备案</a></div>]]></content>
    
  </entry>
  
  
  
</search>
